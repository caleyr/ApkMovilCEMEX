"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-rater_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 51673:
/*!***************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-rater.entry.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_rater": () => (/* binding */ Rater)
/* harmony export */ });
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);



const Rater = class {
    constructor(hostRef) {
        (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /**
         * The design version of the framework
         */
        this.designVersion = null;
        /**
         * Rating from 1 - 5 stars, 0 - no rating
         */
        this.rating = 0;
        /**
         * When set to true the element is disabled and rating can be changed only programatically
         */
        this.disabled = false;
        /**
         * When set to true the element read only and rating can be changed only programatically
         */
        this.readOnly = false;
        /**
         * Specify whether component should render from right to left
         */
        this.rtl = false;
        /**
         * Small variant for rater
         */
        this.small = false;
        // Handles mouse hover
        this.hover = star => {
            for (let i = 0; i < star; i++) {
                this.stars[i].setAttribute('name', 'favourite-active');
                this.stars[i].setAttribute('color', 'bright-blue');
            }
            for (let i = star; i < 5; i++) {
                this.stars[i].setAttribute('name', 'favourite');
                this.stars[i].setAttribute('color', 'disabled-grey');
            }
        };
        // Handles mouse out and when rating is changed
        this.mouseOut = () => {
            for (let i = 0; i < this.rating; i++) {
                this.stars[i].setAttribute('name', 'favourite-active');
                this.stars[i].setAttribute('color', 'bright-blue');
            }
            for (let i = this.rating; i < 5; i++) {
                this.stars[i].setAttribute('name', 'favourite');
                this.stars[i].setAttribute('color', 'disabled-grey');
            }
        };
        this.cwcChange = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcChange", 7);
        this.cwcHover = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcHover", 7);
    }
    ratingChange(newValue) {
        if (!this.disabled) {
            if (newValue < 6 && newValue >= 0) {
                this.mouseOut();
                this.cwcChange.emit(this.rating);
            }
            else {
                console.warn('Rating can be only between 0 - 5; 0 means not rated');
                this.rating = 0;
            }
        }
        else {
            for (let i = 0; i < this.rating; i++) {
                this.stars[i].setAttribute('name', 'favourite-active');
                this.stars[i].setAttribute('color', 'disabled-grey');
            }
            for (let i = this.rating; i < 5; i++) {
                this.stars[i].setAttribute('name', 'favourite');
                this.stars[i].setAttribute('color', 'disabled-grey');
            }
        }
    }
    disableChange() {
        this.ratingChange(this.rating);
    }
    readOnlyChange() {
        this.ratingChange(this.rating);
    }
    /**
     * Rater can be controlled with arrows
     */
    handleKeyUp(ev) {
        if (!(this.readOnly || this.disabled)) {
            if (ev.key === 'ArrowLeft') {
                if (this.rtl) {
                    if (this.rating !== 5) {
                        this.rating = this.rating + 1;
                    }
                }
                else {
                    if (this.rating !== 1) {
                        this.rating = this.rating - 1;
                    }
                }
            }
            else if (ev.key === 'ArrowRight') {
                if (this.rtl) {
                    if (this.rating !== 1) {
                        this.rating = this.rating - 1;
                    }
                }
                else {
                    if (this.rating !== 5) {
                        this.rating = this.rating + 1;
                    }
                }
            }
        }
    }
    componentWillLoad() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
    }
    disconnectedCallback() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    }
    componentDidLoad() {
        this.stars = this.host.shadowRoot.querySelectorAll('cwc-icon');
        this.ratingChange(this.rating);
    }
    render() {
        return ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.H, { class: `cwc-rater ${(this.disabled || this.readOnly) && 'cwc-rater--disabled'}`, tabindex: "0" }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "sr-only" }, this.rating + ' stars out of 5'), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("cwc-icon", { class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''), designVersion: this.designVersion, name: "favourite", color: "disabled-grey", onMouseOver: () => {
                this.hover(1);
                this.cwcHover.emit([1, true]);
            }, onMouseOut: () => {
                this.mouseOut();
                this.cwcHover.emit([1, false]);
            }, onClick: () => {
                this.rating = 1;
            } }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("cwc-icon", { class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''), designVersion: this.designVersion, name: "favourite", color: "disabled-grey", onMouseOver: () => {
                this.hover(2);
                this.cwcHover.emit([2, true]);
            }, onMouseOut: () => {
                this.mouseOut();
                this.cwcHover.emit([2, false]);
            }, onClick: () => {
                this.rating = 2;
            } }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("cwc-icon", { class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''), designVersion: this.designVersion, name: "favourite", color: "disabled-grey", onMouseOver: () => {
                this.hover(3);
                this.cwcHover.emit([3, true]);
            }, onMouseOut: () => {
                this.mouseOut();
                this.cwcHover.emit([3, false]);
            }, onClick: () => {
                this.rating = 3;
            } }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("cwc-icon", { class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''), designVersion: this.designVersion, name: "favourite", color: "disabled-grey", onMouseOver: () => {
                this.hover(4);
                this.cwcHover.emit([4, true]);
            }, onMouseOut: () => {
                this.mouseOut();
                this.cwcHover.emit([4, false]);
            }, onClick: () => {
                this.rating = 4;
            } }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("cwc-icon", { class: 'cwc-rater__star' + (this.small ? ' cwc-rater__star--small' : ''), designVersion: this.designVersion, name: "favourite", color: "disabled-grey", onMouseOver: () => {
                this.hover(5);
                this.cwcHover.emit([5, true]);
            }, onMouseOut: () => {
                this.mouseOut();
                this.cwcHover.emit([5, false]);
            }, onClick: () => {
                this.rating = 5;
            } })));
    }
    get host() { return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "rating": ["ratingChange"],
        "disabled": ["disableChange"],
        "readOnly": ["readOnlyChange"]
    }; }
    static get style() { return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}[dir=ltr] :host{text-align:left}[dir=rtl] :host{text-align:right}:host{display:-ms-inline-flexbox;display:inline-flex;position:relative;text-align:start}:host(.cwc-rater--disabled){pointer-events:none}:host(:focus){outline:none}.cwc-rater__star{font-size:1.25rem;cursor:pointer}.cwc-rater__star--small{font-size:.75rem}.sr-only{position:absolute;opacity:0;pointer-events:none;width:0;height:0;overflow:hidden}"; }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-rater_entry_js.js.map