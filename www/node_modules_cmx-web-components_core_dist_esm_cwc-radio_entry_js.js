"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-radio_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 69719:
/*!***************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-radio.entry.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_radio": () => (/* binding */ CwcRadio)
/* harmony export */ });
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);



const CwcRadio = class {
    constructor(hostRef) {
        (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /**
         * The design version of the framework
         */
        this.designVersion = null;
        /**
         * Specify whether component should render from right to left
         */
        this.rtl = false;
        /**
         * When set to true the element is disabled
         */
        this.disabled = false;
        /**
         * Status of the form field.
         */
        this.status = 'regular';
        /**
         * When set to true the radio checked
         */
        this.checked = false;
        this.handleValueChange = () => {
            this.inputElement.focus();
            this.cwcClick.emit(this.value);
        };
        this.onFocus = () => {
            this.cwcFocus.emit();
        };
        this.onBlur = () => {
            this.cwcBlur.emit();
        };
        this.cwcClick = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcClick", 7);
        this.cwcKeyboardEvent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcKeyboardEvent", 7);
        this.cwcFocus = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcFocus", 7);
        this.cwcBlur = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcBlur", 7);
    }
    /**
     * Method called on value changes
     */
    setValue(newValue) {
        if (newValue && !this.disabled) {
            this.inputElement.focus();
        }
    }
    /**
     * Triggered when key released.
     * @param event Event details
     */
    handleKeyDown(ev) {
        if (ev.key !== 'Tab') {
            ev.preventDefault();
        }
    }
    /**
     * Triggered when key pressed.
     * @param event Event details
     */
    handleKeyUp(ev) {
        if (ev.key !== 'Tab') {
            ev.preventDefault();
        }
        this.cwcClick.emit(this.value);
        this.cwcKeyboardEvent.emit(ev.key);
    }
    componentWillLoad() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
    }
    disconnectedCallback() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    }
    render() {
        return ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.H, { class: this.designVersion }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { onClick: this.handleValueChange }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("input", { ref: (value) => (this.inputElement = value), role: "radio", value: this.value, class: this.status, type: "radio", name: this.name, checked: this.checked, disabled: this.disabled, onFocus: this.onFocus, onBlur: this.onBlur }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("label", null, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)))));
    }
    get host() { return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "checked": ["setValue"]
    }; }
    static get style() { return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:inline-block;position:relative}input[type=radio]{position:absolute;opacity:0;z-index:1;width:16px;height:22px;margin-right:.375rem}input[type=radio]+label{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;position:relative;height:16px;font-size:16px}[dir=ltr] input[type=radio]+label:before{margin-right:.375rem}[dir=rtl] input[type=radio]+label:before{margin-left:.375rem}input[type=radio]+label:before{content:\" \";display:inline-block;width:16px;height:16px;-webkit-box-sizing:border-box;box-sizing:border-box;border-width:1px;border-color:var(--cwc-radio-border-color,var(--cwc-color-grayscale-lightish,#b0b0b0));border-style:solid;border-radius:8px;-webkit-margin-end:.375rem;margin-inline-end:.375rem;background-color:var(--cwc-radio-background-color,var(--cwc-color-grayscale-white,#fff))}input[type=radio]+label:hover:before,input[type=radio]:focus+label:before,input[type=radio]:hover+label:before{background-color:var(--cwc-radio-hover-background-color,var(--cwc-color-grayscale-lightest,#e4e4e4))}[dir=ltr] input[type=radio]:checked+label:after{left:4px}[dir=rtl] input[type=radio]:checked+label:after{right:4px}input[type=radio]:checked+label:after{content:\" \";top:4px;inset-inline-start:4px;position:absolute;width:8px;height:8px;background-color:var(--cwc-radio-checked-background-color,var(--cwc-color-links,#3fa9f5));border-radius:4px;-webkit-animation-name:contentOpacity;animation-name:contentOpacity;-webkit-animation-duration:.33s;animation-duration:.33s}\@-webkit-keyframes contentOpacity{0%{opacity:.6}to{opacity:1}}\@keyframes contentOpacity{0%{opacity:.6}to{opacity:1}}input[type=radio]:checked.error+label:after{background-color:var(--cwc-radio-checked-error-background-color,var(--cwc-color-status-error-dark,#b71c1c))}input[type=radio]:checked.warning+label:after{background-color:var(--cwc-radio-checked-warning-background-color,var(--cwc-color-status-warning-dark,#ff8f00))}input[type=radio]:checked.success+label:after{background-color:var(--cwc-radio-checked-success-background-color,var(--cwc-color-status-success-dark,#1b5e20))}input[type=radio].error+label:before{border-color:var(--cwc-radio-error-border-color,var(--cwc-color-status-error,#ee3d42))}input[type=radio].warning+label:before{border-color:var(--cwc-radio-warning-border-color,var(--cwc-color-status-warning,#fbb03b))}input[type=radio].success+label:before{border-color:var(--cwc-radio-success-border-color,var(--cwc-color-status-success,#7ac943))}input[type=radio][disabled]+label:before{background-color:var(--cwc-radio-disabled-border-color,var(--cwc-color-grayscale-light,#d6d6d6))}"; }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-radio_entry_js.js.map