"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-pagination_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 14656:
/*!********************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-pagination.entry.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_pagination": () => (/* binding */ CwcPagination)
/* harmony export */ });
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);



var NavKeys;
(function (NavKeys) {
    NavKeys["ArrowLeft"] = "ArrowLeft";
    NavKeys["ArrowRight"] = "ArrowRight";
    NavKeys["Tab"] = "Tab";
})(NavKeys || (NavKeys = {}));
const CwcPagination = class {
    constructor(hostRef) {
        (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /**
         * The design version of the framework
         */
        this.designVersion = null;
        /**
         * The number of pagination items to have on either side of the cursor in the pagination.
         */
        this.cursorBuffer = 2;
        /**
         * Specify the active page number (first page = 0)
         */
        this.activePage = 0;
        /**
         * Specify the pagination aria-label
         */
        this.ariaLabelNav = 'Pagination Navigation';
        /**
         * Specify the pagination aria-label for the enumerated pages
         */
        this.ariaLabelLink = 'Goto Page ';
        /**
         * Specify the pagination aria-label for the previous page link
         */
        this.ariaLabelPrev = 'Goto Previous Page';
        /**
         * Specify the pagination aria-label for the next page link
         */
        this.ariaLabelNext = 'Goto Next Page';
        /**
         * Specify the pagination aria-label for the next page link
         */
        this.ariaLabelCurrent = 'Current Page, Page';
        /**
         * Specify total number of pages
         */
        this.totalPages = 1;
        /**
         * Specify whether component should render from right to left
         */
        this.rtl = false;
        this.paginationItems = [];
        this.changeEvent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcChange", 7);
    }
    /**
     * The number of pagination slots required to hold the cursor, its neighbours, and
     * the first and last entries.
     */
    getBufferedMinimum() {
        return 1 + this.cursorBuffer + 1 + this.cursorBuffer + 1;
    }
    changeActivePage(newActivePage) {
        this.currentPage = Math.max(0, Math.min(this.totalPages, newActivePage));
    }
    changeTotalPages(newTotalPages, oldTotalPages) {
        if (oldTotalPages !== newTotalPages) {
            this.setupPagination();
        }
    }
    onValueChanged(newValue, oldValue) {
        if (oldValue !== newValue) {
            this.setupPagination();
        }
    }
    /**
     * Listens to Keydown event on component for arrowkeys navigation
     */
    handleKeyDown(event) {
        const navKey = event.key;
        if (navKey in NavKeys) {
            const shadowDOM = this.host.shadowRoot;
            const allSelectableElements = shadowDOM.querySelectorAll('a');
            const length = allSelectableElements.length;
            let next = NavKeys.ArrowRight;
            let previous = NavKeys.ArrowLeft;
            if (this.rtl) {
                next = NavKeys.ArrowLeft;
                previous = NavKeys.ArrowRight;
            }
            if (!this.currentFocusedElement) {
                for (let i = 0; i < length && !this.currentFocusedElement; i++) {
                    if (allSelectableElements[i].parentElement === shadowDOM.activeElement.parentElement) {
                        this.currentFocusedElement = i;
                    }
                }
            }
            if ((navKey === previous || (navKey === NavKeys.Tab && event.shiftKey)) && this.currentFocusedElement !== 0) {
                this.currentFocusedElement--;
            }
            else if ((navKey === next || navKey === NavKeys.Tab) && this.currentFocusedElement !== length - 1) {
                this.currentFocusedElement++;
            }
            if (navKey !== NavKeys.Tab) {
                allSelectableElements[this.currentFocusedElement].focus();
            }
        }
    }
    /**
     * Lifecycle hook
     */
    componentWillLoad() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
    }
    disconnectedCallback() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    }
    componentDidLoad() {
        this.currentPage = this.activePage;
    }
    onPaginationItemClick(event) {
        event.preventDefault();
        this.currentPage = Number(event.target.innerText);
        this.changeEvent.emit(this.currentPage);
        this.currentFocusedElement = undefined;
    }
    onPaginationNextClick(event) {
        event.preventDefault();
        if (this.currentPage < this.totalPages) {
            this.currentPage++;
            this.changeEvent.emit(this.currentPage);
        }
        this.currentFocusedElement = undefined;
    }
    onPaginationPrevClick(event) {
        event.preventDefault();
        if (this.currentPage > 1) {
            this.currentPage--;
            this.changeEvent.emit(this.currentPage);
        }
        this.currentFocusedElement = undefined;
    }
    getPaginationItem(pageNumber) {
        return ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { class: 'cwc-pagination__item cwc-page-' + pageNumber }, this.currentPage === pageNumber ? ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", { class: "active", onClick: this.onPaginationItemClick.bind(this), href: "#", "aria-label": this.ariaLabelCurrent + ' ' + pageNumber, "aria-current": "true" }, pageNumber)) : ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: "#", onClick: this.onPaginationItemClick.bind(this), "aria-label": this.ariaLabelLink + ' ' + pageNumber }, pageNumber))));
    }
    get spacerElement() {
        return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { class: "cwc-pagination__item cwc-pagination__spacer" }, "...");
    }
    /**
     * Create pagination for fewer than 7 items (without spacers)
     */
    initShortPagination() {
        this.paginationItems = [];
        for (let index = 1; index <= this.totalPages; index++) {
            this.paginationItems.push(this.getPaginationItem(index));
        }
    }
    /**
     * Wraps the cursor with neighbouring pagination entries
     */
    fillArrayOfLinks() {
        // We always show the first entry, page 1, but sometimes the cursor is at #1
        // We also always show the final entry, but the same applies with the cursor.
        // When the cursor is next to an end of the pagination, then the buffer is the first or final entry.
        // "Spare" buffer blocks get added to the other side.
        let pageNumbers = [this.currentPage];
        // Add entries to wrap the cursor value
        for (let i = this.cursorBuffer; i > 0; i--) {
            pageNumbers.push(this.currentPage + i);
            pageNumbers.push(this.currentPage - i);
        }
        // Deal with any overlapping of the bounds
        let nextTop = pageNumbers.reduce((a, b) => Math.max(a, b));
        let nextLow = pageNumbers.reduce((a, b) => Math.min(a, b));
        // Anything outside the bounds should be moved within them
        const nudgedNumbers = pageNumbers
            .map(v => {
            if (v < 1) {
                nextTop++;
                return nextTop > this.totalPages ? null : nextTop;
            }
            if (v > this.totalPages) {
                nextLow--;
                return nextLow < 1 ? null : nextLow;
            }
            return v;
        })
            .filter(slot => slot !== null);
        nudgedNumbers.push(1);
        nudgedNumbers.push(this.totalPages);
        // Just the unique values, please
        pageNumbers = [];
        /*
         * I'm doing it the long way here, because the __spreadArray function that the array-spread
         * operator currently compiles to is trying to create an Array(NaN) when it runs.
         */
        nudgedNumbers.forEach(item => {
            if (pageNumbers.indexOf(item) === -1) {
                pageNumbers.push(item);
            }
        });
        pageNumbers.sort((a, b) => a - b);
        this.paginationItems = pageNumbers.map(val => this.getPaginationItem(val));
        // Now see whether the pagination needs any spacers at the start or end
        if (this.isNotAPairOfContiguousIntegers(pageNumbers[0], pageNumbers[1])) {
            this.paginationItems.splice(1, 0, this.spacerElement);
        }
        if (this.isNotAPairOfContiguousIntegers(pageNumbers[pageNumbers.length - 2], pageNumbers[pageNumbers.length - 1])) {
            this.paginationItems.splice(-1, 0, this.spacerElement);
        }
    }
    /**
     * Determines if two integers don't sit next to each other in the pagination.
     */
    isNotAPairOfContiguousIntegers(a, b) {
        return !(Math.abs(a - b) === 1);
    }
    setupPagination() {
        if (this.totalPages >= this.getBufferedMinimum()) {
            this.fillArrayOfLinks();
        }
        else {
            this.initShortPagination();
        }
    }
    render() {
        return ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.H, { role: "navigation", "aria-label": this.ariaLabelNav }, this.totalPages > 1 ? ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("ul", { class: `cwc-pagination ${this.designVersion}` }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { class: "cwc-pagination__item cwc-pagination__prev" }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: "#", onClick: this.onPaginationPrevClick.bind(this), "aria-label": this.ariaLabelPrev }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("cwc-icon", { name: this.rtl ? 'arrow-right-straight' : 'arrow-left-straight', color: "bright-blue", "hover-color": "bright-blue-dark", size: "14px" }))), this.paginationItems, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { class: "cwc-pagination__item cwc-pagination__next", dir: "ltr" }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: "#", onClick: this.onPaginationNextClick.bind(this), "aria-label": this.ariaLabelNext }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("cwc-icon", { name: this.rtl ? 'arrow-left-straight' : 'arrow-right-straight', color: "bright-blue", "hover-color": "bright-blue-dark", size: "14px" }))))) : null));
    }
    get host() { return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "activePage": ["changeActivePage"],
        "totalPages": ["changeTotalPages"],
        "currentPage": ["onValueChanged"]
    }; }
    static get style() { return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.font--true-red,.font-color--status-error{color:var(--cwc-color-status-error,#ee3d42)}.font--true-red-dark,.font-color--status-error-dark{color:var(--cwc-color-status-error-dark,#b71c1c)}.font--true-red-light,.font-color--status-error-light{color:var(--cwc-color-status-error-light,#ef9a9a)}.font--true-white,.font-color--grayscale-white{color:var(--cwc-color-grayscale-white,#fff)}.font--true-black,.font-color--grayscale-black{color:var(--cwc-color-grayscale-black,#000)}.font--true-blue,.font-color--ui-primary{color:var(--cwc-color-ui-primary,#003876)}.font--medium-blue,.font-color--primary-dark{color:var(--cwc-color-primary-dark,#002a59)}.font--medium-grey,.font-color--grayscale-medium{color:var(--cwc-color-grayscale-medium,#666)}.font--dark-grey,.font-color--grayscale-dark{color:var(--cwc-color-grayscale-dark,#333)}.font--disabled-grey,.font-color--status-disabled{color:var(--cwc-color-status-disabled,#d6d6d6)}.font--bright-orange,.font-color--status-warning{color:var(--cwc-color-status-warning,#fbb03b)}.font--bright-orange-dark,.font-color--status-warning-dark{color:var(--cwc-color-status-warning-dark,#ff8f00)}.font--bright-orange-light,.font-color--status-warning-light{color:var(--cwc-color-status-warning-light,#ffcc80)}.font--bright-green,.font-color--status-success{color:var(--cwc-color-status-success,#7ac943)}.font--bright-green-dark,.font-color--status-success-dark{color:var(--cwc-color-status-success-dark,#1b5e20)}.font--bright-green-light,.font-color--status-success-light{color:var(--cwc-color-status-success-light,#c5e1a5)}.font--bright-blue,.font-color--status-info{color:var(--cwc-color-status-info,#3fa9f5)}.font--bright-blue-dark,.font-color--status-info-dark{color:var(--cwc-color-status-info-dark,#01579b)}.font--bright-blue-light,.font-color--status-info-light{color:var(--cwc-color-status-info-light,#81d4fa)}.font--deep-blue,.font-color--primary-darkest{color:var(--cwc-color-primary-darkest,#001b3a)}.bg--true-red,.bg-color--status-error{background-color:var(--cwc-color-status-error,#ee3d42)}.bg--true-red-dark,.bg-color--status-error-dark{background-color:var(--cwc-color-status-error-dark,#b71c1c)}.bg--true-red-light,.bg-color--status-error-light{background-color:var(--cwc-color-status-error-light,#ef9a9a)}.bg--true-white,.bg-color--grayscale-white{background-color:var(--cwc-color-grayscale-white,#fff)}.bg--true-black,.bg-color--grayscale-black{background-color:var(--cwc-color-grayscale-black,#000)}.bg--true-blue,.bg-color--ui-primary{background-color:var(--cwc-color-ui-primary,#003876)}.bg--medium-blue,.bg-color--primary-dark{background-color:var(--cwc-color-primary-dark,#002a59)}.bg--medium-grey,.bg-color--grayscale-medium{background-color:var(--cwc-color-grayscale-medium,#666)}.bg--dark-grey,.bg-color--grayscale-dark{background-color:var(--cwc-color-grayscale-dark,#333)}.bg--bright-orange,.bg-color--status-warning{background-color:var(--cwc-color-status-warning,#fbb03b)}.bg--bright-orange-dark,.bg-color--status-warning-dark{background-color:var(--cwc-color-status-warning-dark,#ff8f00)}.bg--bright-orange-dlight,.bg-color--status-warning-light{background-color:var(--cwc-color-status-warning-light,#ffcc80)}.bg--bright-green,.bg-color--status-success{background-color:var(--cwc-color-status-success,#7ac943)}.bg--bright-green-dark,.bg-color--status-success-dark{background-color:var(--cwc-color-status-success-dark,#1b5e20)}.bg--bright-green-light,.bg-color--status-success-light{background-color:var(--cwc-color-status-success-light,#c5e1a5)}.bg--bright-blue,.bg-color--status-info{background-color:var(--cwc-color-status-info,#3fa9f5)}.bg--bright-blue-dark,.bg-color--status-info-dark{background-color:var(--cwc-color-status-info-dark,#01579b)}.bg--bright-blue-light,.bg-color--status-info-light{background-color:var(--cwc-color-status-info-light,#81d4fa)}.bg--deep-blue,.bg-color--primary-darkest{background-color:var(--cwc-color-primary-darkest,#001b3a)}.bg--disabled-grey,.bg-color--status-disabled{background-color:var(--cwc-color-status-disabled,#d6d6d6)}.border--true-red,.border-color--status-error{border-color:var(--cwc-color-status-error,#ee3d42)}.border--true-red-dark,.border-color--status-error-dark{border-color:var(--cwc-color-status-error-dark,#b71c1c)}.border--true-red-light,.border-color--status-error-light{border-color:var(--cwc-color-status-error-light,#ef9a9a)}.border--true-white,.border-color--grayscale-white{border-color:var(--cwc-color-grayscale-white,#fff)}.border--true-black,.border-color--grayscale-black{border-color:var(--cwc-color-grayscale-black,#000)}.border--true-blue,.border-color--ui-primary{border-color:var(--cwc-color-ui-primary,#003876)}.border--medium-blue,.border-color--primary-dark{border-color:var(--cwc-color-primary-dark,#002a59)}.border--medium-grey,.border-color--grayscale-mediun{border-color:var(--cwc-color-grayscale-medium,#666)}.border--disabled-grey,.border-color--status-disabled{border-color:var(--cwc-color-status-disabled,#d6d6d6)}.border--dark-grey,.border-color--grayscale-dark{border-color:var(--cwc-color-grayscale-dark,#333)}.border--bright-orange,.border-color--status-warning{border-color:var(--cwc-color-status-warning,#fbb03b)}.border--bright-orange-dark,.border-color--status-warning-dark{border-color:var(--cwc-color-status-warning-dark,#ff8f00)}.border--bright-orange-light,.border-color--status-warning-light{border-color:var(--cwc-color-status-warning-light,#ffcc80)}.border--bright-green,.border-color--status-success{border-color:var(--cwc-color-status-success,#7ac943)}.border--bright-green-dark,.border-color--status-success-dark{border-color:var(--cwc-color-status-success-dark,#1b5e20)}.border--bright-green-light,.border-color--status-success-light{border-color:var(--cwc-color-status-success-light,#c5e1a5)}.border--bright-blue,.border-color--status-info{border-color:var(--cwc-color-status-info,#3fa9f5)}.border--bright-blue-dark,.border-color--status-info-dark{border-color:var(--cwc-color-status-info-dark,#01579b)}.border--bright-blue-light,.border-color--status-info-light{border-color:var(--cwc-color-status-info-light,#81d4fa)}.border--deep-blue,.border-color--primary-darkest{border-color:var(--cwc-color-primary-darkest,#001b3a)}.fill--true-red,.fill-color--status-error{fill:var(--cwc-color-status-error,#ee3d42)}.fill--true-red-dark,.fill-color--status-error-dark{fill:var(--cwc-color-status-error-dark,#b71c1c)}.fill--true-red-light,.fill-color--status-error-light{fill:var(--cwc-color-status-error-light,#ef9a9a)}.fill--true-white,.fill-color--grayscale-white{fill:var(--cwc-color-grayscale-white,#fff)}.fill--true-black,.fill-color--grayscale-black{fill:var(--cwc-color-grayscale-black,#000)}.fill--true-blue,.fill-color--ui-primary{fill:var(--cwc-color-ui-primary,#003876)}.fill--medium-blue,.fill-color--primary-dark{fill:var(--cwc-color-primary-dark,#002a59)}.fill--medium-grey,.fill-color--grayscale-medium{fill:var(--cwc-color-grayscale-medium,#666)}.fill--dark-grey,.fill-color--grayscale-dark{fill:var(--cwc-color-grayscale-dark,#333)}.fill--disabled-grey,.fill-color--status-disabled{fill:var(--cwc-color-status-disabled,#d6d6d6)}.fill--bright-orange,.fill-color--status-warning{fill:var(--cwc-color-status-warning,#fbb03b)}.fill--bright-orange-dark,.fill-color--status-warning-dark{fill:var(--cwc-color-status-warning-dark,#ff8f00)}.fill--bright-orange-light,.fill-color--status-warning-light{fill:var(--cwc-color-status-warning-light,#ffcc80)}.fill--bright-green,.fill-color--status-success{fill:var(--cwc-color-status-success,#7ac943)}.fill--bright-green-dark,.fill-color--status-success-dark{fill:var(--cwc-color-status-success-dark,#1b5e20)}.fill--bright-green-light,.fill-color--status-success-light{fill:var(--cwc-color-status-success-light,#c5e1a5)}.fill--bright-blue,.fill-color--status-info{fill:var(--cwc-color-status-info,#3fa9f5)}.fill--bright-blue-dark,.fill-color--status-info-dark{fill:var(--cwc-color-status-info-dark,#01579b)}.fill--bright-blue-light,.fill-color--status-info-light{fill:var(--cwc-color-status-info-light,#81d4fa)}.fill--deep-blue,.fill-color--primary-darkest{fill:var(--cwc-color-primary-darkest,#001b3a)}.stroke--true-red,.stroke-color--status-error{stroke:var(--cwc-color-status-error,#ee3d42)}.stroke--true-red-dark,.stroke-color--status-error-dark{stroke:var(--cwc-color-status-error-dark,#b71c1c)}.stroke--true-red-light,.stroke-color--status-error-light{stroke:var(--cwc-color-status-error-light,#ef9a9a)}.stroke--true-white,.stroke-color--grayscale-white{stroke:var(--cwc-color-grayscale-white,#fff)}.stroke--true-black,.stroke-color--grayscale-black{stroke:var(--cwc-color-grayscale-black,#000)}.stroke--true-blue,.stroke-color--ui-primary{stroke:var(--cwc-color-ui-primary,#003876)}.stroke--medium-blue,.stroke-color--primary-dark{stroke:var(--cwc-color-primary-dark,#002a59)}.stroke--medium-grey,.stroke-color--grayscale-medium{stroke:var(--cwc-color-grayscale-medium,#666)}.stroke--dark-grey,.stroke-color--grayscale-dark{stroke:var(--cwc-color-grayscale-dark,#333)}.stroke--disabled-grey,.stroke-color--status-disabled{stroke:var(--cwc-color-status-disabled,#d6d6d6)}.stroke--bright-orange,.stroke-color--status-warning{stroke:var(--cwc-color-status-warning,#fbb03b)}.stroke--bright-orange-dark,.stroke-color--status-warning-dark{stroke:var(--cwc-color-status-warning-dark,#ff8f00)}.stroke--bright-orange-light,.stroke-color--status-warning-light{stroke:var(--cwc-color-status-warning-light,#ffcc80)}.stroke--bright-green,.stroke-color--status-success{stroke:var(--cwc-color-status-success,#7ac943)}.stroke--bright-green-dark,.stroke-color--status-success-dark{stroke:var(--cwc-color-status-success-dark,#1b5e20)}.stroke--bright-green-light,.stroke-color--status-success-light{stroke:var(--cwc-color-status-success-light,#c5e1a5)}.stroke--bright-blue,.stroke-color--status-info{stroke:var(--cwc-color-status-info,#3fa9f5)}.stroke--bright-blue-dark,.stroke-color--status-info-dark{stroke:var(--cwc-color-status-info-dark,#01579b)}.stroke--bright-blue-light,.stroke-color--status-info-light{stroke:var(--cwc-color-status-info-light,#81d4fa)}.stroke--deep-blue,.stroke-color--primary-darkest{stroke:var(--cwc-color-primary-darkest,#001b3a)}:host{display:inline-block}.cwc-pagination{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;list-style:none;margin:0;padding:0}.cwc-pagination__item{margin:0 8px;line-height:1rem}.cwc-pagination__item>a{background-color:transparent;border:1px solid transparent;border-radius:2px;color:var(--cwc-pagination-item-color,var(--cwc-color-grayscale-medium,#666));cursor:pointer;display:inline-block;font-size:.875rem;height:22px;line-height:23px;text-decoration:none;text-align:center;-webkit-transition:-webkit-transform .2s ease;transition:-webkit-transform .2s ease;transition:transform .2s ease;transition:transform .2s ease,-webkit-transform .2s ease;padding:0 .442rem}\@media (hover:hover){.cwc-pagination__item>a:hover{border:1px solid var(--cwc-pagination-item-hover-border-color,var(--cwc-color-links,#3fa9f5));text-decoration:none;color:var(--cwc-pagination-item-hover-color,var(--cwc-color-grayscale-medium,#666))}}.cwc-pagination__item>a:focus{border:1px solid var(--cwc-pagination-item-focus-border-color,var(--cwc-color-links,#3fa9f5));text-decoration:none;color:var(--cwc-pagination-item-focus-color,var(--cwc-color-grayscale-medium,#666));outline:none}.cwc-pagination__item>a.active{color:var(--cwc-pagination-item-active-color,var(--cwc-color-grayscale-white,#fff));background:var(--cwc-pagination-item-active-background-color,var(--cwc-color-links,#3fa9f5));cursor:default;-webkit-animation-name:activePageOpacity;animation-name:activePageOpacity;-webkit-animation-duration:.33s;animation-duration:.33s}\@-webkit-keyframes activePageOpacity{0%{opacity:.6}60%{opacity:.8}to{background:var(--cwc-pagination-item-active-background-color,var(--cwc-color-links,#3fa9f5));opacity:1}}\@keyframes activePageOpacity{0%{opacity:.6}60%{opacity:.8}to{background:var(--cwc-pagination-item-active-background-color,var(--cwc-color-links,#3fa9f5));opacity:1}}.cwc-pagination__next,.cwc-pagination__prev{margin:0 8px}.cwc-pagination__next>a,.cwc-pagination__prev>a{height:14px;width:14px;line-height:14px;color:var(--cwc-pagination-arrows-color,var(--cwc-color-links,#3fa9f5));padding:0}\@media (hover:hover){.cwc-pagination__next>a:hover,.cwc-pagination__prev>a:hover{border-color:transparent;color:var(--cwc-pagination-arrows-hover-color,var(--cwc-color-links-dark,#01579b));text-decoration:none}}\@media (hover:hover){.cwc-pagination__spacer:hover{border:none;text-decoration:none}}"; }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-pagination_entry_js.js.map