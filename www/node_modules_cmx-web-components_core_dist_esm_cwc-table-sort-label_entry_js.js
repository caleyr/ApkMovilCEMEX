"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-table-sort-label_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 28975:
/*!**************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-table-sort-label.entry.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_table_sort_label": () => (/* binding */ TableSortLabel)
/* harmony export */ });
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _index_eb5f436d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-eb5f436d.js */ 12361);
/* harmony import */ var _types_56dd385d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types-56dd385d.js */ 35528);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);





const TableSortLabel = class {
    constructor(hostRef) {
        (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /**
         * The design version of the framework
         */
        this.designVersion = null;
        /**
         * Sets corresponding sort order icon.
         */
        this.order = 'none';
        /**
         * Specify whether component should render from right to left
         */
        this.rtl = false;
        /**
         * How many times user clicked on the component.
         */
        this.clickedTimes = 0;
        this.handleClick = () => {
            this.clickedTimes++;
            if (this.clickedTimes > 2) {
                this.clickedTimes = 0;
            }
            this.cwcChange.emit(_types_56dd385d_js__WEBPACK_IMPORTED_MODULE_2__.c[this.clickedTimes]);
        };
        this.getAriaSort = () => {
            const order = _types_56dd385d_js__WEBPACK_IMPORTED_MODULE_2__.c[this.clickedTimes];
            const orderToAriaSort = new Map([
                ['none', 'none'],
                ['asc', 'ascending'],
                ['desc', 'descending'],
            ]);
            return orderToAriaSort.get(order) || 'other';
        };
        this.cwcChange = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcChange", 7);
    }
    setOrder(newValue, oldValue) {
        if (oldValue !== newValue) {
            this.clickedTimes = _types_56dd385d_js__WEBPACK_IMPORTED_MODULE_2__.c.findIndex(element => element === newValue);
        }
    }
    componentWillLoad() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_3__.i)(this);
    }
    disconnectedCallback() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    }
    componentDidLoad() {
        this.clickedTimes = _types_56dd385d_js__WEBPACK_IMPORTED_MODULE_2__.c.findIndex(element => element === this.order);
    }
    getIcon() {
        const order = _types_56dd385d_js__WEBPACK_IMPORTED_MODULE_2__.c[this.clickedTimes];
        const icons = {
            none: 'sort-idle',
            asc: 'sort-up',
            desc: 'sort-down',
        };
        return icons[order];
    }
    render() {
        return ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.H, { onClick: this.handleClick, role: "columnheader", "aria-sort": this.getAriaSort(), dir: this.rtl ? 'rtl' : 'ltr', class: this.designVersion }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("cwc-icon", { designVersion: this.designVersion, name: this.getIcon(), color: "bright-blue" })));
    }
    static get watchers() { return {
        "order": ["setOrder"]
    }; }
    static get style() { return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{cursor:pointer}:host([data-dir=rtl]) cwc-icon{padding:0 2px 0 0}cwc-icon{padding:0 0 0 2px;vertical-align:middle}"; }
};




/***/ }),

/***/ 12361:
/*!**************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/index-eb5f436d.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ isDisabled),
/* harmony export */   "b": () => (/* binding */ isFocusable),
/* harmony export */   "i": () => (/* binding */ isHidden),
/* harmony export */   "q": () => (/* binding */ queryShadowRoot),
/* harmony export */   "t": () => (/* binding */ tuple)
/* harmony export */ });
/**
 * Returns whether the element is hidden.
 * @param elem
 */
function isHidden(elem) {
    return (elem.hasAttribute('hidden') ||
        (elem.hasAttribute('aria-hidden') && elem.getAttribute('aria-hidden') !== 'false') ||
        // A quick and dirty way to check whether the element is hidden.
        // For a more fine-grained check we could use "window.getComputedStyle" but we don't because of bad performance.
        // If the element has visibility set to "hidden" or "collapse", display set to "none" or opacity set to "0" through CSS
        // we won't be able to catch it here. We accept it due to the huge performance benefits.
        elem.style.display === `none` ||
        elem.style.opacity === `0` ||
        elem.style.visibility === `hidden` ||
        elem.style.visibility === `collapse`);
}
/**
 * Returns whether the element is disabled.
 * @param elem
 */
function isDisabled(elem) {
    return (elem.hasAttribute('disabled') ||
        (elem.hasAttribute('aria-disabled') && elem.getAttribute('aria-disabled') !== 'false'));
}
/**
 * Determines whether an element is focusable.
 * Read more here: https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus/1600194#1600194
 * Or here: https://stackoverflow.com/questions/18261595/how-to-check-if-a-dom-element-is-focusable
 * @param elem
 */
function isFocusable(elem) {
    // Discard elements that are removed from the tab order.
    if (elem.getAttribute('tabindex') === '-1' || isHidden(elem) || isDisabled(elem)) {
        return false;
    }
    return (
    // At this point we know that the element can have focus (eg. won't be -1) if the tabindex attribute exists
    elem.hasAttribute('tabindex') ||
        // Anchor tags or area tags with a href set
        ((elem instanceof HTMLAnchorElement || elem instanceof HTMLAreaElement) && elem.hasAttribute('href')) ||
        // Form elements which are not disabled
        (elem instanceof HTMLButtonElement ||
            elem instanceof HTMLInputElement ||
            elem instanceof HTMLTextAreaElement ||
            elem instanceof HTMLSelectElement) ||
        // IFrames
        elem instanceof HTMLIFrameElement);
}

/**
 * Traverses the slots of the open shadowroots and returns all children matching the query.
 * @param {ShadowRoot | HTMLElement} root
 * @param skipNode
 * @param isMatch
 * @param {number} maxDepth
 * @param {number} depth
 * @returns {HTMLElement[]}
 */
function queryShadowRoot(root, skipNode, isMatch, maxDepth = 20, depth = 0) {
    let matches = [];
    // If the depth is above the max depth, abort the searching here.
    if (depth >= maxDepth) {
        return matches;
    }
    // Traverses a slot element
    const traverseSlot = (slot) => {
        // Only check nodes that are of the type Node.ELEMENT_NODE
        // Read more here https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType
        const assignedNodes = slot.assignedNodes().filter(node => node.nodeType === 1);
        if (assignedNodes.length > 0) {
            return queryShadowRoot(assignedNodes[0].parentElement, skipNode, isMatch, maxDepth, depth + 1);
        }
        return [];
    };
    // Go through each child and continue the traversing if necessary
    // Even though the typing says that children can't be undefined, Edge 15 sometimes gives an undefined value.
    // Therefore we fallback to an empty array if it is undefined.
    const children = Array.from(root.children || []);
    for (const child of children) {
        // Check if the node and its descendants should be skipped
        if (skipNode(child)) {
            continue;
        }
        // If the child matches we always add it
        if (isMatch(child)) {
            matches.push(child);
        }
        if (child.shadowRoot != null) {
            matches.push(...queryShadowRoot(child.shadowRoot, skipNode, isMatch, maxDepth, depth + 1));
        }
        else if (child.tagName === 'SLOT') {
            matches.push(...traverseSlot(child));
        }
        else {
            matches.push(...queryShadowRoot(child, skipNode, isMatch, maxDepth, depth + 1));
        }
    }
    return matches;
}

const tuple = (...args) => args;




/***/ }),

/***/ 35528:
/*!**************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/types-56dd385d.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ cwcTableSortOrder)
/* harmony export */ });
/* harmony import */ var _index_eb5f436d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-eb5f436d.js */ 12361);


const cwcTableSortOrder = (0,_index_eb5f436d_js__WEBPACK_IMPORTED_MODULE_0__.t)('none', 'asc', 'desc');




/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-table-sort-label_entry_js.js.map