"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-textarea_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 74607:
/*!******************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-textarea.entry.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_textarea": () => (/* binding */ InputTextArea)
/* harmony export */ });
/* harmony import */ var D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);



const InputTextArea = class {
  constructor(hostRef) {
    (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.inputId = `cwc-textarea-${textareaIds++}`;
    /**
     * The design version of the framework
     */

    this.designVersion = null;
    /**
     * The name of the control, which is submitted with the form data.
     */

    this.name = this.inputId;
    /**
     * The value of the textarea.
     */

    this.value = '';
    /**
     * When set to true the element is required and the label is decorated with an asterisk (*)
     */

    this.required = false;
    /**
     * Whether auto correct should be enabled when the user is entering/editing the text value.
     */

    this.autocorrect = 'off';
    /**
     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.
     */

    this.autofocus = false;
    /**
     * If `true`, the element will have its spelling and grammar checked.
     */

    this.spellcheck = false;
    /**
     * If `true`, it disables resizing of the textarea.
     */

    this.noResize = false;
    /**
     * Specify the tabindex of the native textarea element
     */

    this.nativeElementTabIndex = '0';
    /**
     * Status of the form field.
     */

    this.status = 'regular';
    /**
     * Specify whether component should render from right to left
     */

    this.rtl = false;
    /**
     * When set to true the component doesn't render form-group wrapper
     */

    this.unwrap = false;
    /**
     * Specify if input label should render for mobile
     */

    this.mobile = false;

    this.onInput = ev => {
      if (this.nativeInput) {
        this.value = this.nativeInput.value;
        this.cwcChange.emit(this.value);
      }

      this.cwcInput.emit(ev);
    };

    this.onFocus = () => {
      if (this.mobile) {
        if (this.empty) {
          this.labelEl.classList.add('float', 'float--focused');
        } else {
          this.labelEl.classList.add('float--focused');
        }
      }

      this.cwcFocus.emit();
    };

    this.onBlur = () => {
      if (this.mobile) {
        if (this.empty) {
          this.labelEl.classList.remove('float', 'float--focused');
        } else {
          this.labelEl.classList.remove('float--focused');
        }
      }

      this.cwcBlur.emit();
    };

    this.valueCheck = () => {
      this.empty = this.value === null || this.value === '' ? true : false; // if (this.value === null || this.value === '') {
      //   this.empty = true;
      // } else {
      //   this.empty = false;
      // }
    };

    this.cwcChange = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcChange", 7);
    this.cwcInput = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcInput", 7);
    this.cwcBlur = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcBlur", 7);
    this.cwcFocus = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcFocus", 7);
  }

  handleDesignVersion(newValue) {
    if (newValue === 'v2') {
      this.mobile = false;
    }
  }
  /**
   * Update the native input element when the value changes
   */


  valueChanged() {
    const nativeInput = this.nativeInput;
    const value = this.getValue();

    if (nativeInput && nativeInput.value !== value) {
      nativeInput.value = value;
    }

    if (this.mobile) {
      this.valueCheck();
    }
  }
  /**
   * Sets focus on the specified `cwc-textarea`. Use this method instead of the global
   * `input.focus()`.
   */


  setFocus() {
    var _this = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this.nativeInput) {
        _this.nativeInput.focus();
      }
    })();
  }
  /**
   * Returns the native `<textarea>` element used under the hood.
   */


  getNativeElement() {
    var _this2 = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this2.nativeInput;
    })();
  }
  /**
   * Set component value and emit cwcChange event. This is handy for emulating user input in automated testing tools.
   * @param value New value
   */


  writeValue(value) {
    var _this3 = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this3.value = value;

      _this3.cwcChange.emit(_this3.value);
    })();
  }

  getValue() {
    return this.value || '';
  }

  componentWillLoad() {
    if (this.mobile) {
      this.placeholder = '';
      this.valueCheck();
    }

    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__.i)(this);
  }

  componentDidLoad() {
    if (this.mobile) {
      if (!this.empty) {
        this.labelEl.classList.add('float');
        this.labelEl.classList.remove('cwc-form-control__label--mobile-icon');
      }
    }
  }

  disconnectedCallback() {
    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
  }

  render() {
    const inputComponent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("textarea", {
      class: `${['cwc-form-control', this.noResize && 'no-resize'].filter(c => Boolean(c)).join(' ')} ${this.designVersion}`,
      ref: el => this.nativeInput = el,
      autoFocus: this.autofocus,
      autoCorrect: this.autocorrect,
      disabled: this.disabled,
      maxLength: this.maxlength,
      minLength: this.minlength,
      id: this.inputId,
      name: this.name,
      placeholder: this.placeholder || '',
      readOnly: this.readonly,
      required: this.required,
      spellCheck: this.spellcheck,
      cols: this.cols,
      rows: this.rows,
      wrap: this.wrap,
      onInput: this.onInput,
      onBlur: this.onBlur,
      onFocus: this.onFocus,
      value: this.value,
      maxlength: this.maxlength,
      readonly: this.readonly,
      "aria-invalid": this.status === 'error',
      "aria-label": this.label,
      "aria-placeholder": this.placeholder,
      "aria-describedby": this.status === 'error' ? `${this.inputId}-error` : null,
      tabindex: this.nativeElementTabIndex,
      style: {
        width: this.cols ? 'auto' : '100%'
      }
    });
    return this.unwrap ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: this.designVersion
    }, "inputComponent") : (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: this.designVersion
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-form-group", {
      label: this.label,
      for: this.inputId,
      required: this.required,
      status: this.status,
      statusMessage: this.statusMessage,
      statusElementId: `${this.inputId}-error`,
      style: {
        width: '100%'
      },
      mobile: this.mobile,
      designVersion: this.designVersion
    }, this.mobile ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("label", {
      htmlFor: this.inputId,
      class: 'cwc-form-control__label--mobile',
      ref: el => this.labelEl = el
    }, this.label, this.label && this.required && (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      class: "required"
    }, " *")) : '', inputComponent));
  }

  get host() {
    return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "designVersion": ["handleDesignVersion"],
      "value": ["valueChanged"]
    };
  }

  static get style() {
    return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host(.v2) textarea.cwc-form-control{border-radius:8px}:host(.v2) .cwc-form-control__label--mobile{color:var(--cwc-textarea-label-mobile-color,var(--cwc-color-ui-primary-darkest,#001b3a))}:host(.v2) .error label{color:var(--cwc-textarea-label-error-color,var(--cwc-color-status-error,#ee3d42))}:host(.v2) .success label{color:var(--cwc-textarea-label-success-color,var(--cwc-color-status-success,#7ac943))}:host(.v2) .warning label{color:var(--cwc-textarea-label-warning-color,var(--cwc-color-status-warning,#fbb03b))}:host{display:inline-block}:host([disabled]) .cwc-form-control__label--mobile{background:var(--cwc-textarea-label-mobile-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}:host([disabled]) .cwc-form-control__label--mobile.float{color:var(--cwc-textarea-label-mobile-float-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-grayscale-light,#d6d6d6)),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-light,#d6d6d6),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.error textarea{border:.0625rem solid var(--cwc-textarea-error-border-color,var(--cwc-color-status-error,#ee3d42));background-color:var(--cwc-textarea-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error textarea:active,.error textarea:focus{border-color:var(--cwc-textarea-focus-error-border-color,var(--cwc-color-status-error-dark,#b71c1c));background-color:var(--cwc-textarea-focus-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error label{background-color:inherit}.error label.float{color:var(--cwc-textarea-label-error-color,var(--cwc-color-status-error,#ee3d42));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.error label.float--focused{color:var(--cwc-textarea-label-focus-error-color,var(--cwc-color-status-error-dark,#b71c1c))}.warning textarea{border:.0625rem solid var(--cwc-textarea-warning-border-color,var(--cwc-color-status-warning,#fbb03b));background-color:var(--cwc-textarea-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning textarea:active,.warning textarea:focus{border-color:var(--cwc-textarea-focus-warning-border-color,var(--cwc-color-status-warning-dark,#ff8f00));background-color:var(--cwc-textarea-focus-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning label{background-color:inherit}.warning label.float{color:var(--cwc-textarea-label-warning-color,var(--cwc-color-status-warning,#fbb03b));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.warning label.float--focused{color:var(--cwc-textarea-label-focus-warning-color,var(--cwc-color-status-warning-dark,#ff8f00))}.success textarea{border:.0625rem solid var(--cwc-textarea-success-border-color,var(--cwc-color-status-success,#7ac943));background-color:var(--cwc-textarea-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success textarea:active,.success textarea:focus{border-color:var(--cwc-textarea-focus-success-border-color,var(--cwc-color-status-success-dark,#1b5e20));background-color:var(--cwc-textarea-focus-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success label{background-color:inherit}.success label.float{color:var(--cwc-textarea-label-success-color,var(--cwc-color-status-success,#7ac943));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.success label.float--focused{color:var(--cwc-textarea-label-focus-success-color,var(--cwc-color-status-success-dark,#1b5e20))}.no-resize{resize:none}.cwc-form-control{display:block;width:100%}[dir=ltr] .cwc-form-control__label--mobile{left:16px}[dir=rtl] .cwc-form-control__label--mobile{right:16px}.cwc-form-control__label--mobile{position:absolute;top:12px;inset-inline-start:16px;color:var(--cwc-textarea-label-mobile-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem;line-height:1rem;background:var(--cwc-textarea-label-mobile-background-color,var(--cwc-color-grayscale-white,#fff));border-radius:3px;cursor:text;z-index:1}.cwc-form-control__label--mobile,.cwc-form-control__label--mobile.float{-webkit-transition:all .15s;transition:all .15s;-webkit-transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,.2,1)}.cwc-form-control__label--mobile.float{font-size:.75rem;line-height:.75rem;top:-6px;padding:0 2px;color:var(--cwc-textarea-label-mobile-float-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,color-stop(50%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-white,#fff) 50%,hsla(0,0%,100%,0))}.cwc-form-control__label--mobile.float--focused{color:var(--cwc-textarea-label-mobile-float-focus-color,var(--cwc-color-links,#3fa9f5))}textarea{font-size:1rem;line-height:1rem;border-radius:3px;min-height:2.5rem;padding:.7rem 1rem;border:.0625rem solid var(--cwc-textarea-border-color,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-textarea-background-color,var(--cwc-color-grayscale-white,#fff));font-family:inherit;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none}textarea:active,textarea:focus{outline:0 none;border-color:var(--cwc-textarea-focus-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-textarea-focus-background-color,var(--cwc-color-grayscale-white,#fff))}textarea:disabled{background-color:var(--cwc-textarea-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}textarea:disabled:active,textarea:disabled:focus{border-color:var(--cwc-textarea-disabled-focus-background-color,var(--cwc-color-elements-input-border,#adaebb))}textarea:-moz-read-only{pointer-events:none}textarea:read-only{pointer-events:none}textarea::-webkit-input-placeholder{color:var(--cwc-textarea-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem;line-height:normal!important}textarea::-moz-placeholder{color:var(--cwc-textarea-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}textarea:-ms-input-placeholder{color:var(--cwc-textarea-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}textarea:-moz-placeholder{color:var(--cwc-textarea-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}\@media (hover:hover){.regular:hover>.float{color:var(--cwc-textarea-hover-color,var(--cwc-color-links,#3fa9f5))}.error textarea:hover{border-color:var(--cwc-textarea-hover-error-border-color,var(--cwc-color-status-error-dark,#b71c1c));background-color:var(--cwc-textarea-hover-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error:hover>.float{color:var(--cwc-textarea-hover-error-color,var(--cwc-color-status-error-dark,#b71c1c))}.warning textarea:hover{border-color:var(--cwc-textarea-hover-warning-border-color,var(--cwc-color-status-warning-dark,#ff8f00));background-color:var(--cwc-textarea-hover-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning:hover>.float{color:var(--cwc-textarea-hover-warning-color,var(--cwc-color-status-warning-dark,#ff8f00))}.success textarea:hover{border-color:var(--cwc-textarea-hover-success-border-color,var(--cwc-color-status-success-dark,#1b5e20));background-color:var(--cwc-textarea-hover-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success:hover>.float{color:var(--cwc-textarea-hover-success-color,var(--cwc-color-status-success-dark,#1b5e20))}textarea:hover{outline:0 none;border-color:var(--cwc-textarea-hover-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-textarea-hover-background-color,var(--cwc-color-grayscale-white,#fff))}textarea:disabled:hover{border-color:var(--cwc-textarea-hover-disabled-border-color,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-textarea-hover-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}}";
  }

};
let textareaIds = 0;


/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-textarea_entry_js.js.map