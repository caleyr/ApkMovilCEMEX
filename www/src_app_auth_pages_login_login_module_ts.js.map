{"version":3,"file":"src_app_auth_pages_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACmB;AACG;AACxB;AAEmB;AAEvB;AAE+B;IAc3D,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAZ3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+DAAmB;YACnB,uFAA8B,EAAE;YAChC,kFAAgB;YAChB,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxB5B,oDAAoD;AACF;AAC2B;AACT;AAErB;AACD;AACkC;IAQnE,SAAS,SAAT,SAAS;IAgBpB,YACU,WAAwB,EACxB,YAA0B,EAC1B,aAAmC,EACnC,OAAsB;QAHtB,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAsB;QACnC,YAAO,GAAP,OAAO,CAAe;QAjBhC,qBAAgB,GAAG,SAAS,CAAC;QAC7B,4BAAuB,GAAG,EAAE,CAAC;QAE7B,wBAAmB,GAAG,SAAS,CAAC;QAChC,+BAA0B,GAAG,EAAE,CAAC;QAEhC,UAAK,GAAW,IAAI,CAAC;QACrB,WAAM,GAAa,EAAE,CAAC;QAEtB,YAAO,GAAW,IAAI,CAAC;QAEvB,aAAQ,GAAQ,IAAI,CAAC;QACrB,YAAO,GAAG,KAAK,CAAC;QAOd,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACzB,CAAC;IAEF,QAAQ;IACR,CAAC;IAEK,KAAK;;YACT,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC;gBACnB,OAAO;aACR;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAM,IAAI,EAAC,EAAE;gBACvE,MAAM,OAAO,GAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;gBACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC3D,IAAG,IAAI,CAAC,IAAI,KAAK,kBAAkB,IAAI,IAAI,CAAC,IAAI,KAAK,+BAA+B,EAAC;oBACnF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;oBACjD,MAAM,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;oBAChD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC,CAAC;oBACxD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;qBAAI;oBACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;YACH,CAAC,GACD,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;gBAChC,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;gBACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC,CACF,CAAC;QACJ,CAAC;KAAA;IAED,eAAe;QACb,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,uBAAuB,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC,CAAC;IACtE,CAAC;IAED;;mDAE+C;IAC/C,gBAAgB;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,+DAAmB;iBACpB,CAAC;YACF,QAAQ,EAAE,CAAC,EAAE,EAAE;oBACb,+DAAmB;oBACnB,mBAAmB;iBACpB,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,YAAY;aACrB,IAAI,CACH,4DAAY,CAAC,GAAG,CAAC,CAClB;aACA,SAAS,CAAC,IAAI,CAAC,EAAE;YACf,IAAI,CAAC,aAAa,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;mDAE+C;IAC/C,aAAa;QACX,IAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAC;YAC/D,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;YAChC,IAAI,CAAC,uBAAuB,GAAG,yBAAyB,CAAC;SACzD;aAAI;YACJ,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;YAClC,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;SAClC;QAED,IAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAC;YACtE,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;YACnC,IAAI,CAAC,0BAA0B,GAAG,yBAAyB,CAAC;SAC5D;aAAI;YACJ,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;YACrC,IAAI,CAAC,0BAA0B,GAAG,EAAE,CAAC;SACrC;IACJ,CAAC;CACF;;YAlHQ,uDAAW;YACX,sEAAY;YAIZ,kFAAoB;YAFpB,yDAAa;;AAUT,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS,CAqGrB;AArGqB;;;;;;;;;;;;;;;;;;ACfqB;IAK9B,oBAAoB,SAApB,oBAAoB;IAE/B,gBAAgB,CAAC;IAEV,iBAAiB,CAAC,QAAa;QACpC,MAAM,SAAS,GAAa,EAAE,CAAC;QAC/B,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAC;YAC1B,SAAS,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;YAChF,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,QAAQ,CAAC,KAAK,EAAE;YAClB,IAAI,OAAO,QAAQ,CAAC,KAAK,KAAK,QAAQ,EAAE;gBACtC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;iBAAM;gBACL,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;gBAC1C,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBAC7C,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAc,EAAE,EAAE;oBAClC,MAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;oBACzB,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;wBAClC,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,KAAK,YAAY,EAAE,CAAC,CAAC;oBAC9C,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;SACF;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;;AA5BY,oBAAoB;IAHhC,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,oBAAoB,CA4BhC;AA5BgC;;;;;;;;;;;;;;;ACL1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACT2C;AACA;AACpC,2CAA2C,mDAAK;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrD+C;AACxC,qBAAqB,uDAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACRkC;AAC3B,0BAA0B,2CAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9EyC;AAClC,6BAA6B,iDAAS;AAC7C,uCAAuC,qDAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5C4C;AACM;AAC3C,2BAA2B,2DAAc,CAAC,qDAAW;AACrD","sources":["./src/app/auth/pages/login/login-routing.module.ts","./src/app/auth/pages/login/login.module.ts","./src/app/auth/pages/login/login.page.ts","./src/app/services/error-messages.service.ts","./node_modules/rxjs/_esm2015/internal/Scheduler.js","./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","./node_modules/rxjs/_esm2015/internal/scheduler/Action.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/async.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CmxWebComponentsModule } from '@cmx-web-components/angular';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport { ErrorMessagesComponent } from 'src/app/utilities/error-messages/error-messages.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    CmxWebComponentsModule.forRoot(),\r\n    ComponentsModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","/* eslint-disable @typescript-eslint/dot-notation */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder,  FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { LoginService } from '../../../services/auth/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ErrorMessagesService } from '../../../services/error-messages.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  form: FormGroup;\r\n  statusInputEmail = 'regular';\r\n  statusInputMessageEmail = '';\r\n\r\n  statusInputPassword = 'regular';\r\n  statusInputMessagePassword = '';\r\n\r\n  error: string = null;\r\n  errors: string[] = [];\r\n\r\n  message: string = null;\r\n  role: string;\r\n  isDriver: any = true;  \r\n  loading = false;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private loginService: LoginService,\r\n    private errorMessages: ErrorMessagesService,\r\n    private navCtrl: NavController\r\n  ) {\r\n    this.formBuilderInput();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async login(){\r\n    if(this.form.invalid){\r\n      return;\r\n    }\r\n    this.loading = false;\r\n    await this.loginService.loginWeb(this.form.value).subscribe(async resp =>{ \r\n      const session : string = JSON.parse(resp.data)[\"token\"];\r\n      this.role = JSON.parse(atob(session.split('.')[1]))[\"Roles\"];\r\n        if(this.role !== 'Power User CEMEX' && this.role !== 'Administrador Logistico Cemex'){\r\n          this.errors = [];\r\n          await this.loginService.saveDataProfile(session);\r\n          await this.loginService.getDataProfile(session);\r\n          this.navCtrl.navigateRoot('/app/home', {animated:true});\r\n          this.loading = false;\r\n        }else{\r\n          this.loading = false;\r\n        }\r\n      },\r\n      (error) =>{\r\n        this.statusInputEmail = 'error';\r\n        this.statusInputPassword = 'error';\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onClickPassword(){\r\n    this.navCtrl.navigateRoot('/reset-password-email', {animated:true});\r\n  }\r\n\r\n  /*=============================================\r\n   FORMULARIOS REACTIVOS\r\n  =============================================*/\r\n  formBuilderInput(){\r\n    this.form = this.formBuilder.group({\r\n      email: ['', [\r\n        Validators.required,\r\n      ]],\r\n      password: ['', [\r\n        Validators.required,\r\n        // Validators.email\r\n      ]],\r\n    });\r\n\r\n    this.form.valueChanges\r\n    .pipe(\r\n      debounceTime(350),\r\n    )\r\n    .subscribe(data => {\r\n       this.validateInput();\r\n    });\r\n  }\r\n\r\n  /*=============================================\r\n   FUNCIÓN PARA VALIDAR LOS CAMPOS\r\n  =============================================*/\r\n  validateInput(){\r\n    if(this.form.get('email').errors && this.form.get('email').dirty){\r\n      this.statusInputEmail = 'error';\r\n      this.statusInputMessageEmail = 'Este campo es requerido';\r\n     }else{\r\n      this.statusInputEmail = 'regular';\r\n      this.statusInputMessageEmail = '';\r\n     }\r\n\r\n     if(this.form.get('password').errors && this.form.get('password').dirty){\r\n      this.statusInputPassword = 'error';\r\n      this.statusInputMessagePassword = 'Este campo es requerido';\r\n     }else{\r\n      this.statusInputPassword = 'regular';\r\n      this.statusInputMessagePassword = '';\r\n     }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorMessagesService {\r\n\r\n  constructor() { }\r\n\r\n  public parsearErroresAPI(response: any): string[] {\r\n    const resultado: string[] = [];\r\n    if (response.status === 500){\r\n      resultado.push('Ha ocurrido un error en el servidor. Favor intentar más tarde');\r\n      return resultado;\r\n    }\r\n\r\n    if (response.error) {\r\n      if (typeof response.error === 'string') {\r\n        resultado.push(response.error);\r\n      } else {\r\n        const mapaErrores = response.error.errors;\r\n        const entradas = Object.entries(mapaErrores);\r\n        entradas.forEach((arreglo: any[]) => {\r\n          const campo = arreglo[0];\r\n          arreglo[1].forEach((mensajeError) => {\r\n            resultado.push(`${campo}: ${mensajeError}`);\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n}\r\n","export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n"],"names":[],"sourceRoot":"webpack:///"}