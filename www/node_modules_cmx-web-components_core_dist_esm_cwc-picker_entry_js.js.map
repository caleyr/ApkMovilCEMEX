{"version":3,"file":"node_modules_cmx-web-components_core_dist_esm_cwc-picker_entry_js.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE+C;;;;;;;;;;;;;;;;;;AC3C6D;AAChB;AACpB;;AAExE;AACA;AACA;AACA,QAAQ,oDAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzwJAAwJ,cAAc;AACtK;AACA;AACA;AACA;AACA;AACA,mGAAmG,cAAc,0BAA0B;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4BAA4B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK,GAAG,WAAW;AAC1E;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,oDAAW;AAClC,yBAAyB,oDAAW;AACpC,yBAAyB,oDAAW;AACpC,iCAAiC,oDAAW;AAC5C,wBAAwB,oDAAW;AACnC,yBAAyB,oDAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oCAAoC;AACxF;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbuDAAa;AACrB;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB,cAAc,uCAAuC,sBAAsB,4DAA4D,EAAE,iBAAiB;AAC/M,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAa;AACrB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAa;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAa;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAa;AACrB;AACA;AACA;AACA;A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","sources":["./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js","./node_modules/@cmx-web-components/core/dist/esm/cwc-picker.entry.js"],"sourcesContent":["function InitializeDirectionDetection(hostElement) {\r\n    // the function that sets the dir in the shadow dom\r\n    function executeDir(dir) {\r\n        const shadowKids = hostElement.shadowRoot.childNodes;\r\n        shadowKids.forEach(element => {\r\n            element.setAttribute('dir', dir);\r\n        });\r\n    }\r\n    function intervalHandler() {\r\n        const actualDir = hostElement.dataset.dir;\r\n        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');\r\n        if (dir !== actualDir) {\r\n            hostElement.dataset.dir = dir;\r\n            hostElement.shadowRoot && executeDir(dir);\r\n            if (dir === 'rtl') {\r\n                return hostElement.setAttribute('rtl', 'true');\r\n            }\r\n            return hostElement.removeAttribute('rtl');\r\n        }\r\n    }\r\n    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);\r\n}\r\nfunction DestroyDirectionDetection(hostElement) {\r\n    if (hostElement && hostElement['rtlInterval']) {\r\n        clearInterval(hostElement['rtlInterval']);\r\n    }\r\n}\n\nfunction setDesignVersion() {\r\n    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');\r\n    return frameworkVersion ? frameworkVersion : 'v1';\r\n}\n\nfunction initBasics(componentClass) {\r\n    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());\r\n    if (!componentClass.rtl) {\r\n        componentClass.host && InitializeDirectionDetection(componentClass.host);\r\n    }\r\n}\r\nfunction destroyBasics(componentClass) {\r\n    DestroyDirectionDetection(componentClass.host);\r\n}\n\nexport { destroyBasics as d, initBasics as i };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-cf426fab.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\nimport { s as setAttributes, u as uuidv4 } from './helpers-bb43a8d9.js';\n\nconst RESPONSIVE_BREAKPOINT_AS_MAX = 768;\nconst PickerInput = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.hidden = true;\n        this.orientation = 'nn';\n        this.layerStyle = {};\n        this.valueLabel = '';\n        this.pickerId = null;\n        this.highlightedOption = null;\n        this.isFocused = false;\n        this.changeByAction = false;\n        this.fromControlValue = false;\n        this.overlayCss = `\n  .cwc-picker__overlay {\n    display: block;\n    position: fixed;\n    z-index: 999;\n    background-image: linear-gradient(180deg, #3FA9F5 0%, #3FA9F5 3px, #FFF 3px, #FFF 100%);\n    border-radius: 3px;\n    -webkit-box-shadow: 0 8px 13px rgba(0, 0, 0, 0.3);\n    box-shadow: 0 8px 13px rgba(0, 0, 0, 0.3);\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    overflow: hidden;\n    opacity: 1;\n    max-height: 300px;\n    max-width: 80vw;\n    padding-top: 3px;\n    transition: opacity 300ms ease, transform 250ms ease;\n  }\n  .cwc-picker__overlay.cwc-picker--hidden {\n    opacity: 0;\n    pointer-events: none;\n  }\n  .cwc-picker__overlay.pp, .cwc-picker__overlay.np {\n    -ms-flex-item-align: end;\n    align-self: flex-end;\n    -webkit-box-shadow: 0 -8px 13px rgba(0, 0, 0, 0.3);\n    box-shadow: 0 -8px 13px rgba(0, 0, 0, 0.3);\n    background-image: linear-gradient(0deg, #3FA9F5 0%, #3FA9F5 3px, #FFF 3px, #FFF 100%);\n    padding-bottom: 3px; // set in pixels cause of the line width;\n    padding-top: 0px;\n  }\n  [dir=\"ltr\"] .cwc-picker__overlay-header::before{\n    margin-left: 1.5em;\n  }\n  [dir=\"rtl\"] .cwc-picker__overlay-header::before{\n    margin-right: 1.5em;\n  }\n  .cwc-picker__overlay-header::before {\n    content: \"\\\\E929\";\n    font-family: \"dls-icons\";\n    position: absolute;\n    line-height: 1.5rem;\n    font-size: 1rem;\n    top: 0.5rem;\n    color: #3FA9F5;\n    pointer-events: none;\n    -webkit-margin-start: 1.5em;\n            margin-inline-start: 1.5em;\n    margin-top: 2px;\n  }\n  .cwc-picker__overlay-footer {\n    padding: 0.75rem 0;\n    border-top: 1px solid #ADAEBB;\n    margin: 0 1rem;\n    display: -ms-flexbox;\n    display: flex;\n  }\n  .cwc-picker__overlay-footer--justify-start {\n    -ms-flex-pack: start;\n    justify-content: flex-start;\n  }\n  .cwc-picker__overlay-footer--justify-end {\n    -ms-flex-pack: end;\n    justify-content: flex-end;\n  }\n  .cwc-picker__overlay-filter {\n    margin: 0 1rem;\n    padding: 0;\n    padding-inline-start: 2rem;\n    font-family: \"Roboto\", sans-serif;\n    border: none;\n    border-bottom: 1px solid #ADAEBB;\n    width: calc(100% - 2rem);\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    font-size: 1rem;\n    height: 2.5rem;\n    outline: none;\n  }\n  .cwc-picker__options-scroller {\n    -ms-flex: 1 1 auto;\n    flex: 1 1 auto;\n    overflow-y: auto;\n  }\n\n  .cwc-picker__options-scroller--empty::before{\n    content:attr(data-empty-message);\n    display:block;\n    padding: 0.75rem 1rem;\n    color:#666;\n  }\n  .cwc-picker__option {\n    padding: 0.625rem 2rem;\n    cursor: pointer;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-align: center;\n    align-items: center;\n    position: relative;\n  }\n  .cwc-picker__option--highlighted {\n    background-color: #F4F6F9;\n  }\n  .cwc-picker__option[data-selected=true]::before {\n    content: \"\\\\e93c\";\n    font-family: 'dls-icons' !important;\n    speak: none;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    margin-inline-start: -1.375rem;\n    color: #3FA9F5;\n  }\n\n  .cwc-picker__option--filtered {\n    display:none;\n  }\n\n  .cwc-picker--multiple .cwc-picker__option[data-selected=false]::before {\n    content: \"\\\\e911\";\n    font-family: 'dls-icons' !important;\n    speak: none;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    margin-inline-start: -1.375rem;\n    color: #ADAEBB;\n  }\n\n  .cwc-picker--multiple .cwc-picker__option[data-selected=true]::before {\n    content: \"\\\\e910\";\n  }\n\n  .cwc-picker--multiple .cwc-picker__option {\n    padding: 0.625rem 3.125rem;\n  }\n\n  @media (max-width: 767px) {\n    .cwc-picker__overlay {\n      top: 0 !important;\n      left: 0 !important;\n      width: 100% !important;\n      height: 100vh !important;\n      max-height: 100vh !important;\n      max-width: 100vw !important;\n      -ms-flex-align: center;\n      align-items: center;\n      -ms-flex-pack: center;\n      justify-content: center;\n      background-color: rgba(0, 27, 58, 0.8);\n      pointer-events: none !important;\n      min-width: 0 !important;\n    }\n    .cwc-picker__overlay.cwc-picker--visible{\n      pointer-events: all !important;\n    }\n    .cwc-picker__overlay.nn, .cwc-picker__overlay.pn, .cwc-picker__overlay.pp, .cwc-picker__overlay.np {\n      background-image: none;\n    }\n    .cwc-picker__options-scroller,\n    .cwc-picker__overlay-header{\n      background-color: #fff;\n      max-height: calc(100vh - 64px);\n      width: calc(100vw - 64px);\n      display: block;\n      flex: 0 0 auto;\n      border-top: 3px solid #3FA9F5;\n      position:relative;\n    }\n    .cwc-picker__overlay-header + .cwc-picker__options-scroller {\n      border-top: none;\n    }\n    .cwc-picker__overlay-footer{\n      width: calc(100vw - 64px);\n      background-color: #fff;\n      padding: 0.75rem;\n      box-sizing: border-box;\n    }\n  }\n  `;\n        /**\n         * The design version of the framework\n         */\n        this.designVersion = null;\n        /** Forces the overlay to open in a certain direction. Possible values are \"ne\", \"se\", \"sw\" and \"nw\" */\n        this.direction = null;\n        /** disables the overlay funcitonality */\n        this.disabled = false;\n        /** Defines max height in px of the select dropdown */\n        this.dropdownMaxHeight = null;\n        /** When set to true, dropdown will show an options filtering input */\n        this.filter = false;\n        /** Placeholder for options filter input */\n        this.filterPlaceholder = 'Filter Options';\n        /** Placeholder for options filter input */\n        this.filterEmptyMessage = 'No options match your query';\n        /** A CTA Button element in the footer of the select */\n        this.footerCta = false;\n        /** The Variant of the CTA Butoon */\n        this.footerCtaVariant = 'link';\n        /** The position of the CTA Button Icon */\n        this.footerCtaIconPosition = 'leading';\n        /** The position of the CTA Button Icon */\n        this.footerCtaJustify = 'start';\n        /** Input label */\n        this.label = null;\n        /** When set to true, loader will appear inside the select */\n        this.loading = false;\n        /** Defines if the options will be multiple (with checkbox) */\n        this.multiple = false;\n        /** Special implementation of mobile input (material design like) */\n        this.mobile = false;\n        /** disables overlay toggling on target element click */\n        this.noToggle = false;\n        /** When set to true the element is required and the label is decorated with an asterisk (*) */\n        this.required = false;\n        /** Specify whether component should render from right to left */\n        this.rtl = false;\n        /** Defines whether on multiple option should show option \"Select All\" */\n        this.selectAll = false;\n        /** Label for Select All option */\n        this.selectAllLabel = 'Select All';\n        /** Shows and hides the overlay */\n        this.show = false;\n        /** Status of the form field. */\n        this.status = 'regular';\n        /**\n         * Defines if values should be treated as strings or objects. If set to true, The output value will be the option string value instead of the { name, value } object.\n         */\n        this.stringValues = false;\n        /** Defines if the select has got to be rendered with out supporting chrome. */\n        this.unwrap = false;\n        /**\n         * Provides a means to read and replace the selections for this component. Value type is { name: string; value: string | number; } | string | number\n         */\n        this.value = null;\n        /** This controls the private inner working of value getting setting */\n        this.controlValue = null;\n        /** Specify the variant of the picker */\n        this.variant = 'regular';\n        this.selectHighlighted = e => {\n            const clickValue = this.highlightedOption.dataset.value;\n            const pickedSelection = this.host.querySelector('option[value=\"' + clickValue + '\"]');\n            // let's set this flag so the change doesn't occur twice\n            this.changeByAction = true;\n            // on single selection check if i selected the same value\n            if (!this.multiple) {\n                const currentSelection = this.host.querySelector('option[selected]');\n                // set actual option as selected\n                if (currentSelection !== pickedSelection) {\n                    if (currentSelection) {\n                        currentSelection.removeAttribute('selected');\n                    }\n                    pickedSelection.setAttribute('selected', 'selected');\n                }\n                this.controlValue = {\n                    value: this.highlightedOption.dataset.value,\n                    name: this.highlightedOption.dataset.name,\n                };\n            }\n            else {\n                const options = this.host.querySelectorAll('option');\n                let currentSelections = Array.from(this.host.querySelectorAll('option[selected]'));\n                const valueArray = [];\n                // check if this is our select all option\n                if (clickValue === 'cwc-picker-select-all-option') {\n                    if (options.length === currentSelections.length) {\n                        // deselect all\n                        options.forEach(option => {\n                            option.removeAttribute('selected');\n                        });\n                        // selectButton.setAttribute('data-selected', 'false');\n                    }\n                    else {\n                        // select all\n                        options.forEach(option => {\n                            option.setAttribute('selected', 'selected');\n                            const valueObject = {\n                                value: option.value,\n                                name: option.innerText,\n                            };\n                            valueArray.push(valueObject);\n                        });\n                        // selectButton.setAttribute('data-selected', 'true');\n                    }\n                }\n                else {\n                    // on multiple selection check if what i clicked is not selected and select/deselect accordingly\n                    if (pickedSelection.getAttribute('selected') === 'selected') {\n                        // deselect\n                        pickedSelection.removeAttribute('selected');\n                        currentSelections = currentSelections.filter(selection => {\n                            return selection !== pickedSelection;\n                        });\n                    }\n                    else {\n                        // select\n                        pickedSelection.setAttribute('selected', 'selected');\n                        if (currentSelections.indexOf(pickedSelection) === -1) {\n                            currentSelections.push(pickedSelection);\n                        }\n                    }\n                    currentSelections.forEach((selection) => {\n                        const valueObject = {\n                            value: selection.value,\n                            name: selection.innerText,\n                        };\n                        valueArray.push(valueObject);\n                    });\n                }\n                this.controlValue = valueArray;\n                // check/uncheck select all if present and needed\n                if (this.layer && this.selectAll) {\n                    const selectButton = this.layer.querySelector('div[data-value=cwc-picker-select-all-option]');\n                    selectButton.setAttribute('data-selected', options.length === valueArray.length ? 'true' : 'false');\n                }\n            }\n            this.changeInputText();\n            if (!e.silent) {\n                this.emitNewValue();\n                if (!this.multiple && !this.noToggle) {\n                    this.hideOverlay({ target: this.targetElement });\n                }\n                this.targetElement.focus();\n            }\n        };\n        this.handleKeystrokes = e => {\n            e.preventDefault();\n            // get the pressed key\n            const key = e.code;\n            // we let tab get used normally to advance back and forth in the tabindex\n            if (key !== 'Tab') {\n                // if not tab, let's prevent default behavior to act upon the keystroke\n                // get the adequate funciton for each keystroke\n                const keyFn = this.getKeystrokeFunction(key);\n                // if there's a function\n                if (keyFn) {\n                    // execute\n                    keyFn(e);\n                } // add support for filtering keydown implementation here on else\n            }\n        };\n        this.handleBlur = () => {\n            this.isFocused = false;\n            this.cwcBlur.emit();\n            this.targetElement.classList.remove('cwc-picker__input--active');\n            const label = this.targetElement.previousSibling;\n            if (label) {\n                label.classList.remove('cwc-picker__label--active');\n            }\n            document.removeEventListener('focusin', this.hasBlured);\n            document.removeEventListener('keydown', this.handleKeystrokes);\n            document.removeEventListener('click', this.hasBlured);\n        };\n        // let's emulate the select's behavior of blur when clicking outside of it.\n        this.hasBlured = e => {\n            const clickedOnElement = e.target === this.host;\n            const clickedWithinLayer = this.layer.contains(e.target);\n            if (!clickedOnElement && !clickedWithinLayer) {\n                this.handleBlur();\n            }\n        };\n        this.onFocus = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            if (!this.isFocused) {\n                this.targetElement.classList.add('cwc-picker__input--active');\n                const label = this.targetElement.previousSibling;\n                if (label) {\n                    label.classList.add('cwc-picker__label--active');\n                }\n                this.isFocused = true;\n                this.cwcFocus.emit();\n                setTimeout(() => {\n                    document.addEventListener('click', this.hasBlured);\n                    document.addEventListener('keydown', this.handleKeystrokes);\n                    document.addEventListener('focusin', this.hasBlured);\n                }, 0);\n            }\n        };\n        this.setOrientation = orientation => {\n            this.orientation = orientation;\n            this.layer.classList.remove('nn');\n            this.layer.classList.remove('np');\n            this.layer.classList.remove('pp');\n            this.layer.classList.remove('pn');\n            this.layer.classList.add(orientation);\n        };\n        this.setLayerStyle = layerStyles => {\n            const fullStyle = Object.assign({}, layerStyles);\n            Object.keys(fullStyle).forEach(style => {\n                this.layer.style[style] = fullStyle[style];\n            });\n        };\n        this.positionOverlay = () => {\n            // find position on screen\n            const elementDimensions = this.targetElement.getBoundingClientRect();\n            if (this.layer) {\n                // get overlay dimensions\n                const layerDimensions = this.layer.getBoundingClientRect();\n                // get window width and height\n                const windowDimensions = {\n                    width: document.documentElement.clientWidth,\n                    height: document.documentElement.clientHeight,\n                };\n                // define base overlay style\n                const layerStyle = {\n                    left: '',\n                    top: '',\n                    minWidth: elementDimensions.width + 'px',\n                };\n                let caseString;\n                let flow;\n                let lateralOverflow;\n                let verticalOverflow;\n                if (this.direction) {\n                    flow = 'ltr';\n                    const directionArray = this.direction.split('');\n                    caseString = (directionArray[1] === 'w' ? 'p' : 'n') + (directionArray[0] === 'n' ? 'p' : 'n');\n                }\n                else {\n                    if (!this.rtl) {\n                        // calculate if overflows\n                        lateralOverflow = elementDimensions.left + layerDimensions.width - windowDimensions.width;\n                        verticalOverflow = elementDimensions.top + layerDimensions.height - windowDimensions.height;\n                        // define the overflow scenario for a particular class and the positioning switch\n                        caseString = (lateralOverflow > 0 ? 'p' : 'n') + (verticalOverflow > 0 ? 'p' : 'n');\n                        flow = 'ltr';\n                    }\n                    else {\n                        // calculate if overflows\n                        const endOverflow = elementDimensions.right - layerDimensions.width;\n                        const startOverflow = elementDimensions.left + layerDimensions.width - windowDimensions.width;\n                        verticalOverflow = elementDimensions.top + layerDimensions.height - windowDimensions.height;\n                        const sideOverflow = endOverflow < 0 && startOverflow < 0;\n                        // define the overflow scenario for a particular class and the positioning switch\n                        caseString = (sideOverflow ? 'p' : 'n') + (verticalOverflow > 0 ? 'p' : 'n');\n                        flow = 'rtl';\n                    }\n                }\n                // get the top left values with the orientation string\n                const topleft = this.getOrientation(`${flow}_${caseString}`, elementDimensions, layerDimensions);\n                // assign the new layer style\n                const fullStyle = Object.assign(Object.assign({}, layerStyle), topleft);\n                this.setLayerStyle(fullStyle);\n                // assign the orientation for custom orientation classes\n                this.setOrientation(caseString);\n            }\n        };\n        // this funciton shows the overlay\n        this.showOverlay = () => {\n            this.targetElement.classList.add('open');\n            setTimeout(() => {\n                document.addEventListener('scroll', this.hideOverlay, true);\n                document.addEventListener('cwcScroll', this.hideOverlay, true);\n                window.addEventListener('resize', this.hideOverlay);\n                if (!this.noToggle) {\n                    document.addEventListener('click', this.hideOverlay);\n                }\n            });\n            this.positionOverlay();\n            this.layerStyle = Object.assign({}, this.layerStyle);\n            this.hidden = false;\n            this.layer.classList.remove('cwc-picker--hidden');\n            this.layer.classList.add('cwc-picker--visible');\n            this.showEvent.emit(true);\n        };\n        // this function hides the overlay\n        this.hideOverlay = e => {\n            this.targetElement.classList.remove('open');\n            const target = e.target;\n            const iw = this.layer.contains(target);\n            const hideFn = () => {\n                document.removeEventListener('scroll', this.hideOverlay, true);\n                document.removeEventListener('cwcScroll', this.hideOverlay, true);\n                window.removeEventListener('resize', this.hideOverlay);\n                if (!this.noToggle) {\n                    document.removeEventListener('click', this.hideOverlay);\n                }\n                this.layerStyle = Object.assign({}, this.layerStyle);\n                this.hidden = true;\n                this.layer.classList.remove('cwc-picker--visible');\n                this.layer.classList.add('cwc-picker--hidden');\n                this.showEvent.emit(false);\n            };\n            if (!iw) {\n                hideFn();\n            }\n            else {\n                // let's verify if it's mobile and the backdrop has been clicked\n                const winWidth = window.innerWidth;\n                if (winWidth < RESPONSIVE_BREAKPOINT_AS_MAX && e.target === this.layer) {\n                    hideFn();\n                }\n            }\n        };\n        // this function toggles the overlay state\n        this.toggleOverlay = e => {\n            if (!this.disabled && !this.noToggle) {\n                if (this.hidden) {\n                    return this.showOverlay();\n                }\n                return this.hideOverlay(e);\n            }\n        };\n        this.highlightOptionByEvent = (e) => {\n            const highlightedOption = this.layer.querySelector('.cwc-picker__option--highlighted');\n            if (highlightedOption) {\n                highlightedOption.classList.remove('cwc-picker__option--highlighted');\n            }\n            const target = e.target;\n            target.classList.add('cwc-picker__option--highlighted');\n            this.highlightedOption = target;\n        };\n        this.filterOptions = (fString) => {\n            this.emitFilterValue(fString);\n            const layerOptions = this.layer.querySelectorAll('.cwc-picker__option');\n            let optionAvailable = false;\n            layerOptions.forEach((option) => {\n                const optionLabel = option.dataset.name.toLowerCase();\n                const filter = fString.toLowerCase();\n                const match = optionLabel.indexOf(filter) > -1 ? true : false;\n                // determine if there's a match to show empty message or not\n                if (!optionAvailable && match) {\n                    optionAvailable = true;\n                }\n                if (fString) {\n                    // add or remove filter class\n                    option.classList[match ? 'remove' : 'add']('cwc-picker__option--filtered');\n                }\n                else {\n                    option.classList.remove('cwc-picker__option--filtered');\n                }\n            });\n            // let's see if there's an option available and tell the user if not\n            const optionScroller = this.layer.querySelector('.cwc-picker__options-scroller');\n            if (!optionAvailable) {\n                optionScroller.classList.add('cwc-picker__options-scroller--empty');\n            }\n            else {\n                optionScroller.classList.remove('cwc-picker__options-scroller--empty');\n            }\n        };\n        this.createSelectAllCta = () => {\n            const modelOption = document.createElement('option');\n            modelOption.setAttribute('value', 'cwc-picker-select-all-option');\n            modelOption.innerText = this.selectAllLabel;\n            const selectAllCta = this.createOption(modelOption);\n            return selectAllCta;\n        };\n        this.removeSelectionByValue = optionValue => {\n            if (this.multiple) {\n                const newValue = [].concat(this.controlValue);\n                this.controlValue = newValue.filter(selection => {\n                    return selection.value !== optionValue;\n                });\n            }\n            else {\n                this.controlValue = null;\n            }\n            this.changeInputText();\n        };\n        this.mutationHandler = mutations => {\n            mutations.forEach(mutation => {\n                if (mutation.type === 'childList') {\n                    // get added nodes\n                    mutation.addedNodes.forEach(node => {\n                        if (node.nodeType === 1 && node.nodeName === 'OPTION') {\n                            const option = this.createOption(node);\n                            this.optionsScroller.appendChild(option);\n                        }\n                    });\n                    // get removals\n                    mutation.removedNodes.forEach(node => {\n                        if (node.nodeType === 1 && node.nodeName === 'OPTION') {\n                            const optionValue = node.getAttribute('value');\n                            this.removeOptionByValue(optionValue);\n                        }\n                    });\n                }\n                // change attribute of the option\n                if (mutation.type === 'attributes') {\n                    const attributeName = mutation.attributeName;\n                    const oldValue = mutation.oldValue;\n                    const newValue = mutation.target.getAttribute(attributeName);\n                    const optionValue = attributeName === 'value' ? oldValue : mutation.target.getAttribute('value');\n                    this.changeOptionAttributeByValue(optionValue, attributeName, oldValue, newValue);\n                }\n                // change text within an option\n                if (mutation.type === 'characterData') {\n                    const option = mutation.target.parentNode;\n                    const optionValue = option.getAttribute('value');\n                    this.changeOptionTextByValue(optionValue, mutation.target.textContent);\n                }\n            });\n        };\n        this.cwcBlur = createEvent(this, \"cwcBlur\", 7);\n        this.cwcChange = createEvent(this, \"cwcChange\", 7);\n        this.cwcFilter = createEvent(this, \"cwcFilter\", 7);\n        this.cwcPickerCtaClick = createEvent(this, \"cwcPickerCtaClick\", 7);\n        this.cwcFocus = createEvent(this, \"cwcFocus\", 7);\n        this.showEvent = createEvent(this, \"cwcShow\", 7);\n    }\n    updateMultiple(newValue, oldValue) {\n        if (newValue !== oldValue) {\n            if (newValue === true) {\n                // convert single to multiple\n                if (this.controlValue) {\n                    const zeValue = [];\n                    zeValue.push(this.controlValue);\n                    this.controlValue = zeValue;\n                }\n            }\n            else {\n                // convert multiple to single\n                if (Array.of(this.controlValue).length > 0) {\n                    this.controlValue = this.controlValue[0];\n                }\n                const selectedOptions = this.host.querySelectorAll('option[selected]');\n                if (selectedOptions.length > 1) {\n                    for (let i = 1; i < selectedOptions.length; i++) {\n                        selectedOptions[i].removeAttribute('selected');\n                    }\n                }\n            }\n            // reinitialize layer\n            this.componentDidUnload();\n            this.componentDidLoad();\n            // emit new value as it changed for sure\n            this.emitNewValue();\n        }\n    }\n    updateDir(isRtl) {\n        this.layer.setAttribute('dir', isRtl ? 'rtl' : 'ltr');\n        this.positionOverlay();\n    }\n    handleShow(newValue, oldValue) {\n        if (newValue !== oldValue) {\n            if (this.show) {\n                this.showOverlay();\n            }\n            else {\n                this.hideOverlay({\n                    target: this.targetElement,\n                    composedPath() {\n                        return false;\n                    },\n                });\n            }\n        }\n    }\n    updateStringValues() {\n        this.updateValueFromControlValue();\n    }\n    handleValue(newValue) {\n        if (!this.fromControlValue) {\n            if (this.isCwcPickerOption(newValue)) {\n                // should be a CwcPickerOption\n                this.controlValue = newValue;\n            }\n            else {\n                // can be CwcPickerOptions, string, number, or array of either\n                if (Array.isArray(newValue)) {\n                    // either CwcPickerOptions or an array of string|number\n                    if (newValue.length > 0) {\n                        if (this.isCwcPickerOptions(newValue)) {\n                            // array of CwcPickerOption\n                            this.controlValue = newValue;\n                        }\n                        else {\n                            // array of string|number\n                            const theArray = [];\n                            newValue.forEach((value) => {\n                                const layerOption = this.layer.querySelector('[data-value=\"' + value + '\"]');\n                                if (layerOption) {\n                                    theArray.push({ value, name: layerOption.innerText });\n                                }\n                            });\n                            this.controlValue = theArray;\n                        }\n                    }\n                }\n                else {\n                    // should be string|number\n                    // get the option element (if exists)\n                    const layerOption = this.layer.querySelector('[data-value=\"' + newValue + '\"]');\n                    if (layerOption) {\n                        this.controlValue = { value: newValue, name: layerOption.innerText };\n                    }\n                }\n            }\n        }\n        this.fromControlValue = false;\n    }\n    setValueByProp(newValue, oldValue) {\n        // WE USE THIS METHOD ONLY FOR WHEN THE VALUE HAS BEEN SET PROGRAMATICALLY FROM OUTSIDE THE COMPONENT\n        // BY CHANGING THE VALUE PROPERTY\n        // THE REGULAR METHOD TO SET VALUE BY CLICKING OPTIONS IS IN THE METHOD \"selectHighlighted\"\n        if (this.changeByAction) {\n            this.changeByAction = false;\n            this.updateValueFromControlValue();\n            return;\n        }\n        const areEqualShallow = (a, b) => {\n            try {\n                for (const key in a) {\n                    if (!(key in b) || a[key] !== b[key]) {\n                        return false;\n                    }\n                }\n                for (const key in b) {\n                    if (!(key in a) || a[key] !== b[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        };\n        let valuesEqual = false;\n        if (!this.multiple) {\n            valuesEqual = areEqualShallow(newValue, oldValue);\n        }\n        if (!valuesEqual) {\n            // if the new value is null then deselect everything\n            if (!newValue) {\n                // deselect everything\n                this.deselectEveryting();\n                this.emitNewValue();\n                return;\n            }\n            // a funciton to check the validity of a value set programatically\n            const valueIsValid = dataValue => {\n                // get the option element (if exists)\n                const layerOption = this.layer.querySelector('[data-value=\"' + dataValue + '\"]');\n                if (layerOption) {\n                    return layerOption;\n                }\n                return false;\n            };\n            // a funciton to highlight and select a value\n            const highlightAndSelect = layerOption => {\n                if (layerOption) {\n                    this.highlightedOption = layerOption;\n                    this.selectHighlighted({ silent: true });\n                }\n            };\n            if (this.multiple) {\n                // check if it is an array\n                if (Array.isArray(newValue)) {\n                    const defNewValueArray = [];\n                    newValue.forEach(option => {\n                        if (option.name && option.value) {\n                            // lets see if the option is valid and get the layer element\n                            const valueAcceptedOption = valueIsValid(option.value);\n                            if (!valueAcceptedOption) {\n                                throw new Error('option with value ' + option.value + 'is not part of the picker options');\n                            }\n                            else {\n                                // it is valid, so let's push it to an array\n                                defNewValueArray.push(valueAcceptedOption);\n                            }\n                        }\n                    });\n                    // since it is programatically, deselect everything\n                    this.deselectEveryting();\n                    // go through the array and select the options programatically\n                    defNewValueArray.forEach(option => {\n                        highlightAndSelect(option);\n                    });\n                }\n            }\n            else {\n                if (newValue.name && newValue.value) {\n                    // lets see if the option is valid and get the layer element\n                    const valueAcceptedOption = valueIsValid(newValue.value);\n                    if (!valueAcceptedOption) {\n                        this.controlValue = oldValue;\n                        throw new Error('value is not part of the picker options');\n                    }\n                    else {\n                        // if it's valid then select the option programatically\n                        highlightAndSelect(valueAcceptedOption);\n                    }\n                }\n            }\n            // emit the new value;\n            this.emitNewValue();\n        }\n        this.updateValueFromControlValue();\n    }\n    updateValueFromControlValue() {\n        const value = this.controlValue;\n        this.fromControlValue = true;\n        this.value = this.stringValues\n            ? Array.isArray(value)\n                ? value.map((item) => item.value)\n                : value.value\n            : value;\n    }\n    isCwcPickerOption(value) {\n        return typeof value === 'object' && value.name && value.value;\n    }\n    isCwcPickerOptions(value) {\n        return (Array.isArray(value) &&\n            value.length > 0 &&\n            value.every(option => {\n                return this.isCwcPickerOption(option);\n            }));\n    }\n    deselectEveryting() {\n        const currentSelections = this.host.querySelectorAll('option[selected]');\n        currentSelections.forEach(option => {\n            option.removeAttribute('selected');\n        });\n        this.changeInputText();\n    }\n    navigateList(downWards = true) {\n        // get highlighted element\n        const highlightedOption = this.layer.querySelector('.cwc-picker__option.cwc-picker__option--highlighted');\n        let nextItem = null;\n        if (highlightedOption) {\n            // determine if it's the first or last\n            const possibleNextItem = downWards\n                ? highlightedOption.nextElementSibling\n                : highlightedOption.previousElementSibling;\n            nextItem = possibleNextItem ? possibleNextItem : highlightedOption;\n            highlightedOption.classList.remove('cwc-picker__option--highlighted');\n        }\n        else {\n            nextItem = this.layer.querySelector('.cwc-picker__option');\n        }\n        nextItem.classList.add('cwc-picker__option--highlighted');\n        // we scroll the option into view if it's not.\n        nextItem.scrollIntoView(false);\n        this.highlightedOption = nextItem;\n    }\n    emitNewValue() {\n        this.cwcChange.emit(this.value);\n    }\n    emitFilterValue(filterValue) {\n        this.cwcFilter.emit(filterValue);\n    }\n    changeInputText() {\n        let valueLabel = '';\n        if (Array.isArray(this.controlValue)) {\n            // multiple values\n            this.controlValue.forEach((item, i) => {\n                const cvLength = this.controlValue['length'];\n                console.log(i, this.controlValue, cvLength);\n                const isNotLastElement = i < cvLength - 1;\n                valueLabel += item.name + (isNotLastElement ? ', ' : ' ');\n            });\n        }\n        else {\n            // single value\n            if (this.controlValue) {\n                valueLabel = this.controlValue.name;\n            }\n        }\n        this.valueLabel = valueLabel;\n    }\n    getKeystrokeFunction(key) {\n        const keys = new Map();\n        keys.set('ArrowDown', () => {\n            if (!this.disabled) {\n                const showDropdown = this.layer.classList.contains('cwc-picker--visible');\n                if (!showDropdown && !this.noToggle) {\n                    this.showOverlay();\n                }\n                this.navigateList(true);\n            }\n        });\n        keys.set('ArrowUp', () => {\n            if (!this.disabled) {\n                this.navigateList(false);\n            }\n        });\n        keys.set('Escape', e => {\n            if (!this.disabled && !this.noToggle) {\n                this.hideOverlay(e);\n            }\n        });\n        keys.set('Space', e => {\n            if (!this.disabled) {\n                const showDropdown = this.layer.classList.contains('cwc-picker--visible');\n                if (!showDropdown && !this.noToggle) {\n                    this.showOverlay();\n                }\n                else {\n                    this.selectHighlighted(e);\n                }\n            }\n        });\n        keys.set('Enter', e => {\n            if (!this.disabled) {\n                const showDropdown = this.layer.classList.contains('cwc-picker--visible');\n                if (!showDropdown && !this.noToggle) {\n                    this.showOverlay();\n                }\n                else {\n                    this.selectHighlighted(e);\n                }\n            }\n        });\n        return keys.get(key);\n    }\n    getOrientation(key, elementDimensions, layerDimensions) {\n        const formulas = new Map();\n        formulas.set('ltr_pn', {\n            left: elementDimensions.left + elementDimensions.width - layerDimensions.width + 'px',\n            top: elementDimensions.top + elementDimensions.height + 'px',\n        });\n        formulas.set('ltr_np', {\n            left: elementDimensions.left + 'px',\n            top: elementDimensions.top - layerDimensions.height + 'px',\n        });\n        formulas.set('ltr_pp', {\n            left: elementDimensions.left + elementDimensions.width - layerDimensions.width + 'px',\n            top: elementDimensions.top - layerDimensions.height + 'px',\n        });\n        formulas.set('ltr_nn', {\n            left: elementDimensions.left + 'px',\n            top: elementDimensions.top + elementDimensions.height + 'px',\n        });\n        formulas.set('rtl_pn', {\n            left: elementDimensions.left + 'px',\n            top: elementDimensions.top + elementDimensions.height + 'px',\n        });\n        formulas.set('rtl_np', {\n            left: elementDimensions.left + elementDimensions.width - layerDimensions.width + 'px',\n            top: elementDimensions.top - layerDimensions.height + 'px',\n        });\n        formulas.set('rtl_pp', {\n            left: elementDimensions.left + 'px',\n            top: elementDimensions.top - layerDimensions.height + 'px',\n        });\n        formulas.set('rtl_nn', {\n            left: elementDimensions.left + elementDimensions.width - layerDimensions.width + 'px',\n            top: elementDimensions.top + elementDimensions.height + 'px',\n        });\n        return formulas.get(key);\n    }\n    removeOrphanedLayer() {\n        const orphanedLayer = document.querySelector('#' + this.pickerId);\n        if (orphanedLayer) {\n            orphanedLayer.parentNode.removeChild(orphanedLayer);\n        }\n    }\n    createOverlayLayer() {\n        const destination = document.createElement('div');\n        destination.setAttribute('id', this.pickerId);\n        // store layer ref for later manipulation\n        // get the rtl property\n        const dir = window.getComputedStyle(this.host, null).getPropertyValue('direction');\n        // set layer attributes\n        setAttributes(destination, {\n            role: 'dialog',\n            'aria-label': this.ariaLabel,\n            'aria-modal': 'true',\n            dir,\n            class: `cwc-picker ${this.designVersion} cwc-picker--${this.multiple ? 'multiple' : 'single'} cwc-picker__overlay ${this.hidden ? 'cwc-picker--hidden' : 'cwc-picker--visible'} ${this.orientation}`,\n        });\n        if (this.dropdownMaxHeight) {\n            destination.style.maxHeight = this.dropdownMaxHeight + 'px';\n        }\n        return destination;\n    }\n    createOptionsFilter() {\n        const olHeader = document.createElement('div');\n        olHeader.classList.add('cwc-picker__overlay-header');\n        const olFilter = document.createElement('input');\n        setAttributes(olFilter, {\n            class: 'cwc-picker__overlay-filter',\n            placeholder: this.filterPlaceholder,\n            'aria-label': this.filterPlaceholder,\n            type: 'text',\n            autocomplete: 'off',\n            autocorrect: 'off',\n            tabindex: '-1',\n        });\n        olFilter.addEventListener('focusin', () => {\n            document.removeEventListener('keydown', this.handleKeystrokes);\n        });\n        olFilter.addEventListener('focusout', () => {\n            document.addEventListener('keydown', this.handleKeystrokes);\n        });\n        olFilter.addEventListener('input', (e) => {\n            // filter the options here\n            this.filterOptions(e.target.value);\n        });\n        olHeader.appendChild(olFilter);\n        return olHeader;\n    }\n    createOptionsScroller() {\n        // create the options for the overlay\n        const optionsScroller = document.createElement('div');\n        optionsScroller.classList.add('cwc-picker__options-scroller');\n        optionsScroller.setAttribute('data-empty-message', this.filterEmptyMessage);\n        // add select all option if needed\n        if (this.multiple && this.selectAll) {\n            const selectAllCta = this.createSelectAllCta();\n            optionsScroller.appendChild(selectAllCta);\n        }\n        this.optionsScroller = optionsScroller;\n        return optionsScroller;\n    }\n    createFooterCta() {\n        const footer = document.createElement('footer');\n        setAttributes(footer, {\n            class: 'cwc-picker__overlay-footer cwc-picker__overlay-footer--justify-' + this.footerCtaJustify,\n        });\n        const footerCta = document.createElement('cwc-button');\n        const buttonAttributes = {\n            variant: this.footerCtaVariant,\n        };\n        if (this.footerCtaIcon) {\n            buttonAttributes[this.footerCtaIconPosition + '-icon'] = this.footerCtaIcon;\n        }\n        footerCta.innerText = this.footerCtaLabel;\n        setAttributes(footerCta, buttonAttributes);\n        footerCta.addEventListener('cwcClick', () => {\n            this.cwcPickerCtaClick.emit();\n        });\n        footer.appendChild(footerCta);\n        return footer;\n    }\n    setUpOverlay() {\n        // we are creating the overlay the old DOM manipulation way to be able to render it as the last element\n        // of the page, so that we can position it over any element of the DOM\n        const destination = this.createOverlayLayer();\n        // filter\n        if (this.filter) {\n            const olHeader = this.createOptionsFilter();\n            destination.appendChild(olHeader);\n        }\n        // optionScroller\n        const optionsScroller = this.createOptionsScroller();\n        destination.appendChild(optionsScroller);\n        // sync options\n        this.createOptions();\n        if (this.footerCta) {\n            const footerCta = this.createFooterCta();\n            destination.appendChild(footerCta);\n        }\n        return destination;\n    }\n    createOverlayStyles() {\n        // check if it's already there\n        let stylesElement = document.querySelector('#cwcPickerOverlayStyles');\n        if (!stylesElement) {\n            stylesElement = document.createElement('style');\n            setAttributes(stylesElement, {\n                type: 'text/css',\n                id: 'cwcPickerOverlayStyles',\n            });\n            stylesElement.appendChild(document.createTextNode(this.overlayCss));\n            document.querySelector('head').appendChild(stylesElement);\n        }\n    }\n    createOption(option) {\n        const optionValue = option.getAttribute('value');\n        const attributeSelected = option.getAttribute('selected');\n        let optionSelected = false;\n        if (attributeSelected !== null && attributeSelected !== 'false') {\n            optionSelected = true;\n        }\n        // const optionSelected = attributeSelected ? (attributeSelected !== 'false' ? true : false) : false;\n        const optionElement = document.createElement('div');\n        optionElement.addEventListener('mouseenter', this.highlightOptionByEvent);\n        optionElement.addEventListener('click', this.selectHighlighted);\n        setAttributes(optionElement, {\n            class: 'cwc-picker__option',\n            'data-name': option.innerText,\n            'data-value': optionValue,\n            'data-selected': optionSelected,\n        });\n        optionElement.innerText = option.innerText;\n        if (optionSelected) {\n            this.highlightedOption = optionElement;\n            this.selectHighlighted({ silent: true });\n        }\n        return optionElement;\n    }\n    removeOptionByValue(optionValue) {\n        const layerOption = this.optionsScroller.querySelector('[data-value=\"' + optionValue + '\"]');\n        const layerDiv = layerOption;\n        const optionSelected = layerDiv.dataset.selected === 'true';\n        if (optionSelected) {\n            this.removeSelectionByValue(optionValue);\n        }\n        this.optionsScroller.removeChild(layerOption);\n    }\n    changeOptionAttributeByValue(optionValue, attr, oldValue, newValue) {\n        if (optionValue) {\n            if (attr === 'selected') {\n                newValue = newValue !== null ? true : false;\n            }\n            const query = '[data-value=\"' + optionValue + '\"]';\n            const layerOption = this.optionsScroller.querySelector(query);\n            layerOption.removeAttribute('data-' + attr);\n            layerOption.setAttribute('data-' + attr, newValue);\n        }\n    }\n    changeOptionTextByValue(optionValue, text) {\n        if (optionValue && text) {\n            const layerOption = this.optionsScroller.querySelector('[data-value=\"' + optionValue + '\"]');\n            layerOption.innerText = text ? text : '';\n        }\n    }\n    createOptions() {\n        // query the options within the select\n        const selectOptions = this.host.querySelectorAll('option');\n        selectOptions.forEach(option => {\n            const optionElement = this.createOption(option);\n            this.optionsScroller.appendChild(optionElement);\n        });\n    }\n    componentWillLoad() {\n        if (!this.pickerId) {\n            this.pickerId = 'cwcPicker_' + uuidv4();\n        }\n        initBasics(this);\n    }\n    disconnectedCallback() {\n        destroyBasics(this);\n    }\n    componentDidLoad() {\n        // append DOM layer styles\n        this.createOverlayStyles();\n        // check for an orphaned layer in DOM;\n        this.removeOrphanedLayer();\n        const theOverlay = this.setUpOverlay();\n        this.layer = theOverlay;\n        // append it to the body\n        document.querySelector('body').appendChild(theOverlay);\n        // if has got to be shown by default, then show it here\n        if (this.show) {\n            this.showOverlay();\n        }\n        // anddd an event listener for when the options change\n        setTimeout(() => {\n            // HERE WE ADD A MUTATION OBSERVER TO LITEN FOR NEW ACCORDIONS\n            // SO THAT WHEN ONE IS DYNAMICALLY ADDED, IT WILL BE INITIALIZED\n            // Options for the observer (which mutations to observe)\n            const observerConfig = {\n                attributes: true,\n                attributeOldValue: true,\n                attributeFilter: ['value', 'selected'],\n                childList: true,\n                subtree: true,\n                characterData: true,\n            };\n            // Create an observer instance linked to the callback function\n            this.optionMutations = new MutationObserver(this.mutationHandler);\n            // Start observing the target node for configured mutations\n            this.optionMutations.observe(this.host, observerConfig);\n        }, 0);\n        // set value if declared\n        this.controlValue && this.setValueByProp(this.controlValue, null);\n    }\n    componentDidUnload() {\n        if (this.layer) {\n            this.layer.parentNode.removeChild(this.layer);\n        }\n        document.removeEventListener('focusin', this.hasBlured);\n        document.removeEventListener('click', this.hasBlured);\n    }\n    render() {\n        return (h(Host, { tabindex: \"0\", role: \"button\", onFocus: this.onFocus, onClick: this.toggleOverlay, class: `${this.designVersion} ${this.disabled && 'cwc-picker--disabled'}` }, h(\"div\", { class: 'cwc-picker__target ' +\n                (this.unwrap ? 'cwc-picker--unwrap' : '') +\n                ' cwc-picker--' +\n                (this.variant === 'header' || this.variant === 'no-border' ? 'header-noborder' : 'regular') +\n                ' cwc-picker--' +\n                this.status +\n                (this.mobile ? ' cwc-picker--mobile' : ''), role: \"listbox\" }, this.designVersion !== 'v1' && (this.variant === 'header' || this.variant === 'no-border') ? null : (h(\"label\", { class: 'cwc-picker__label' + (this.valueLabel === '' && this.mobile ? ' cwc-picker__label--placeholder' : '') }, this.label, \" \", this.required ? h(\"span\", { class: \"required\" }, \" *\") : null)), h(\"div\", { class: 'cwc-picker__input' +\n                (this.disabled ? ' cwc-picker__input--disabled' : '') +\n                (this.statusMessage && this.unwrap ? ' cwc-picker__input--extra-margin' : ''), ref: el => (this.targetElement = el) }, h(\"span\", { class: 'cwc-picker__input-output ' + (this.valueLabel !== '' ? '' : 'placeholder') }, this.valueLabel !== '' ? this.valueLabel : this.mobile ? '' : this.placeholder), this.loading ? (h(\"div\", { class: \"cwc-picker__loader\" }, h(\"cwc-loader\", { size: \"small\" }))) : null), this.statusMessage ? h(\"div\", { class: \"cwc-picker__status-message\" }, this.statusMessage) : null), h(\"slot\", null)));\n    }\n    componentDidRender() {\n        this.positionOverlay();\n    }\n    get host() { return getElement(this); }\n    static get watchers() { return {\n        \"multiple\": [\"updateMultiple\"],\n        \"rtl\": [\"updateDir\"],\n        \"show\": [\"handleShow\"],\n        \"stringValues\": [\"updateStringValues\"],\n        \"value\": [\"handleValue\"],\n        \"controlValue\": [\"setValueByProp\"]\n    }; }\n    static get style() { return \"\\@charset \\\"UTF-8\\\";*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host(.v2) .cwc-picker__input{border-radius:8px}[dir=ltr] :host(.v2) .cwc-picker__label{left:.75rem}[dir=rtl] :host(.v2) .cwc-picker__label{right:.75rem}:host(.v2) .cwc-picker__label{color:var(--cwc-picker-label-color,var(--cwc-color-ui-primary-darkest,#001b3a));top:14px;z-index:1;inset-inline-start:.75rem;background-image:linear-gradient(180deg,transparent,transparent 6px,var(--cwc-color-grayscale-white,#fff) 0,var(--cwc-color-grayscale-white,#fff));padding:0 .25rem;-webkit-transition:all .15s ease;transition:all .15s ease}:host(.v2) .cwc-picker--error .cwc-picker__label{color:var(--cwc-picker-label-error-color,var(--cwc-color-status-error,#ee3d42));background-image:linear-gradient(180deg,transparent,transparent 6px,var(--cwc-color-status-error-washed-five,#f9f0f0) 0,var(--cwc-color-status-error-washed-five,#f9f0f0))}:host(.v2) .cwc-picker--warning .cwc-picker__label{color:var(--cwc-picker-label-warning-color,var(--cwc-color-status-warning,#fbb03b));background-image:linear-gradient(180deg,transparent,transparent 6px,var(--cwc-color-status-warning-washed-five,#faf6f0) 0,var(--cwc-color-status-warning-washed-five,#faf6f0))}:host(.v2) .cwc-picker--success .cwc-picker__label{color:var(--cwc-picker-label-success-color,var(--cwc-color-status-success,#7ac943));background-image:linear-gradient(180deg,transparent,transparent 6px,var(--cwc-color-status-success-washed-five,#f3f7f0) 0,var(--cwc-color-status-success-washed-five,#f3f7f0))}:host(.v2) .cwc-picker--mobile .cwc-picker__label--placeholder{top:35px}:host(.cwc-picker--disabled.v2) .cwc-picker__label:not(.cwc-picker__label--placeholder){color:var(--cwc-picker-label-disabled-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-grayscale-light,#d6d6d6)),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-light,#d6d6d6),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}:host(.cwc-picker--disabled.v2) .cwc-picker--mobile .cwc-picker__label--placeholder{background:var(--cwc-picker-placeholder-disabled-background,var(--cwc-color-grayscale-light,#d6d6d6))}:host{display:inline-block;outline:none}:host(.cwc-picker--disabled){pointer-events:none}:host(.cwc-picker--disabled) .cwc-picker--mobile .cwc-picker__label:not(.cwc-picker__label--placeholder){color:var(--cwc-picker-mobile-label-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-grayscale-light,#d6d6d6)),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-light,#d6d6d6),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}::slotted(*){display:none}.cwc-picker__target{display:block;pointer-events:none;position:relative;padding-bottom:1.25rem;padding-top:1.25rem}.cwc-picker__target.cwc-picker--disabled{cursor:not-allowed;pointer-events:none!important}.cwc-picker__target.cwc-picker--unwrap{padding:0}.cwc-picker__label{display:block;font-size:.75rem;line-height:.75rem;color:var(--cwc-picker-label-color,var(--cwc-color-ui-primary-darkest,#001b3a));padding:0 0 .5rem 0;margin:0;pointer-events:none;position:absolute;top:0}.cwc-picker__label .required{color:var(--cwc-picker-label-required-color,var(--cwc-color-status-error,#ee3d42))}[dir=ltr] .cwc-picker__input{padding-right:2.25rem}[dir=rtl] .cwc-picker__input{padding-left:2.25rem}.cwc-picker__input{font-size:1rem;line-height:1rem;border-radius:3px;height:2.5rem;padding:0 1rem;-webkit-padding-end:2.25rem;padding-inline-end:2.25rem;border:.0625rem solid var(--cwc-picker-input-border-color,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-picker-input-background-color,var(--cwc-color-grayscale-white,#fff));font-family:inherit;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;cursor:pointer;position:relative;pointer-events:all;outline:none}.cwc-picker__input--active{border-color:var(--cwc-picker-input-active-border-color,var(--cwc-color-links,#3fa9f5))}[dir=ltr] .cwc-picker__input:after{right:.75rem}[dir=rtl] .cwc-picker__input:after{left:.75rem}.cwc-picker__input:after{content:\\\"\\\";font-family:dls-icons;color:var(--cwc-picker-input-icon-color,var(--cwc-color-links,#3fa9f5));position:absolute;inset-inline-end:.75rem;-webkit-transition:-webkit-transform .15s ease;transition:-webkit-transform .15s ease;transition:transform .15s ease;transition:transform .15s ease,-webkit-transform .15s ease}.cwc-picker__input.open:after{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.cwc-picker__input-output{display:block;width:100%;max-width:500px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cwc-picker__input-output.placeholder{color:var(--cwc-picker-input-output-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}.cwc-picker__input--disabled{background-color:var(--cwc-picker-input-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))!important;border-color:var(--cwc-picker-input-disabled-border-color,var(--cwc-color-elements-input-border,#adaebb))!important;color:var(--cwc-picker-input-disabled-color,var(--cwc-color-grayscale-medium,#666));pointer-events:none}.cwc-picker__input--disabled:after{color:var(--cwc-picker-input-icon-disabled-color,var(--cwc-color-elements-input-border,#adaebb))}.cwc-picker__input--extra-margin{margin-bottom:1rem}.cwc-picker__loader{height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.cwc-picker__loader cwc-loader{height:1.5rem!important}[dir=ltr] .cwc-picker__status-message{left:0}[dir=rtl] .cwc-picker__status-message{right:0}.cwc-picker__status-message{font-size:.75rem;width:100%;display:inline-block;position:absolute;inset-inline-start:0;bottom:.125em}.cwc-picker--error .cwc-picker__input{border-color:var(--cwc-picker-input-error-border-color,var(--cwc-color-status-error,#ee3d42));background-color:var(--cwc-picker-input-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.cwc-picker--error .cwc-picker__input:after{color:var(--cwc-picker-input-icon-error-color,var(--cwc-color-status-error,#ee3d42))}.cwc-picker--error .cwc-picker__status-message{color:var(--cwc-picker-status-message-error-color,var(--cwc-color-status-error,#ee3d42))}.cwc-picker--warning .cwc-picker__input{border-color:var(--cwc-picker-input-warning-border-color,var(--cwc-color-status-warning,#fbb03b));background-color:var(--cwc-picker-input-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.cwc-picker--warning .cwc-picker__input:after{color:var(--cwc-picker-input-icon-warning-color,var(--cwc-color-status-warning,#fbb03b))}.cwc-picker--warning .cwc-picker__status-message{color:var(--cwc-picker-status-message-warning-color,var(--cwc-color-status-warning,#fbb03b))}.cwc-picker--success .cwc-picker__input{border-color:var(--cwc-picker-input-success-border-color,var(--cwc-color-status-success,#7ac943));background-color:var(--cwc-picker-input-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.cwc-picker--success .cwc-picker__input:after{color:var(--cwc-picker-input-icon-success-color,var(--cwc-color-status-success,#7ac943))}.cwc-picker--success .cwc-picker__status-message{color:var(--cwc-picker-status-message-success-color,var(--cwc-color-status-success,#7ac943))}.cwc-picker--header-noborder .cwc-picker__input{border:none;background:none;padding:0;height:auto;display:-ms-inline-flexbox;display:inline-flex;font-size:inherit}[dir=ltr] .cwc-picker--header-noborder .cwc-picker__input:after{right:auto}[dir=rtl] .cwc-picker--header-noborder .cwc-picker__input:after{left:auto}[dir=ltr] .cwc-picker--header-noborder .cwc-picker__input:after{margin-left:.25rem}[dir=rtl] .cwc-picker--header-noborder .cwc-picker__input:after{margin-right:.25rem}.cwc-picker--header-noborder .cwc-picker__input:after{inset-inline-end:auto;position:relative;-webkit-margin-start:.25rem;margin-inline-start:.25rem}.cwc-picker--header-noborder .cwc-picker__input-output{color:var(--cwc-picker-input-output-header-noborder-color,var(--cwc-color-ui-primary-darkest,#001b3a))}.cwc-picker--header-noborder .cwc-picker__input-output.placeholder{font-size:inherit}.cwc-picker--unwrap .cwc-picker__label{display:none}.cwc-picker--unwrap .cwc-picker__status-message{top:2.75rem;bottom:auto}[dir=ltr] .cwc-picker--mobile .cwc-picker__label{left:.75rem}[dir=rtl] .cwc-picker--mobile .cwc-picker__label{right:.75rem}.cwc-picker--mobile .cwc-picker__label{top:14px;z-index:1;inset-inline-start:.75rem;background-image:linear-gradient(180deg,transparent,transparent 6px,var(--cwc-color-grayscale-white,#fff) 0,var(--cwc-color-grayscale-white,#fff));padding:0 .25rem;-webkit-transition:all .15s ease;transition:all .15s ease}.cwc-picker--mobile .cwc-picker__label--placeholder{font-size:1rem;top:35px;z-index:1;color:var(--cwc-picker-label-placeholder-mobile-color,var(--cwc-color-grayscale-medium,#666))!important;-webkit-transition:all .15s ease;transition:all .15s ease;background-image:none}.cwc-picker--mobile .cwc-picker__label--active{color:var(--cwc-picker-label-active-mobile-color,var(--cwc-color-links,#3fa9f5))}.cwc-picker--mobile.cwc-picker--error .cwc-picker__label{color:var(--cwc-picker-label-error-mobile-color,var(--cwc-color-status-error,#ee3d42));background-image:linear-gradient(180deg,transparent,transparent 6px,var(--cwc-color-status-error-washed-five,#f9f0f0) 0,var(--cwc-color-status-error-washed-five,#f9f0f0))}.cwc-picker--mobile.cwc-picker--warning .cwc-picker__label{color:var(--cwc-picker-label-warning-mobile-color,var(--cwc-color-status-warning,#fbb03b));background-image:linear-gradient(180deg,transparent,transparent 6px,var(--cwc-color-status-warning-washed-five,#faf6f0) 0,var(--cwc-color-status-warning-washed-five,#faf6f0))}.cwc-picker--mobile.cwc-picker--success .cwc-picker__label{color:var(--cwc-picker-label-success-mobile-color,var(--cwc-color-status-success,#7ac943));background-image:linear-gradient(180deg,transparent,transparent 6px,var(--cwc-color-status-success-washed-five,#f3f7f0) 0,var(--cwc-color-status-success-washed-five,#f3f7f0))}.cwc-picker__overlay{display:block;position:fixed;z-index:999;background-image:linear-gradient(180deg,var(--cwc-color-ui-highlight,#3fa9f5),var(--cwc-color-ui-highlight,#3fa9f5) 3px,var(--cwc-color-grayscale-white,#fff) 0,var(--cwc-color-grayscale-white,#fff));border-radius:3px;-webkit-box-shadow:0 8px 13px rgba(0,0,0,.3);box-shadow:0 8px 13px rgba(0,0,0,.3);display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:250px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;opacity:1;max-height:300px;max-width:80vw;padding-top:3px}.cwc-picker__overlay.cwc-picker--hidden{opacity:0;pointer-events:none}.cwc-picker__overlay.np,.cwc-picker__overlay.pp{-ms-flex-item-align:end;align-self:flex-end;-webkit-box-shadow:0 -8px 13px rgba(0,0,0,.3);box-shadow:0 -8px 13px rgba(0,0,0,.3);background-image:linear-gradient(0deg,var(--cwc-color-ui-highlight,#3fa9f5),var(--cwc-color-ui-highlight,#3fa9f5) 3px,var(--cwc-color-grayscale-white,#fff) 0,var(--cwc-color-grayscale-white,#fff))}[dir=ltr] .cwc-picker__overlay-header:before{margin-left:1.5em}[dir=rtl] .cwc-picker__overlay-header:before{margin-right:1.5em}.cwc-picker__overlay-header:before{content:\\\"\\\";font-family:dls-icons;position:absolute;line-height:1.5rem;font-size:1rem;top:.5rem;color:var(--cwc-picker-overlay-header-color,var(--cwc-color-links,#3fa9f5));pointer-events:none;-webkit-margin-start:1.5em;margin-inline-start:1.5em;margin-top:2px}.cwc-picker__overlay-footer{padding:.75rem 0;border-top:1px solid var(--cwc-picker-overlay-footer-border-color,var(--cwc-color-elements-input-border,#adaebb));margin:0 1rem;display:-ms-flexbox;display:flex}.cwc-picker__overlay-footer--justify-start{-ms-flex-pack:start;justify-content:flex-start}.cwc-picker__overlay-footer--justify-end{-ms-flex-pack:end;justify-content:flex-end}[dir=ltr] .cwc-picker__overlay-filter{padding-left:2rem}[dir=rtl] .cwc-picker__overlay-filter{padding-right:2rem}.cwc-picker__overlay-filter{margin:0 1rem;padding:0;-webkit-padding-start:2rem;padding-inline-start:2rem;font-family:inherit;border:none;border-bottom:1px solid var(--cwc-picker-overlay-filter-border-color,var(--cwc-color-elements-input-border,#adaebb));width:calc(100% - 2rem);-webkit-box-sizing:border-box;box-sizing:border-box;font-size:1rem;height:2.5rem;outline:none}.cwc-picker__options-scroller{-ms-flex:1 1 auto;flex:1 1 auto;overflow-y:auto}.cwc-picker__option{padding:.625rem 2rem;cursor:pointer;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.cwc-picker__option--highlighted{background-color:var(--cwc-picker-option-highlight-background-color,var(--cwc-color-elements-bg,#f4f6f9))}\\@media (max-width:767px){[dir=ltr] .cwc-picker__overlay{left:0!important}[dir=rtl] .cwc-picker__overlay{right:0!important}.cwc-picker__overlay{top:0!important;inset-inline-start:0!important;width:100%!important;height:100vh!important;max-height:100vh!important;max-width:100vw!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:var(--cwc-picker-overlay-backdrop-background-color,var(--cwc-color-ui-primary-darkest-alpha-eighty,rgba(0,27,58,.8)));pointer-events:none!important}.cwc-picker__overlay.nn,.cwc-picker__overlay.np,.cwc-picker__overlay.pn,.cwc-picker__overlay.pp{background-image:none}}\"; }\n};\n\nexport { PickerInput as cwc_picker };\n"],"names":[],"sourceRoot":"webpack:///"}