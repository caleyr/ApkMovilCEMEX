"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-popout_2_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 17750:
/*!******************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-popout_2.entry.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_popout": () => (/* binding */ Popout),
/* harmony export */   "cwc_popover": () => (/* binding */ Popover)
/* harmony export */ });
/* harmony import */ var D_Documentos_Documentos_DocumentosPersonales_Cemex_ApkMovilCEMEX_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);



const Popout = class {
  constructor(hostRef) {
    (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * The design version of the framework
     */

    this.variant = 'menu';
    /**
     * The design version of the framework
     */

    this.designVersion = null;
    /**
     * Specify whether component should render from right to left.
     */

    this.rtl = false;
    /**
     * Specify The aria label of the popout
     */

    this.ariaLabel = null;
    /**
     * Specify The aria label of the popout
     */

    this.hidden = true;
    /**
     * Specify the orientation of the popout
     */

    this.orientation = null;
    /**
     * Determines the width of the popoover
     */

    this.popoutWidth = null;
    /**
     * Determines the height of the popoover
     */

    this.popoutHeight = null;
    /**
     * Forces the overlay to open in a certain direction. Possible values are "ne", "se", "sw" and "nw"
     */

    this.direction = null;
    /**
     * State variable to control the position of the layer and trigger re-render on change
     */

    this.popoutStyle = {
      visibility: 'hidden'
    }; // this funciton shows the overlay

    this.showOverlay = () => {
      this.positionOverlay();
      this.popoutStyle = Object.assign({}, this.popoutStyle);
      this.hidden = false;
      this.showEvent.emit(true);
      setTimeout(() => {
        document.addEventListener('scroll', this.hideOverlay, true);
        document.addEventListener('cwcScroll', this.hideOverlay, true);
        document.addEventListener('click', this.hideOverlay);
        document.addEventListener('keydown', this.hideOnEscape);
        window.addEventListener('resize', this.hideOverlay);
      });
    };

    this.hideOverlay = e => {
      // determine if the click is within the content slot that's within the overlay
      const path = e.composedPath(); // sometimes we send a fake event without composed path when we hide the overlay by prop
      // therefore we force the "clickoutside" by just saying it was outside

      const layerContent = this.meatContainer;
      const isWithin = path ? this.isWithin(layerContent, path) : false;

      if (!isWithin) {
        document.removeEventListener('scroll', this.hideOverlay, true);
        document.removeEventListener('cwcScroll', this.hideOverlay, true);
        window.removeEventListener('resize', this.hideOverlay);
        document.removeEventListener('click', this.hideOverlay);
        document.removeEventListener('keydown', this.hideOnEscape);
        this.popoutStyle = Object.assign({}, this.popoutStyle);
        this.hidden = true;
        this.showEvent.emit(false);
      } else {
        this.clickWithinEvent.emit();
      }
    };

    this.hideOnEscape = event => {
      if (event.key === 'Escape') {
        this.hideOverlay({
          target: this.targetElement,

          composedPath() {
            return false;
          }

        });
      }
    };

    this.positionOverlay = () => {
      // find position on screen
      const elementDimensions = this.targetElement.getBoundingClientRect(); // get overlay dimensions

      const layerDimensions = this.host.getBoundingClientRect(); // get window width and height

      const windowDimensions = {
        width: document.documentElement.clientWidth,
        height: document.documentElement.clientHeight
      }; // define base overlay style

      const layerStyle = {
        left: '',
        top: ''
      };

      if (this.popoutWidth) {
        layerStyle['width'] = this.popoutWidth;
      }

      if (this.popoutHeight) {
        layerStyle['height'] = this.popoutHeight;
      }

      let caseString;
      let flow;
      let lateralOverflow;
      let verticalOverflow;

      if (this.direction) {
        flow = 'ltr';
        const directionArray = this.direction.split('');
        caseString = (directionArray[1] === 'w' ? 'p' : 'n') + (directionArray[0] === 'n' ? 'p' : 'n');
      } else {
        if (!this.rtl) {
          // calculate if overflows
          lateralOverflow = elementDimensions.left + layerDimensions.width - windowDimensions.width;
          verticalOverflow = elementDimensions.top + layerDimensions.height - windowDimensions.height; // define the overflow scenario for a particular class and the positioning switch

          caseString = (lateralOverflow > 0 ? 'p' : 'n') + (verticalOverflow > 0 ? 'p' : 'n');
          flow = 'ltr';
        } else {
          // calculate if overflows
          const endOverflow = elementDimensions.right - layerDimensions.width;
          const startOverflow = elementDimensions.left + layerDimensions.width - windowDimensions.width;
          verticalOverflow = elementDimensions.top + layerDimensions.height - windowDimensions.height;
          const sideOverflow = endOverflow < 0 && startOverflow < 0; // define the overflow scenario for a particular class and the positioning switch

          caseString = (sideOverflow ? 'p' : 'n') + (verticalOverflow > 0 ? 'p' : 'n');
          flow = 'rtl';
        }
      } // get the top left values with the orientation string


      const topleft = this.getOrientation(`${flow}_${caseString}`, elementDimensions, layerDimensions); // assign the new layer style

      const fullStyle = Object.assign(Object.assign({}, layerStyle), topleft);
      this.setLayerStyle(fullStyle); // assign the orientation for custom orientation classes

      this.setOrientation(caseString);
    };

    this.setLayerStyle = layerStyles => {
      const fullStyle = Object.assign({}, layerStyles);
      this.popoutStyle = fullStyle; // Object.keys(fullStyle).forEach(style => {
      //   this.host.style[style] = fullStyle[style];
      // });
    };

    this.setOrientation = orientation => {
      this.orientation = orientation;
    };

    this.showEvent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcShow", 7);
    this.clickWithinEvent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcClickWithin", 7);
  }
  /**
   * Method to show the overlay state programatically.
   */


  show() {
    var _this = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_ApkMovilCEMEX_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      // if it's hidden, then show
      _this.hidden && _this.showOverlay();
    })();
  }
  /**
   * Method to hide the overlay state programatically.
   */


  hide() {
    var _this2 = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_ApkMovilCEMEX_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      // if i's shown then hide
      !_this2.hidden && _this2.hideOverlay({
        target: _this2.targetElement,

        composedPath() {
          return false;
        }

      });
    })();
  }
  /**
   * Method to toggle the overlay state programatically.
   */


  toggle() {
    var _this3 = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_ApkMovilCEMEX_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this3.hidden) {
        _this3.showOverlay();
      } else {
        _this3.hideOverlay({
          target: _this3.targetElement,

          composedPath() {
            return false;
          }

        });
      }
    })();
  }

  updateDirection() {
    this.positionOverlay();
  } // this function determines if an element is within another


  isWithin(parent, path) {
    for (const element of path) {
      if (parent === element) {
        return true;
      }
    }

    return false;
  }

  getOrientation(key, elementDimensions, layerDimensions) {
    const formulas = new Map();
    formulas.set('ltr_pn', {
      left: elementDimensions.left + elementDimensions.width - layerDimensions.width + 'px',
      top: elementDimensions.top + elementDimensions.height + 'px'
    });
    formulas.set('ltr_np', {
      left: elementDimensions.left + 'px',
      top: elementDimensions.top - layerDimensions.height + 'px'
    });
    formulas.set('ltr_pp', {
      left: elementDimensions.left + elementDimensions.width - layerDimensions.width + 'px',
      top: elementDimensions.top - layerDimensions.height + 'px'
    });
    formulas.set('ltr_nn', {
      left: elementDimensions.left + 'px',
      top: elementDimensions.top + elementDimensions.height + 'px'
    });
    formulas.set('rtl_pn', {
      left: elementDimensions.left + 'px',
      top: elementDimensions.top + elementDimensions.height + 'px'
    });
    formulas.set('rtl_np', {
      left: elementDimensions.left + elementDimensions.width - layerDimensions.width + 'px',
      top: elementDimensions.top - layerDimensions.height + 'px'
    });
    formulas.set('rtl_pp', {
      left: elementDimensions.left + 'px',
      top: elementDimensions.top - layerDimensions.height + 'px'
    });
    formulas.set('rtl_nn', {
      left: elementDimensions.left + elementDimensions.width - layerDimensions.width + 'px',
      top: elementDimensions.top + elementDimensions.height + 'px'
    });
    return formulas.get(key);
  } // onSlotChange = () => {
  //     this.positionOverlay();
  // }


  componentWillLoad() {
    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__.i)(this);
  }

  componentDidLoad() {
    this.targetElement.addEventListener('click', this.toggle.bind(this)); // this.meatContainer.querySelector('slot').addEventListener('slotchange', this.onSlotChange);
  }

  disconnectedCallback() {
    this.targetElement.removeEventListener('click', this.toggle); // this.meatContainer.querySelector('slot').removeEventListener('slotchange', this.onSlotChange);

    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
  }

  render() {
    return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      style: this.popoutStyle,
      class: `cwc-popout ${this.designVersion} ${this.variant} ${this.hidden ? 'popout-hidden' : 'visible'} ${this.orientation}`,
      role: "dialog",
      "aria-label": this.ariaLabel,
      "aria-modal": "true"
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "cwc-popout__content",
      ref: e => {
        this.meatContainer = e;
      }
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)));
  }

  get host() {
    return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "direction": ["updateDirection"]
    };
  }

  static get style() {
    return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:-ms-flexbox;display:flex;position:fixed;z-index:999}:host .cwc-popout__content{width:100%;height:100%;overflow:auto}:host(.menu){background-image:var(--cwc-popout-menu-background-image,linear-gradient(180deg,var(--cwc-color-grayscale-white,#fff),var(--cwc-color-grayscale-white,#fff)));-webkit-box-shadow:var(--cwc-popout-menu-box-shadow,0 8px 13px rgba(0,0,0,.3));box-shadow:var(--cwc-popout-menu-box-shadow,0 8px 13px rgba(0,0,0,.3));border-radius:var(--cwc-popout-menu-border-radius,3px)}:host(.menu),:host(.select){display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;opacity:0;max-height:500px;max-width:80vw;-webkit-transform-origin:top;transform-origin:top}:host(.menu.popout-hidden),:host(.select.popout-hidden){opacity:0;pointer-events:none;-webkit-transform:scaleY(1);transform:scaleY(1);-webkit-transition:opacity .25s ease .15s,-webkit-transform .25s ease .15s;transition:opacity .25s ease .15s,-webkit-transform .25s ease .15s;transition:opacity .25s ease .15s,transform .25s ease .15s;transition:opacity .25s ease .15s,transform .25s ease .15s,-webkit-transform .25s ease .15s}:host(.menu.popout-hidden) .cwc-popout__content>[slot=content],:host(.select.popout-hidden) .cwc-popout__content>[slot=content]{opacity:0;-webkit-transition:opacity .25s ease;transition:opacity .25s ease}:host(.menu.visible),:host(.select.visible){opacity:1;pointer-events:all;-webkit-transform:scaleY(1);transform:scaleY(1);-webkit-transition:opacity .25s ease,-webkit-transform .25s ease;transition:opacity .25s ease,-webkit-transform .25s ease;transition:opacity .25s ease,transform .25s ease;transition:opacity .25s ease,transform .25s ease,-webkit-transform .25s ease}:host(.menu.visible) .cwc-popout__content>[slot=content],:host(.select.visible) .cwc-popout__content>[slot=content]{opacity:1;-webkit-transition:opacity .25s ease .15s;transition:opacity .25s ease .15s}:host(.select){background-image:var(--cwc-popout-select-background-image,linear-gradient(180deg,var(--cwc-color-ui-highlight,#3fa9f5),var(--cwc-color-ui-highlight,#3fa9f5) 3px,var(--cwc-color-grayscale-white,#fff) 0,var(--cwc-color-grayscale-white,#fff)));-webkit-box-shadow:var(--cwc-popout-select-box-shadow,0 8px 13px rgba(0,0,0,.3));box-shadow:var(--cwc-popout-select-box-shadow,0 8px 13px rgba(0,0,0,.3));border-radius:var(--cwc-popout-select-border-radius,3px)}:host(.select.np),:host(.select.pp){-ms-flex-item-align:end;align-self:flex-end;-webkit-box-shadow:var(--cwc-popout-select-box-shadow-opposite,0 -8px 13px rgba(0,0,0,.3));box-shadow:var(--cwc-popout-select-box-shadow-opposite,0 -8px 13px rgba(0,0,0,.3));background-image:var(--cwc-popout-select-background-image-opposite,linear-gradient(0deg,var(--cwc-color-ui-highlight,#3fa9f5),var(--cwc-color-ui-highlight,#3fa9f5) 3px,var(--cwc-color-grayscale-white,#fff) 0,var(--cwc-color-grayscale-white,#fff)))}:host(.popover){display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;border-radius:0;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;max-height:90vh;max-width:80vw;-webkit-transform-origin:top;transform-origin:top;opacity:0;-webkit-filter:var(--cwc-popout-popover-box-shadow,drop-shadow(0 8px 13px rgba(0,0,0,.3)));filter:var(--cwc-popout-popover-box-shadow,drop-shadow(0 8px 13px rgba(0,0,0,.3)))}[dir=ltr] :host(.popover):before{margin-left:var(--cwc-popout-popover-arrow-start-position,16px)}[dir=rtl] :host(.popover):before{margin-right:var(--cwc-popout-popover-arrow-start-position,16px)}:host(.popover):before{content:\" \";display:block;background-image:var(--cwc-popout-popover-pointer-image,url(\"data:image/svg+xml,%3Csvg%20width%3D%22362%22%20height%3D%22181%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M180.824.053l180.771%20180.771H.053L180.824.054z%22%20fill%3D%22%23FFF%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E\"));background-size:contain;background-repeat:no-repeat;background-position:50%;width:var(--cwc-popout-popover-arrow-width,24px);height:var(--cwc-popout-popover-arrow-height,12px);-webkit-margin-start:var(--cwc-popout-popover-arrow-start-position,16px);margin-inline-start:var(--cwc-popout-popover-arrow-start-position,16px);z-index:1}:host(.popover) .cwc-popout__content{display:block;margin-top:var(--cwc-popout-popover-arrow-inset-position,0);background-color:var(--cwc-popout-content-background-color,var(--cwc-color-grayscale-white,#fff));border-style:var(--cwc-popout-popover-border-style,none);border-width:var(--cwc-popout-popover-border-width,0);border-color:var(--cwc-popout-popover-border-color,transparent);border-radius:var(--cwc-popout-popover-border-radius,0);-webkit-box-sizing:border-box;box-sizing:border-box}:host(.popover.popout-hidden){opacity:0;pointer-events:none;-webkit-transform:scaleY(1);transform:scaleY(1);-webkit-transition:opacity .25s ease .15s,-webkit-transform .25s ease .15s;transition:opacity .25s ease .15s,-webkit-transform .25s ease .15s;transition:opacity .25s ease .15s,transform .25s ease .15s;transition:opacity .25s ease .15s,transform .25s ease .15s,-webkit-transform .25s ease .15s}:host(.popover.popout-hidden) .cwc-popout__content>[slot=content]{opacity:0;-webkit-transition:opacity .25s ease;transition:opacity .25s ease}:host(.popover.visible){opacity:1;pointer-events:all;-webkit-transform:scaleY(1);transform:scaleY(1);-webkit-transition:opacity .25s ease,-webkit-transform .25s ease;transition:opacity .25s ease,-webkit-transform .25s ease;transition:opacity .25s ease,transform .25s ease;transition:opacity .25s ease,transform .25s ease,-webkit-transform .25s ease}:host(.popover.visible) .cwc-popout__content>[slot=content]{opacity:1;-webkit-transition:opacity .25s ease .15s;transition:opacity .25s ease .15s}[dir=ltr] :host(.popover.pn):before,[dir=ltr] :host(.popover.pp):before{margin-left:calc(100% - var(--cwc-popout-popover-arrow-start-position, 16px) - var(--cwc-popout-popover-arrow-width, 24px))}[dir=rtl] :host(.popover.pn):before,[dir=rtl] :host(.popover.pp):before{margin-right:calc(100% - var(--cwc-popout-popover-arrow-start-position, 16px) - var(--cwc-popout-popover-arrow-width, 24px))}:host(.popover.pn):before,:host(.popover.pp):before{-webkit-margin-start:calc(100% - var(--cwc-popout-popover-arrow-start-position, 16px) - var(--cwc-popout-popover-arrow-width, 24px));margin-inline-start:calc(100% - var(--cwc-popout-popover-arrow-start-position, 16px) - var(--cwc-popout-popover-arrow-width, 24px))}:host(.popover.np),:host(.popover.pp){-webkit-transform-origin:bottom;transform-origin:bottom;-ms-flex-item-align:end;align-self:flex-end;-ms-flex-flow:column-reverse;flex-flow:column-reverse}:host(.popover.np):before,:host(.popover.pp):before{-webkit-transform:scale(-1);transform:scale(-1);margin-top:var(--cwc-popout-popover-arrow-inset-position,0)}:host(.popover.np) .cwc-popout__content,:host(.popover.pp) .cwc-popout__content{margin-top:0}\@media (max-width:767px){[dir=ltr] :host(.popover),[dir=ltr] :host(.select){left:0!important}[dir=rtl] :host(.popover),[dir=rtl] :host(.select){right:0!important}:host(.popover),:host(.select){top:0!important;inset-inline-start:0!important;width:100%!important;height:100vh!important;max-height:100vh!important;max-width:100vw!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:var(--cwc-popout-backdrop-background-color,var(--cwc-color-ui-primary-darkest-alpha-eighty,rgba(0,27,58,.8)));pointer-events:none!important}:host(.popover):before,:host(.select):before{display:none}:host(.popover) .cwc-popout__content,:host(.select) .cwc-popout__content{height:auto;max-width:calc(100vw - 64px);max-height:calc(100vh - 64px)}:host(.popover.visible),:host(.select.visible){pointer-events:all!important}:host(.popover.nn),:host(.popover.np),:host(.popover.pn),:host(.popover.pp),:host(.select.nn),:host(.select.np),:host(.select.pn),:host(.select.pp){background-image:none}:host(.select) .cwc-popout__content{background-color:var(--cwc-popout-content-background-color,var(--cwc-color-grayscale-white,#fff));border-top:2px solid var(--cwc-popout-content-border-color,var(--cwc-color-ui-highlight,#3fa9f5))}}";
  }

};
const Popover = class {
  constructor(hostRef) {
    (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.hidden = true;
    this.layerStyle = {};
    this.orientation = 'nn';
    /**
     * The design version of the framework
     */

    this.designVersion = null;
    /**
     * Specify whether component should render as block or inline element
     */

    this.block = false;
    /**
     * Forces the overlay to open in a certain direction. Possible values are "ne", "se", "sw" and "nw"
     */

    this.direction = null;
    /**
     * disables the overlay funcitonality
     */

    this.disabled = false;
    /**
     * disables overlay toggling on target element click
     */

    this.noToggle = false;
    /**
     * Determines the height of the popoover
     */

    this.popoverHeight = null;
    /**
     * Determines the width of the popoover
     */

    this.popoverWidth = null;
    /**
     * Determines where to attache the popover popout (page body by default)
     */

    this.popoutTarget = document.querySelector('body');
    /**
     * Specify whether component should render from right to left
     */

    this.rtl = false;
    /**
     * Shows and hides the overlay
     */

    this.show = false;
    /**
     * Specify whether component should render from right to left
     */

    this.variant = 'popover';

    this.transferShow = event => {
      this.hidden = !event.detail;
      this.showEvent.emit(event.detail);
    };

    this.transferClickWithin = event => {
      this.clickWithinEvent.emit(event.detail);
    };

    this.showEvent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcShow", 7);
    this.clickWithinEvent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcClickWithin", 7);
  }

  updateDirection(nuDirection) {
    this.layer.direction = nuDirection;
  }

  updateDir(isRtl) {
    this.layer.rtl = isRtl;
  }

  handleShow(newValue, oldValue) {
    if (newValue !== oldValue) {
      if (this.show) {
        this.layer.show();
      } else {
        this.layer.hide();
      }
    }
  }
  /**
   * Method to toggle the overlay state programatically.
   */


  toggle() {
    var _this4 = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_ApkMovilCEMEX_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this4.layer.toggle();
    })();
  }
  /**
   * Method to determine if the overlay is shown at a specific moment.
   */


  isShown() {
    var _this5 = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_ApkMovilCEMEX_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return !_this5.hidden;
    })();
  }

  componentWillLoad() {
    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__.i)(this);
  }

  componentDidLoad() {
    // first we check if there's something in the slot
    const slot = this.host.querySelector('[slot="content"]');

    if (slot) {
      // create the popout
      const destination = document.createElement('cwc-popout');
      destination.ariaLabel = this.ariaLabel;
      destination.rtl = this.rtl;
      destination.variant = this.variant;
      destination.targetElement = this.host.querySelector('[slot="target"]');
      destination.addEventListener('cwcShow', this.transferShow);
      destination.addEventListener('cwcClickWithin', this.transferClickWithin);
      this.orientation && (destination.orientation = this.orientation);
      this.direction && (destination.direction = this.direction); // assign the popout to the layer property

      this.layer = destination; // transfer the slot contents to the popout

      const contentWrapper = document.createElement('div');
      contentWrapper.appendChild(slot);
      destination.appendChild(contentWrapper); // append the popout to the body

      this.popoutTarget.appendChild(destination); // if shown, then show

      this.show && destination.show();
    }
  }

  disconnectedCallback() {
    this.layer.removeEventListener('cwcShow', this.transferShow);
    this.layer.removeEventListener('cwcClickWithin', this.transferClickWithin);
    this.layer && this.layer.parentNode.removeChild(this.layer);
    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
  }

  render() {
    return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: `${this.block && 'block'} ${this.disabled && 'disabled'}`
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "target"
    }));
  }

  get host() {
    return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "direction": ["updateDirection"],
      "rtl": ["updateDir"],
      "show": ["handleShow"]
    };
  }

  static get style() {
    return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:inline-block}:host(.block){display:block}:host(.disabled) ::slotted(*){pointer-events:none!important}\@media (hover:hover){:host(.disabled){cursor:not-allowed}}";
  }

};


/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-popout_2_entry_js.js.map