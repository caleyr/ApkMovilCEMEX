{"version":3,"file":"node_modules_cmx-web-components_core_dist_esm_cwc-tags_entry_js.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE+C;;;;;;;;;;;;;;;;;AC3CgC;AACa;;AAE5F;AACA;AACA,QAAQ,oDAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,uEAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uEAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,oDAAC,UAAU,2BAA2B,EAAE,oDAAC;AACzD;AACA,iBAAiB,OAAO,oDAAU;AAClC,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,yBAAyB,UAAU,mCAAmC,kCAAkC,MAAM,qBAAqB;AACnI;;AAE8B","sources":["./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js","./node_modules/@cmx-web-components/core/dist/esm/cwc-tags.entry.js"],"sourcesContent":["function InitializeDirectionDetection(hostElement) {\r\n    // the function that sets the dir in the shadow dom\r\n    function executeDir(dir) {\r\n        const shadowKids = hostElement.shadowRoot.childNodes;\r\n        shadowKids.forEach(element => {\r\n            element.setAttribute('dir', dir);\r\n        });\r\n    }\r\n    function intervalHandler() {\r\n        const actualDir = hostElement.dataset.dir;\r\n        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');\r\n        if (dir !== actualDir) {\r\n            hostElement.dataset.dir = dir;\r\n            hostElement.shadowRoot && executeDir(dir);\r\n            if (dir === 'rtl') {\r\n                return hostElement.setAttribute('rtl', 'true');\r\n            }\r\n            return hostElement.removeAttribute('rtl');\r\n        }\r\n    }\r\n    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);\r\n}\r\nfunction DestroyDirectionDetection(hostElement) {\r\n    if (hostElement && hostElement['rtlInterval']) {\r\n        clearInterval(hostElement['rtlInterval']);\r\n    }\r\n}\n\nfunction setDesignVersion() {\r\n    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');\r\n    return frameworkVersion ? frameworkVersion : 'v1';\r\n}\n\nfunction initBasics(componentClass) {\r\n    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());\r\n    if (!componentClass.rtl) {\r\n        componentClass.host && InitializeDirectionDetection(componentClass.host);\r\n    }\r\n}\r\nfunction destroyBasics(componentClass) {\r\n    DestroyDirectionDetection(componentClass.host);\r\n}\n\nexport { destroyBasics as d, initBasics as i };\n","import { r as registerInstance, h, g as getElement } from './core-cf426fab.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\n\nconst CwcTag = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * The design version of the framework\n         */\n        this.designVersion = null;\n        /**\n         * Variant is used to get a different style for the element\n         */\n        this.variant = 'regular';\n        /**\n         * If true tag can be closed\n         */\n        this.allowClose = false;\n        /**\n         * Specify whether component should render from right to left\n         */\n        this.rtl = false;\n        /**\n         * If tags can be selected\n         */\n        this.selectable = false;\n        /**\n         * Pass props to children elements\n         */\n        this.passPropsToChildren = () => {\n            this.tags = this.host.querySelectorAll('cwc-tag');\n            this.tags.forEach(item => {\n                item['variant'] = this.variant;\n                item['allowClose'] = this.allowClose;\n                item['rtl'] = this.rtl;\n                item['selectable'] = this.selectable;\n            });\n        };\n    }\n    setSelectable(selectable) {\n        this.tags.forEach(item => {\n            item['selectable'] = selectable;\n        });\n    }\n    setVariant(variant) {\n        this.tags.forEach(item => {\n            item['variant'] = variant;\n        });\n    }\n    setAllowClose(allowClose) {\n        this.tags.forEach(item => {\n            item['allowClose'] = allowClose;\n        });\n    }\n    setRtl(rtl) {\n        this.tags.forEach(item => {\n            item['rtl'] = rtl;\n        });\n    }\n    componentWillLoad() {\n        initBasics(this);\n    }\n    /**\n     * Call when component did load (lifecycle)\n     */\n    componentDidLoad() {\n        this.registerSlotChangeHandler();\n        this.passPropsToChildren();\n    }\n    disconnectedCallback() {\n        destroyBasics(this);\n    }\n    /**\n     * Register listener on event when tags are changed\n     */\n    registerSlotChangeHandler() {\n        const optionsSlot = this.host.shadowRoot.querySelector('slot');\n        optionsSlot.addEventListener('slotchange', () => {\n            this.passPropsToChildren();\n        });\n    }\n    render() {\n        return (h(\"div\", { class: this.designVersion }, h(\"slot\", null)));\n    }\n    get host() { return getElement(this); }\n    static get watchers() { return {\n        \"selectable\": [\"setSelectable\"],\n        \"variant\": [\"setVariant\"],\n        \"allowClose\": [\"setAllowClose\"],\n        \"rtl\": [\"setRtl\"]\n    }; }\n    static get style() { return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:inline-block}\"; }\n};\n\nexport { CwcTag as cwc_tags };\n"],"names":[],"sourceRoot":"webpack:///"}