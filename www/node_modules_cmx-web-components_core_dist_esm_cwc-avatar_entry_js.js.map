{"version":3,"file":"node_modules_cmx-web-components_core_dist_esm_cwc-avatar_entry_js.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE+C;;;;;;;;;;;;;;;;;AC3C2C;AACE;;AAE5F;AACA;AACA,QAAQ,oDAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uEAAU;AAClB;AACA;AACA,QAAQ,uEAAa;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAC,CAAC,gDAAI,IAAI,qBAAqB,oBAAoB,EAAE,2DAA2D,EAAE,kDAAkD,GAAG,sBAAsB,oDAAC,UAAU,mIAAmI,MAAM,oDAAC,WAAW,+BAA+B;AAC5Y;AACA,iBAAiB,OAAO,oDAAU;AAClC,4BAA4B;AAC5B;AACA;AACA;AACA,yBAAyB,UAAU,mCAAmC,kCAAkC,mBAAmB,WAAW,YAAY,oBAAoB,aAAa,sBAAsB,mBAAmB,qBAAqB,uBAAuB,kEAAkE,0FAA0F,kBAAkB,kBAAkB,gBAAgB,6BAA6B,6EAA6E,iGAAiG,0BAA0B,WAAW,YAAY,kBAAkB,mBAAmB,wCAAwC,gCAAgC,WAAW,YAAY,oBAAoB,iBAAiB,sBAAsB,yBAAyB;AAC56B;;AAEgC","sources":["./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js","./node_modules/@cmx-web-components/core/dist/esm/cwc-avatar.entry.js"],"sourcesContent":["function InitializeDirectionDetection(hostElement) {\r\n    // the function that sets the dir in the shadow dom\r\n    function executeDir(dir) {\r\n        const shadowKids = hostElement.shadowRoot.childNodes;\r\n        shadowKids.forEach(element => {\r\n            element.setAttribute('dir', dir);\r\n        });\r\n    }\r\n    function intervalHandler() {\r\n        const actualDir = hostElement.dataset.dir;\r\n        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');\r\n        if (dir !== actualDir) {\r\n            hostElement.dataset.dir = dir;\r\n            hostElement.shadowRoot && executeDir(dir);\r\n            if (dir === 'rtl') {\r\n                return hostElement.setAttribute('rtl', 'true');\r\n            }\r\n            return hostElement.removeAttribute('rtl');\r\n        }\r\n    }\r\n    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);\r\n}\r\nfunction DestroyDirectionDetection(hostElement) {\r\n    if (hostElement && hostElement['rtlInterval']) {\r\n        clearInterval(hostElement['rtlInterval']);\r\n    }\r\n}\n\nfunction setDesignVersion() {\r\n    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');\r\n    return frameworkVersion ? frameworkVersion : 'v1';\r\n}\n\nfunction initBasics(componentClass) {\r\n    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());\r\n    if (!componentClass.rtl) {\r\n        componentClass.host && InitializeDirectionDetection(componentClass.host);\r\n    }\r\n}\r\nfunction destroyBasics(componentClass) {\r\n    DestroyDirectionDetection(componentClass.host);\r\n}\n\nexport { destroyBasics as d, initBasics as i };\n","import { r as registerInstance, h, H as Host, g as getElement } from './core-cf426fab.js';\nimport { i as initBasics, d as destroyBasics } from './commonComponentFeatures-b771e888.js';\n\nconst Avatar = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * The design version of the framework\n         */\n        this.designVersion = null;\n        /**\n         * Variant is used to get a different style for the element\n         */\n        this.variant = 'positive';\n        /**\n         * Two different sizes of the avatar\n         */\n        this.size = 'regular';\n        // It creates two letters string from 'name' property\n        this.getInitials = fullName => {\n            const names = fullName.split(' ');\n            const initials = names.map(element => element.split('')[0].toUpperCase());\n            // when there are more than 3 names, it takes first letter from first and third name\n            if (initials.length >= 4) {\n                this.initials = initials[0] + initials[2];\n            }\n            else if (initials.length > 1 && initials.length < 4) {\n                this.initials = initials[0] + initials[initials.length - 1];\n            }\n            else {\n                this.initials = initials[0];\n            }\n        };\n        // Fallback to initials variant when invalid source path inserted\n        this.invalidPath = () => {\n            this.imageSource = null;\n        };\n    }\n    validateSourcePath() {\n        this.imageElement.onerror = () => {\n            this.imageSource = null;\n        };\n    }\n    createInitials() {\n        this.getInitials(this.name);\n    }\n    componentWillLoad() {\n        initBasics(this);\n    }\n    disconnectedCallback() {\n        destroyBasics(this);\n    }\n    componentWillRender() {\n        this.getInitials(this.name);\n    }\n    render() {\n        return (h(Host, { class: `cwc-avatar ${this.designVersion} ${this.variant === 'negative' ? 'cwc-avatar--inverted' : ''} ${this.size === 'small' ? ' cwc-avatar--small' : ''}` }, this.imageSource ? (h(\"img\", { class: \"cwc-avatar__image\", ref: el => (this.imageElement = el), src: this.imageSource, alt: this.name, onError: this.invalidPath })) : (h(\"span\", { class: \"cwc-avatar__initials\" }, this.initials))));\n    }\n    get host() { return getElement(this); }\n    static get watchers() { return {\n        \"imageSource\": [\"validateSourcePath\"],\n        \"name\": [\"createInitials\"]\n    }; }\n    static get style() { return \"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host(.cwc-avatar){width:60px;height:60px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;color:var(--cwc-avatar-color,var(--cwc-color-ui-primary,#003876));background-color:var(--cwc-avatar-background-color,var(--cwc-color-grayscale-white,#fff));border-radius:50%;font-size:1.75rem;font-weight:700}:host(.cwc-avatar--inverted){color:var(--cwc-avatar-inverted-color,var(--cwc-color-grayscale-white,#fff));background-color:var(--cwc-avatar-inverted-background-color,var(--cwc-color-ui-primary,#003876))}:host(.cwc-avatar--small){width:32px;height:32px;font-size:.875rem}.cwc-avatar__image{-webkit-clip-path:circle(50% at center);clip-path:circle(50% at center);width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.cwc-avatar__initials{text-transform:uppercase}\"; }\n};\n\nexport { Avatar as cwc_avatar };\n"],"names":[],"sourceRoot":"webpack:///"}