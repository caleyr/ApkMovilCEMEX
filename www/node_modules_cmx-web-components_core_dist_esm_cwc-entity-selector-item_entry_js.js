"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-entity-selector-item_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 94583:
/*!******************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-entity-selector-item.entry.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_entity_selector_item": () => (/* binding */ MenuEntity)
/* harmony export */ });
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);



const MenuEntity = class {
    constructor(hostRef) {
        (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /**
         * The design version of the framework
         */
        this.designVersion = null;
        /**
         * Specify if it will render in rtl mode
         */
        this.rtl = false;
        /**
         * define the entity name that it will be shown
         */
        this.entityName = 'Entity Name';
        /**
         * define the entity id that it will be shown
         */
        this.entityId = '#EntityId';
        /**
         * Specify if entity is active
         */
        this.active = false;
        this.selectEntity = () => {
            this.entitySelectedEvent.emit({
                entityName: this.entityName,
                entityId: this.entityId,
            });
        };
        this.entitySelectedEvent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "cwcEntitySelected", 7);
    }
    componentWillLoad() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
    }
    componentDidRender() {
        if (this.active) {
            this.selectEntity();
        }
    }
    disconnectedCallback() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    }
    render() {
        return ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.H, { class: `${this.designVersion} ${this.active && 'active'}`, role: "button", tabindex: "0", onClick: this.selectEntity }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "cwc-entity-selector-item__name" }, this.entityName), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "cwc-entity-selector-item__id" }, this.entityId)));
    }
    get host() { return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get style() { return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host{display:block;border:1px solid var(--cwc-entity-selector-item-border-color,var(--cwc-color-grayscale-lightish,#b0b0b0));border-radius:4px;padding:1rem;color:var(--cwc-entity-selector-item-color,var(--cwc-color-ui-primary-darkest,#001b3a));cursor:pointer;-webkit-box-sizing:border-box;box-sizing:border-box;width:calc(100% / 3 - 14px);margin-bottom:24px}.cwc-entity-selector-item__name{font-weight:500;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-bottom:.175rem}.cwc-entity-selector-item__id{font-size:.75rem}\@media (hover:hover){:host(:hover){border-color:var(--cwc-entity-selector-item-hover-border-color,var(--cwc-color-links,#3fa9f5))}}:host(:focus){border-color:var(--cwc-entity-selector-item-focus-border-color,var(--cwc-color-links,#3fa9f5));outline:none}:host(.active){border-color:var(--cwc-entity-selector-item-active-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-entity-selector-item-active-background-color,var(--cwc-color-links,#3fa9f5));color:var(--cwc-entity-selector-item-active-color,var(--cwc-color-grayscale-white,#fff))}\@media (max-width:767px){:host{width:100%}}"; }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-entity-selector-item_entry_js.js.map