"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-segmented-controls_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 77345:
/*!****************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-segmented-controls.entry.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_segmented_controls": () => (/* binding */ SegmentedControls)
/* harmony export */ });
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);



const SegmentedControls = class {
    constructor(hostRef) {
        (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /**
         * The design version of the framework
         */
        this.designVersion = null;
        /**
         * Disables all controls
         */
        this.disabled = false;
        /**
         * Pass props to children elements
         */
        this.passPropsToChildren = () => {
            this.controlsInOrder.forEach(item => {
                if (this.disabled) {
                    item['disabled'] = this.disabled;
                }
                item['designVersion'] = this.designVersion;
            });
        };
    }
    /**
     * Provides the standard change-of-control work based on a click event.
     * @param event carries the name and host element
     */
    controlClickedHandler(event) {
        this.activeControl = event.detail.host;
        for (let index = 0; index < this.controlsInOrder.length; index++) {
            this.controlsInOrder[index].setAttribute('active', false);
        }
        this.activeControl.setAttribute('active', true);
    }
    sortControls() {
        this.controlsInOrder = this.host.querySelectorAll('cwc-segmented-controls-item');
        this.controlsInOrder[0].position = 'first';
        this.controlsInOrder[this.controlsInOrder.length - 1].position = 'last';
        for (let index = 1; index < this.controlsInOrder.length - 1; index++) {
            this.controlsInOrder[index].position = 'middle';
        }
    }
    componentWillLoad() {
        this.sortControls();
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
    }
    componentWillRender() {
        this.passPropsToChildren();
    }
    disconnectedCallback() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    }
    render() {
        return ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `cwc-segmented-controls ${this.designVersion}` }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null))));
    }
    get host() { return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get style() { return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.cwc-segmented-controls{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;overflow-y:hidden;overflow-x:auto}.cwc-segmented-controls.v2{border:1px solid var(--cwc-segmented-controls-border-color,var(--cwc-color-elements-input-border,#adaebb));border-radius:20px;background-color:var(--cwc-segmented-controls-background-color,var(--cwc-color-grayscale-white,#fff))}"; }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-segmented-controls_entry_js.js.map