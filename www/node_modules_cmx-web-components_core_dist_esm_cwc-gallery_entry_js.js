"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-gallery_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 37589:
/*!*****************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-gallery.entry.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_gallery": () => (/* binding */ Gallery)
/* harmony export */ });
/* harmony import */ var D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);
/* harmony import */ var _helpers_bb43a8d9_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers-bb43a8d9.js */ 94326);




const Gallery = class {
  constructor(hostRef) {
    (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.touchstartX = 0;
    this.touchendX = 0;
    this.galleryCss = `
  .cwc-gallery__modal {
    display: block;
    background-color: rgba(0, 0, 0, .6);
    position: fixed;
    inset-block-start: 0;
    inset-inline-start: 0;
    width: 100vw;
    height: 100vh;
    z-index: 2002;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 1;
    pointer-events: all;
    transition: opacity 0.33s;
  }
  .cwc-gallery__container {
    max-width: 784px;
    margin: 0 auto;
    box-shadow: none;
    position: relative;
    width: 100%;
    display: flex;
    flex-direction: column;
  }
  .cwc-gallery__close-button {
    background: none;
    border: none;
    color: rgba(255, 255, 255, .8);
    display: block;
    margin: 0;
    padding: 0;
    position: absolute;
    inset-inline-end: 1.5rem;
    inset-block-start: 1.5rem;
    z-index: 1;
    cursor: pointer;
    font-size: 1.5rem;
  }
  .cwc-gallery__close-button:hover,
  .cwc-gallery__close-button:focus {
    color: rgba(255, 255, 255, 1);
  }
  .cwc-gallery__controller {
    font-size: 2.5rem;
    position: fixed;
    color: rgba(255, 255, 255, .8);
    z-index: 1;
    background: transparent;
    cursor: pointer;
  }
  .cwc-gallery__controller:hover,
  .cwc-gallery__controller:focus {
    color: rgba(255, 255, 255, 1);
  }
  .cwc-gallery__controller--previous {
    inset-inline-start: 8%;
  }
  .cwc-gallery__controller--next {
    inset-inline-end: 8%;
    text-align: end;
  }
  .cwc-gallery__caption {
    display: inline-block;
    color: white;
    font-size: 0.875rem;
  }
  .cwc-gallery__caption-container {
    display: flex;
    width: 100%;
    padding: 0.75rem;
    justify-content: space-between;
    box-sizing: border-box;
  }
  .cwc-gallery__cta {
    padding: 0 0.75rem 0.75rem;
    display: block;
    box-sizing: border-box;
  }
  .cwc-gallery__cta--center {
    text-align: center;
  }
  .cwc-gallery__cta--start {
    text-align: start;
  }
  .cwc-gallery__cta--end {
    text-align: end;
  }
  .cwc-gallery__footer {
    position: absolute;
    inset-block-end: 0;
    background: #333;
    width: 100%;
    box-sizing: border-box;
    background: rgba(0, 0, 0, .6);
  }
  .cwc-gallery__counter {
    display: inline-block;
    color: white;
    font-size: 0.875rem;
    direction: ltr;
  }
  .cwc-gallery__full-pic {
    width: 100%;
    object-fit: contain;
    max-height: 90vh;
    background-color: transparent;
    filter: drop-shadow(0 1px 3px rgba(0, 0, 0, .25));
    margin: auto;
  }
  .cwc-gallery__full-pic.animate-even {
    animation-name: change-even;
    animation-duration: 0.4s;
  }
  .cwc-gallery__full-pic.animate-odd {
    animation-name: change-odd;
    animation-duration: 0.4s;
  }
  .cwc-hidden {
    opacity: 0;
    pointer-events: none;
  }

  @media (max-width: 767px) {
    .cwc-gallery__modal {
      flex-wrap: wrap;
    }
    .cwc-gallery__controller {
      position: initial;
      margin: 1.5rem;
      width: 30%;
    }
    .cwc-gallery__full-pic {
      margin-top: 72px;
    }
  }
  @keyframes change-odd {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.2;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes change-even {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.2;
    }
    100% {
      opacity: 1;
    }
  }
  `;
    /**
     * The design version of the framework
     */

    this.designVersion = null;
    /**
     * Determines if content should be rendered in RTL mode
     */

    this.rtl = false;
    /**
     * Shows text label on the thumbnail
     */

    this.showLabel = true;
    /**
     * Translation for sepator in counter, equivalent of english 'of'
     */

    this.counterSeparator = 'of';
    /**
     * Render CTA in footer of image detail
     */

    this.cta = false;
    /**
     * Where to place CTA
     */

    this.ctaPosition = 'start';
    /**
     * Button variant of CTA
     */

    this.ctaVariant = 'regular';

    this.touchStart = e => {
      this.touchstartX = e.changedTouches[0].screenX;
    };

    this.touchEnd = e => {
      this.touchendX = e.changedTouches[0].screenX;
      this.handleGesure();
    }; // Controling with keyboard


    this.keyboardEvents = ev => {
      if (ev.key === 'Escape') {
        this.closeModal();
      } else if (ev.key === 'ArrowRight') {
        this.handleNext();
      } else if (ev.key === 'ArrowLeft') {
        this.handlePrevious();
      }
    };

    this.onSlotChange = () => {
      this.images = this.host.querySelectorAll('cwc-gallery-image');
    };

    this.cwcCtaClicked = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcCtaClicked", 7);
  }

  setVariant(newValue) {
    this.images.forEach(item => {
      item['showLabel'] = newValue;
    });
  }
  /**
   * Shows clicked image in modal
   */


  imageClick(event) {
    // passing image details
    this.activeImage.setAttribute('src', event.detail[0]);
    this.activeImage.setAttribute('alt', event.detail[1]);
    this.activeImageUrl = event.detail[0];
    this.caption.innerHTML = event.detail[1];
    this.activeImageIndex = event.detail[2];
    this.activeImageId = event.detail[3];
    this.modal.classList.remove('cwc-hidden'); // hiding control arrows when on start or end

    if (this.activeImageIndex + 1 === this.images.length) {
      this.nextControler.classList.add('cwc-hidden');
    } else if (this.activeImageIndex === 0) {
      this.previousControler.classList.add('cwc-hidden');
    } // listening for key events for closing or moving to another image


    window.addEventListener('keydown', this.keyboardEvents); // listening to swipes

    this.activeImage.addEventListener('touchstart', this.touchStart, false);
    this.activeImage.addEventListener('touchend', this.touchEnd, false);
  }
  /**
   * Changing images on swipe
   */


  handleGesure() {
    if (this.touchendX <= this.touchstartX) {
      this.handleNext();
    } else if (this.touchendX >= this.touchstartX) {
      this.handlePrevious();
    }
  }
  /**
   * Closing modal with image preview
   */


  closeModal() {
    var _this = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this.modal.classList.add('cwc-hidden');

      _this.nextControler.classList.remove('cwc-hidden');

      _this.previousControler.classList.remove('cwc-hidden');

      window.removeEventListener('keydown', _this.keyboardEvents);

      _this.activeImage.removeEventListener('touchstart', _this.touchStart);

      _this.activeImage.removeEventListener('touchend', _this.touchEnd);
    })();
  }

  handleNext() {
    if (this.rtl) {
      if (!(this.activeImageIndex === 0)) {
        this.imageChange(-1);
      }
    } else {
      if (!(this.activeImageIndex + 1 === this.images.length)) {
        this.imageChange(1);
      }
    }
  }

  handlePrevious() {
    if (this.rtl) {
      if (!(this.activeImageIndex + 1 === this.images.length)) {
        this.imageChange(1);
      }
    } else {
      if (!(this.activeImageIndex === 0)) {
        this.imageChange(-1);
      }
    }
  } // Assings index numbers to all images and pass showLabel property


  assingIndex() {
    const arr = Array.from(this.images);
    arr.forEach((item, index) => {
      item.setAttribute('index', `${index}`);
      item.setAttribute('show-label', `${this.showLabel}`);
    });
  } // Handles image change


  imageChange(change) {
    this.activeImage.classList.toggle('animate-even');
    this.activeImage.classList.toggle('animate-odd');
    this.activeImageIndex = this.activeImageIndex + change;
    setTimeout(() => {
      const url = this.images[this.activeImageIndex].getAttribute('src');
      this.activeImageUrl = url;
      this.activeImage.setAttribute('src', `${url}`);
      this.activeImage.setAttribute('alt', `${this.images[this.activeImageIndex].getAttribute('caption')}`);
      this.caption.innerHTML = this.images[this.activeImageIndex].getAttribute('caption');
      this.activeImageId = this.images[this.activeImageIndex].getAttribute('image-id');

      if (this.activeImageIndex + 1 === this.images.length) {
        this.nextControler.classList.add('cwc-hidden');
      } else if (this.activeImageIndex === 0) {
        this.previousControler.classList.add('cwc-hidden');
      } else {
        this.nextControler.classList.remove('cwc-hidden');
        this.previousControler.classList.remove('cwc-hidden');
      }
    }, 200);
  }

  ctaClicked() {
    this.cwcCtaClicked.emit([this.activeImageId, this.activeImageUrl]);
  }

  createGalleryStyles() {
    // check if it's already there
    let stylesElement = document.querySelector('#cwcGalleryStyles');

    if (!stylesElement) {
      stylesElement = document.createElement('style');
      (0,_helpers_bb43a8d9_js__WEBPACK_IMPORTED_MODULE_3__.s)(stylesElement, {
        type: 'text/css',
        id: 'cwcGalleryStyles'
      });
      stylesElement.appendChild(document.createTextNode(this.galleryCss));
      document.querySelector('head').appendChild(stylesElement);
    }
  }

  componentWillLoad() {
    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__.i)(this);
    this.images = this.host.querySelectorAll('cwc-gallery-image');
  }

  componentDidLoad() {
    this.images = this.host.querySelectorAll('cwc-gallery-image');
    this.assingIndex(); // append it to the body

    document.querySelector('body').appendChild(this.modal); // append DOM layer styles

    this.createGalleryStyles(); // add an event listener to check if there has been change in slot

    const slot = this.host.shadowRoot.querySelector('slot');
    slot.addEventListener('slotchange', this.onSlotChange);
  }

  disconnectedCallback() {
    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
    const slot = this.host.shadowRoot.querySelector('slot');

    if (slot) {
      slot.removeEventListener('slotchange', this.onSlotChange);
    }
  }

  render() {
    return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: `${this.designVersion}`
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "cwc-gallery__images"
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "cwc-gallery__modal cwc-hidden",
      ref: el => this.modal = el,
      dir: this.rtl ? 'rtl' : 'ltr'
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("figure", {
      class: "cwc-gallery__container"
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("img", {
      class: "cwc-gallery__full-pic animate-odd",
      ref: el => this.activeImage = el
    }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "cwc-gallery__footer"
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "cwc-gallery__caption-container"
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("figcaption", {
      class: "cwc-gallery__caption",
      ref: el => this.caption = el
    }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "cwc-gallery__counter"
    }, (this.rtl ? this.images.length : this.activeImageIndex + 1) + ' ' + this.counterSeparator + ' ' + (this.rtl ? this.activeImageIndex + 1 : this.images.length))), this.cta && (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-button", {
      designVersion: this.designVersion,
      class: `cwc-gallery__cta cwc-gallery__cta--${this.ctaPosition}`,
      leadingIcon: this.ctaLeadingIcon,
      variant: this.ctaVariant,
      onClick: () => this.ctaClicked()
    }, this.ctaLabel))), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-icon", {
      designVersion: this.designVersion,
      class: "cwc-gallery__close-button",
      name: "close",
      onClick: () => {
        this.closeModal();
      }
    }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-icon", {
      designVersion: this.designVersion,
      class: "cwc-gallery__controller cwc-gallery__controller--previous",
      ref: el => this.previousControler = el,
      name: this.rtl ? 'arrow-right-straight' : 'arrow-left-straight',
      onClick: () => {
        this.imageChange(-1);
      }
    }), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-icon", {
      designVersion: this.designVersion,
      class: "cwc-gallery__controller cwc-gallery__controller--next",
      ref: el => this.nextControler = el,
      name: this.rtl ? 'arrow-left-straight' : 'arrow-right-straight',
      onClick: () => {
        this.imageChange(1);
      }
    })));
  }

  get host() {
    return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "showLabel": ["setVariant"]
    };
  }

  static get style() {
    return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.cwc-gallery__images{display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));grid-gap:1rem}";
  }

};


/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-gallery_entry_js.js.map