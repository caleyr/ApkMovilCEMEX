"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-ld-input_entry_js"],{

/***/ 66525:
/*!******************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-ld-input.entry.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_ld_input": () => (/* binding */ InputText)
/* harmony export */ });
/* harmony import */ var D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _index_eb5f436d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-eb5f436d.js */ 12361);
/* harmony import */ var _types_5a9ba492_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types-5a9ba492.js */ 28754);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);
/* harmony import */ var _utils_b8f7c37d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils-b8f7c37d.js */ 78467);






const InputText = class {
  constructor(hostRef) {
    (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.didBlurAfterEdit = false;
    this.inputId = `cwc-input-${inputIds++}`;
    this.hasFocus = false;
    this.passwordShown = false;
    /**
     * The design version of the framework
     */

    this.designVersion = null;
    /**
     * The type of control to display. The default type is text.
     */

    this.type = 'text';
    /**
     * Input name
     */

    this.name = this.inputId;
    /**
     * Input value
     */

    this.value = null;
    /**
     * Specify whether component should render from right to left
     */

    this.rtl = false;
    /**
     * When set to true the element is disabled
     */

    this.disabled = false;
    /**
     * When set to true the element is required and the label is decorated with an asterisk (*)
     */

    this.required = false;
    /**
     * Status of the form field.
     */

    this.status = 'regular';
    /**
     * This property sets the appereance variation of the input.
     */

    this.variant = 'regular';
    /**
     * When set to true the element is not writeable.
     */

    this.readonly = false;
    /**
     * When set to true the component doesn't render form-group wrapper
     */

    this.unwrap = false;
    /**
     * When set, then debounce time will be applied after user writes into the input
     * (in miliseconds)
     */

    this.debounceTime = 0;
    /**
     * When set to true, loader will appear inside the input
     */

    this.loading = false;
    /**
     * Indicates whether the value of the control can be automatically completed by the browser.
     */

    this.autocomplete = 'off';
    /**
     * Whether auto correction should be enabled when the user is entering/editing the text value.
     */

    this.autocorrect = 'off';
    /**
     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.
     */

    this.autofocus = false;
    /**
     * If `true`, the element will have its spelling and grammar checked.
     */

    this.spellcheck = false;
    /**
     * Specify the tabindex of the component
     */

    this.nativeElementTabIndex = '0';
    /**
     * Specify if the password input can be switched to view the contents
     */

    this.allowPasswordShow = false;
    /**
     * Specify if input label should render for mobile
     */

    this.mobile = false;

    this.clearTextInput = ev => {
      if (!this.readonly && !this.disabled && ev) {
        ev.preventDefault();
        ev.stopPropagation();
      }

      this.value = '';
      this.cwcChange.emit(this.value);
      /**
       * This is needed for clearOnEdit
       * Otherwise the value will not be cleared
       * if user is inside the input
       */

      if (this.nativeInput) {
        this.nativeInput.value = '';
      }
    };

    this.onInput = ev => {
      const input = ev.target;

      if (input) {
        if (this.debounceTime > 0) {
          const debouncedFunction = this.debounce(() => {
            this.value = input.value || '';
            this.cwcChange.emit(this.value);
          }, this.debounceTime);
          debouncedFunction();
        } else {
          this.value = input.value || '';
          this.cwcChange.emit(this.value);
        }
      }

      this.cwcInput.emit(ev);
    };

    this.onBlur = () => {
      this.hasFocus = false;
      this.focusChanged();

      if (this.mobile) {
        if (this.empty) {
          this.labelEl.classList.remove('float', 'float--focused');

          if (this.leadingIcon) {
            this.labelEl.classList.add('cwc-form-control__label--mobile-icon');
          }
        } else {
          this.labelEl.classList.remove('float--focused');
        }
      }

      this.cwcBlur.emit();
    };

    this.onFocus = () => {
      this.hasFocus = true;
      this.focusChanged();

      if (this.mobile) {
        if (this.empty) {
          this.labelEl.classList.add('float', 'float--focused');

          if (this.leadingIcon) {
            this.labelEl.classList.remove('cwc-form-control__label--mobile-icon');
          }
        } else {
          this.labelEl.classList.add('float--focused');
        }
      }

      this.cwcFocus.emit();
    };

    this.onKeydown = () => {
      if (this.clearOnEdit) {
        // Did the input value change after it was blurred and edited?
        if (this.didBlurAfterEdit && this.hasValue()) {
          // Clear the input
          this.clearTextInput();
        } // Reset the flag


        this.didBlurAfterEdit = false;
      }
    };

    this.valueCheck = () => {
      this.empty = this.value === null || this.value === '' ? true : false;
    };

    this.adjustMobileLabel = () => {
      this.labelEl.classList.remove('ellipsis');
      const inputWidth = this.nativeInput.getBoundingClientRect().width - 24;
      const labelWidth = this.labelEl.getBoundingClientRect().width;

      if (labelWidth > inputWidth) {
        this.labelEl.classList.add('ellipsis');
      } else {
        this.labelEl.classList.remove('ellipsis');
      }
    };

    this.cwcInput = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcInput", 7);
    this.cwcChange = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcChange", 7);
    this.cwcBlur = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcBlur", 7);
    this.cwcFocus = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "cwcFocus", 7);
  }
  /**
   * Check if input is empty
   */


  checkIfInputHasContent() {
    if (this.mobile) {
      setTimeout(() => {
        this.valueCheck();

        if (this.empty && !this.hasFocus) {
          this.labelEl.classList.remove('float', 'float--focused');

          if (this.leadingIcon) {
            this.labelEl.classList.add('cwc-form-control__label--mobile-icon');
          }
        } else {
          this.labelEl.classList.add('float');
        }
      }, 50);
    }
  }
  /**
   * When label is changed, check if it isn't too long and should fall back into ellipsis
   */


  checkLabelsWidth() {
    if (this.mobile) {
      setTimeout(() => {
        this.adjustMobileLabel();
      }, 50);
    }
  }
  /**
   * When input gets focused, check lenght of label and if too long fall back to ellipsis
   */


  checkFloatedLabelsWidth() {
    if (this.mobile) {
      setTimeout(() => {
        this.adjustMobileLabel();
      }, 50);
    }
  }
  /**
   * Sets focus on the specified `cwc-input`. Use this method instead of the global
   * `input.focus()`.
   */


  setFocus() {
    var _this = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this.nativeInput) {
        _this.nativeInput.focus();
      }
    })();
  }
  /**
   * Returns the native `<input>` element used under the hood.
   */


  getNativeElement() {
    var _this2 = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this2.nativeInput;
    })();
  }
  /**
   * Set component value and emit cwcChange event. This is handy for emulating user input in automated testing tools.
   * @param value New value
   */


  writeValue(value) {
    var _this3 = this;

    return (0,D_Documentos_Documentos_DocumentosPersonales_Cemex_appcemex_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this3.value = value;

      _this3.cwcChange.emit(_this3.value);
    })();
  }
  /**
   * Debounce serves as timeout function on input
   * @param func is function that should be called after the time passes
   * @param delay is the debounce time on miliseconds
   */


  debounce(func, delay) {
    return (...args) => {
      const doLater = () => {
        this.debounceTimer = undefined;
        func.apply(this, args);
      };

      if (this.debounceTimer !== undefined) {
        clearTimeout(this.debounceTimer);
      }

      this.debounceTimer = setTimeout(doLater, delay);
    };
  }

  focusChanged() {
    // If clearOnEdit is enabled and the input blurred but has a value, set a flag
    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {
      this.didBlurAfterEdit = true;
    }
  }

  renderIconStyles(leadingIcon, trailingIcon) {
    if (leadingIcon || trailingIcon) {
      let styles = '';
      styles += leadingIcon ? `.cwc-form-control--icon-lead::before{content:"\\${(0,_utils_b8f7c37d_js__WEBPACK_IMPORTED_MODULE_5__.g)(leadingIcon)}"}` : '';
      styles += trailingIcon ? `.cwc-form-control--icon-trail::after{content:"\\${(0,_utils_b8f7c37d_js__WEBPACK_IMPORTED_MODULE_5__.g)(trailingIcon)}"}` : '';
      return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("style", {
        type: "text/css"
      }, styles);
    }

    return null;
  }

  hasValue() {
    return this.getValue().length > 0;
  }

  getValue() {
    return this.value || '';
  }

  componentWillLoad() {
    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_4__.i)(this); // By default, password inputs clear after focus when they have content

    this.clearOnEdit = this.clearOnEdit === undefined && this.type === 'password' ? true : this.clearOnEdit;

    if (this.mobile) {
      this.valueCheck();
    }
  }

  componentDidLoad() {
    if (this.mobile) {
      setTimeout(() => {
        if (!this.empty) {
          this.labelEl.classList.add('float');
          this.labelEl.classList.remove('cwc-form-control__label--mobile-icon');
        }

        this.adjustMobileLabel();
      }, 50);
    }
  }

  componentDidRender() {
    if (this.variant === 'trailing-button' && this.designVersion === 'v2') {
      setTimeout(() => {
        const buttonWidth = this.buttonEl.getBoundingClientRect().width;
        this.nativeInput.style.paddingInlineEnd = buttonWidth + 16 + 'px';
      }, 50);
    }
  }

  disconnectedCallback() {
    (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_4__.d)(this);
  }

  render() {
    const inputComponentV2 = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", null, this.trailingButton ? null : this.renderIconStyles(this.leadingIcon, this.trailingIcon), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: `${this.status} ` + (this.disabled ? ' disabled' : '') + (this.variant ? ' ' + this.variant : '') + (this.leadingIcon && !this.trailingButton ? ' cwc-form-control--icon-lead' : '') + (this.loading ? ' cwc-form-control--loading' : '') + (this.trailingIcon && !this.trailingButton ? ' cwc-form-control--icon-trail' : '')
    }, this.unwrap || this.variant === 'trailing-button' ? null : (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("label", {
      htmlFor: this.inputId,
      class: 'cwc-form-control__label--mobile float',
      ref: el => this.labelEl = el
    }, this.label, this.label && this.required && (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      class: "required"
    }, " *")), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("input", {
      ref: input => this.nativeInput = input,
      type: this.type === 'password' && this.allowPasswordShow ? this.passwordShown ? 'text' : 'password' : this.type,
      class: "cwc-form-control",
      id: this.inputId,
      name: this.name,
      value: this.value,
      placeholder: this.placeholder,
      disabled: this.disabled,
      required: this.required,
      autoComplete: this.autocomplete,
      autoCorrect: this.autocorrect,
      autoFocus: this.autofocus,
      minLength: this.minlength,
      maxLength: this.maxlength,
      readOnly: this.readonly,
      spellCheck: this.spellcheck,
      onInput: this.onInput,
      onBlur: this.onBlur,
      onFocus: this.onFocus,
      onKeyDown: this.onKeydown,
      "aria-invalid": this.status === 'error',
      "aria-label": this.label,
      "aria-placeholder": this.placeholder,
      "aria-describedby": this.status === 'error' ? `${this.inputId}-error` : null,
      tabindex: this.nativeElementTabIndex
    }), this.loading ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-loader", {
      class: 'cwc-form-control__loader' + (this.trailingIcon ? ' cwc-form-control__loader--trailing-icon' : ''),
      size: "small"
    }) : null, this.variant === 'trailing-button' ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-button", {
      size: this.trailingButton === 'icon' || this.trailingButton === 'link' ? 'medium' : 'small',
      class: 'cwc-form-control__button ' + this.trailingButton,
      variant: this.trailingButton,
      trailingIcon: this.trailingIcon,
      leadingIcon: this.leadingIcon,
      ref: el => this.buttonEl = el,
      disabled: this.disabled,
      designVersion: this.designVersion
    }, this.label) : null, this.type === 'password' && this.allowPasswordShow ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-icon", {
      class: "cwc-form-control__show-password",
      iconCode: "e992",
      color: this.passwordShown ? 'bright-blue' : 'disabled-grey',
      size: "24px",
      onClick: () => {
        this.passwordShown = !this.passwordShown;
      }
    }) : null));
    const inputComponent = (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", null, this.renderIconStyles(this.leadingIcon, this.trailingIcon), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: `${this.status} ` + (this.leadingIcon ? ' cwc-form-control--icon-lead' : '') + (this.loading ? ' cwc-form-control--loading' : '') + (this.trailingIcon ? ' cwc-form-control--icon-trail' : '') + (this.disabled ? ' disabled' : '') + (this.variant ? ' ' + this.variant : '')
    }, this.mobile ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("label", {
      htmlFor: this.inputId,
      class: 'cwc-form-control__label--mobile' + (this.leadingIcon ? ' cwc-form-control__label--mobile-icon' : ''),
      ref: el => this.labelEl = el
    }, this.label, this.label && this.required && (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      class: "required"
    }, " *")) : '', (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("input", {
      ref: input => this.nativeInput = input,
      type: this.type === 'password' && this.allowPasswordShow ? this.passwordShown ? 'text' : 'password' : this.type,
      class: "cwc-form-control",
      id: this.inputId,
      name: this.name,
      value: this.value,
      placeholder: this.mobile ? null : this.placeholder,
      disabled: this.disabled,
      required: this.required,
      autoComplete: this.autocomplete,
      autoCorrect: this.autocorrect,
      autoFocus: this.autofocus,
      minLength: this.minlength,
      maxLength: this.maxlength,
      readOnly: this.readonly,
      spellCheck: this.spellcheck,
      onInput: this.onInput,
      onBlur: this.onBlur,
      onFocus: this.onFocus,
      onKeyDown: this.onKeydown,
      "aria-invalid": this.status === 'error',
      "aria-label": this.label,
      "aria-placeholder": this.placeholder,
      "aria-describedby": this.status === 'error' ? `${this.inputId}-error` : null,
      tabindex: this.nativeElementTabIndex
    }), this.loading ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-loader", {
      class: 'cwc-form-control__loader' + (this.trailingIcon ? ' cwc-form-control__loader--trailing-icon' : ''),
      size: "small"
    }) : null, this.type === 'password' && this.allowPasswordShow ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-icon", {
      class: "cwc-form-control__show-password",
      iconCode: "e992",
      color: this.passwordShown ? 'bright-blue' : 'disabled-grey',
      size: "24px",
      onClick: () => {
        this.passwordShown = !this.passwordShown;
      }
    }) : null));
    return this.unwrap ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: this.designVersion
    }, this.designVersion === 'v2' ? inputComponentV2 : inputComponent) : (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)(_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: this.designVersion
    }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.h)("cwc-form-group", {
      label: this.label,
      required: this.required,
      status: this.status,
      statusMessage: this.statusMessage,
      style: {
        width: '100%'
      },
      for: this.inputId,
      statusElementId: `${this.inputId}-error`,
      mobile: this.designVersion === 'v2' ? true : this.mobile,
      designVersion: this.designVersion
    }, this.designVersion === 'v2' ? inputComponentV2 : inputComponent));
  }

  get host() {
    return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "value": ["checkIfInputHasContent"],
      "label": ["checkLabelsWidth"],
      "hasFocus": ["checkFloatedLabelsWidth"]
    };
  }

  static get style() {
    return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host(.v2) input.cwc-form-control,cwc-ld-input.v2 input.cwc-form-control{border-radius:8px}:host(.v2) .cwc-form-control__label--mobile,cwc-ld-input.v2 .cwc-form-control__label--mobile{color:var(--cwc-input-label-mobile-color,var(--cwc-color-ui-primary-darkest,#001b3a))}:host(.v2) .error label,cwc-ld-input.v2 .error label{color:var(--cwc-input-error-label-color,var(--cwc-color-status-error,#ee3d42))}:host(.v2) .success label,cwc-ld-input.v2 .success label{color:var(--cwc-input-success-label-color,var(--cwc-color-status-success,#7ac943))}:host(.v2) .warning label,cwc-ld-input.v2 .warning label{color:var(--cwc-input-warning-label-color,var(--cwc-color-status-warning,#fbb03b))}:host(.v2) .trailing-button input.cwc-form-control,cwc-ld-input.v2 .trailing-button input.cwc-form-control{border-radius:20px}[dir=ltr] :host(.v2) .trailing-button .cwc-form-control__button,[dir=ltr] cwc-ld-input.v2 .trailing-button .cwc-form-control__button{right:4px}[dir=rtl] :host(.v2) .trailing-button .cwc-form-control__button,[dir=rtl] cwc-ld-input.v2 .trailing-button .cwc-form-control__button{left:4px}:host(.v2) .trailing-button .cwc-form-control__button,cwc-ld-input.v2 .trailing-button .cwc-form-control__button{position:absolute;inset-inline-end:4px;top:4px}[dir=ltr] :host(.v2) .trailing-button .cwc-form-control__button.icon,[dir=ltr] :host(.v2) .trailing-button .cwc-form-control__button.link,[dir=ltr] cwc-ld-input.v2 .trailing-button .cwc-form-control__button.icon,[dir=ltr] cwc-ld-input.v2 .trailing-button .cwc-form-control__button.link{right:12px}[dir=rtl] :host(.v2) .trailing-button .cwc-form-control__button.icon,[dir=rtl] :host(.v2) .trailing-button .cwc-form-control__button.link,[dir=rtl] cwc-ld-input.v2 .trailing-button .cwc-form-control__button.icon,[dir=rtl] cwc-ld-input.v2 .trailing-button .cwc-form-control__button.link{left:12px}:host(.v2) .trailing-button .cwc-form-control__button.icon,:host(.v2) .trailing-button .cwc-form-control__button.link,cwc-ld-input.v2 .trailing-button .cwc-form-control__button.icon,cwc-ld-input.v2 .trailing-button .cwc-form-control__button.link{inset-inline-end:12px;top:8px}:host,cwc-ld-input{display:inline-block}.disabled .cwc-form-control__label--mobile{background:var(--cwc-input-label-mobile-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}.disabled .cwc-form-control__label--mobile.float{color:var(--cwc-input-label-mobile-disabled-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-grayscale-light,#d6d6d6)),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-light,#d6d6d6),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.error input.cwc-form-control{border:.0625rem solid var(--cwc-input-error-border-color,var(--cwc-color-status-error,#ee3d42));background-color:var(--cwc-input-error-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error input.cwc-form-control:active,.error input.cwc-form-control:focus{border-color:var(--cwc-input-error-focus-border-color,var(--cwc-color-status-error-dark,#b71c1c));background-color:var(--cwc-input-error-focus-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error label{background-color:inherit}.error label.float{color:var(--cwc-input-error-label-color,var(--cwc-color-status-error,#ee3d42));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.error label.float--focused{color:var(--cwc-input-error-label-focused-color,var(--cwc-color-status-error-dark,#b71c1c))}.success input.cwc-form-control{border:.0625rem solid var(--cwc-input-success-border-color,var(--cwc-color-status-success,#7ac943));background-color:var(--cwc-input-success-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success input.cwc-form-control:active,.success input.cwc-form-control:focus{border-color:var(--cwc-input-success-focus-color,var(--cwc-color-status-success-dark,#1b5e20));background-color:var(--cwc-input-success-focus-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success label{background-color:inherit}.success label.float{color:var(--cwc-input-success-label-color,var(--cwc-color-status-success,#7ac943));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.success label.float--focused{color:var(--cwc-input-success-label-focused-color,var(--cwc-color-status-success-dark,#1b5e20))}.warning input.cwc-form-control{border:.0625rem solid var(--cwc-input-warning-border-color,var(--cwc-color-status-warning,#fbb03b));background-color:var(--cwc-input-warning-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning input.cwc-form-control:active,.warning input.cwc-form-control:focus{border-color:var(--cwc-input-warning-focus-border-color,var(--cwc-color-status-warning-dark,#ff8f00));background-color:var(--cwc-input-warning-focus-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning label{background-color:inherit}.warning label.float{color:var(--cwc-input-warning-label-color,var(--cwc-color-status-warning,#fbb03b));background:-webkit-gradient(linear,left bottom,left top,from(var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05))),color-stop(40%,var(--cwc-color-grayscale-white,#fff)),color-stop(60%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)),var(--cwc-color-grayscale-white,#fff) 40%,var(--cwc-color-grayscale-white,#fff) 60%,hsla(0,0%,100%,0))}.warning label.float--focused{color:var(--cwc-input-warning-label-focused-color,var(--cwc-color-status-warning-dark,#ff8f00))}.select-box input.cwc-form-control{cursor:pointer}.select-box input.cwc-form-control:-moz-read-only{pointer-events:all}.select-box input.cwc-form-control:read-only{pointer-events:all}.select-box.cwc-form-control--icon-trail:after{font-size:1rem}[dir=ltr] .single-line input.cwc-form-control{border-left-style:none}[dir=ltr] .single-line input.cwc-form-control,[dir=rtl] .single-line input.cwc-form-control{border-right-style:none}[dir=rtl] .single-line input.cwc-form-control{border-left-style:none}.single-line input.cwc-form-control{border-radius:0!important;border-top-style:none;border-inline-start-style:none;border-inline-end-style:none}.cwc-form-control{display:block;width:100%}.cwc-form-control--loading{position:relative}[dir=ltr] .cwc-form-control--loading .cwc-form-control{padding-right:2.75rem}[dir=rtl] .cwc-form-control--loading .cwc-form-control{padding-left:2.75rem}.cwc-form-control--loading .cwc-form-control{-webkit-padding-end:2.75rem;padding-inline-end:2.75rem}.cwc-form-control--loading .cwc-form-control__label--mobile:not(.float){width:calc(100% - 3.375rem)}.cwc-form-control--icon-lead,.cwc-form-control--icon-trail{width:100%;height:auto;position:relative}.cwc-form-control--icon-lead:after,.cwc-form-control--icon-lead:before,.cwc-form-control--icon-trail:after,.cwc-form-control--icon-trail:before{font-family:dls-icons;position:absolute;line-height:1.5rem;font-size:1rem;top:.5rem;color:var(--cwc-input-icon-color,var(--cwc-color-elements-input-icon,#3fa9f5));pointer-events:none}.cwc-form-control--icon-lead.disabled:after,.cwc-form-control--icon-lead.disabled:before,.cwc-form-control--icon-trail.disabled:after,.cwc-form-control--icon-trail.disabled:before{color:var(--cwc-input-icon-disabled-color,var(--cwc-color-elements-input-border,#adaebb))}.cwc-form-control--icon-lead.error:after,.cwc-form-control--icon-lead.error:before,.cwc-form-control--icon-trail.error:after,.cwc-form-control--icon-trail.error:before{color:var(--cwc-input-icon-error-color,var(--cwc-color-status-error,#ee3d42))}.cwc-form-control--icon-lead.warning:after,.cwc-form-control--icon-lead.warning:before,.cwc-form-control--icon-trail.warning:after,.cwc-form-control--icon-trail.warning:before{color:var(--cwc-input-icon-warning-color,var(--cwc-color-status-warning,#fbb03b))}.cwc-form-control--icon-lead.success:after,.cwc-form-control--icon-lead.success:before,.cwc-form-control--icon-trail.success:after,.cwc-form-control--icon-trail.success:before{color:var(--cwc-input-icon-success-color,var(--cwc-color-status-success,#7ac943))}.cwc-form-control--icon-lead .cwc-form-control__show-password,.cwc-form-control--icon-trail .cwc-form-control__show-password{top:4px}[dir=ltr] .cwc-form-control--icon-trail input.cwc-form-control{padding-right:2.5rem}[dir=rtl] .cwc-form-control--icon-trail input.cwc-form-control{padding-left:2.5rem}.cwc-form-control--icon-trail input.cwc-form-control{-webkit-padding-end:2.5rem;padding-inline-end:2.5rem}[dir=ltr] .cwc-form-control--icon-trail:after{right:1rem}[dir=rtl] .cwc-form-control--icon-trail:after{left:1rem}.cwc-form-control--icon-trail:after{position:absolute;inset-inline-end:1rem}[dir=ltr] .cwc-form-control--icon-trail .cwc-form-control__loader{right:2.5rem}[dir=rtl] .cwc-form-control--icon-trail .cwc-form-control__loader{left:2.5rem}.cwc-form-control--icon-trail .cwc-form-control__loader{inset-inline-end:2.5rem}[dir=ltr] .cwc-form-control--icon-trail .cwc-form-control__show-password{right:36px}[dir=rtl] .cwc-form-control--icon-trail .cwc-form-control__show-password{left:36px}.cwc-form-control--icon-trail .cwc-form-control__show-password{inset-inline-end:36px}[dir=ltr] .cwc-form-control--icon-lead input.cwc-form-control{padding-left:2.5rem}[dir=rtl] .cwc-form-control--icon-lead input.cwc-form-control{padding-right:2.5rem}.cwc-form-control--icon-lead input.cwc-form-control{-webkit-padding-start:2.5rem;padding-inline-start:2.5rem}[dir=ltr] .cwc-form-control--icon-lead:before{padding-left:1rem}[dir=rtl] .cwc-form-control--icon-lead:before{padding-right:1rem}.cwc-form-control--icon-lead:before{-webkit-padding-start:1rem;padding-inline-start:1rem}[dir=ltr] .cwc-form-control__loader{right:1rem}[dir=rtl] .cwc-form-control__loader{left:1rem}.cwc-form-control__loader{position:absolute;inset-inline-end:1rem;top:.5rem}[dir=ltr] .cwc-form-control__loader--trailing-icon{right:2.5rem}[dir=rtl] .cwc-form-control__loader--trailing-icon{left:2.5rem}.cwc-form-control__loader--trailing-icon{inset-inline-end:2.5rem}[dir=ltr] .cwc-form-control__show-password{right:8px}[dir=rtl] .cwc-form-control__show-password{left:8px}.cwc-form-control__show-password{position:absolute;bottom:24px;inset-inline-end:8px;cursor:pointer}.cwc-form-control:-moz-read-only{overflow:hidden;text-overflow:ellipsis}.cwc-form-control:read-only{overflow:hidden;text-overflow:ellipsis}[dir=ltr] .cwc-form-control__label--mobile{left:16px}[dir=rtl] .cwc-form-control__label--mobile{right:16px}.cwc-form-control__label--mobile{position:absolute;top:12px;inset-inline-start:16px;color:var(--cwc-input-label-mobile-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem;line-height:1rem;background:var(--cwc-input-label-mobile-background-color,var(--cwc-color-grayscale-white,#fff));border-radius:3px;-webkit-transition:all .15s;transition:all .15s;-webkit-transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,.2,1);pointer-events:none;z-index:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[dir=ltr] .cwc-form-control__label--mobile-icon{left:40px}[dir=rtl] .cwc-form-control__label--mobile-icon{right:40px}.cwc-form-control__label--mobile-icon{inset-inline-start:40px}.cwc-form-control__label--mobile.float{font-size:.75rem;line-height:.75rem;top:-6px;-webkit-transition:all .15s;transition:all .15s;-webkit-transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,.2,1);padding:0 2px;color:var(--cwc-input-label-mobile-float-color,var(--cwc-color-grayscale-medium,#666));background:-webkit-gradient(linear,left bottom,left top,color-stop(50%,var(--cwc-color-grayscale-white,#fff)),to(hsla(0,0%,100%,0)));background:linear-gradient(0deg,var(--cwc-color-grayscale-white,#fff) 50%,hsla(0,0%,100%,0));width:auto}.cwc-form-control__label--mobile.float--focused{color:var(--cwc-input-label-mobile-float-focused-color,var(--cwc-color-links,#3fa9f5))}.cwc-form-control__label--mobile .required{color:var(--cwc-input-label-mobile-required-color,var(--cwc-color-status-error,#ee3d42))}.cwc-form-control__label--mobile.ellipsis{width:calc(100% - 1.375rem)}input.cwc-form-control{font-size:1rem;line-height:1rem;border-radius:3px;height:2.5rem;padding:0 1rem;border:.0625rem solid var(--cwc-input-form-control-border,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-input-form-control-background-color,var(--cwc-color-grayscale-white,#fff));font-family:inherit;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;color:var(--cwc-input-color,var(--cwc-color-grayscale-black,#000))}input.cwc-form-control:active,input.cwc-form-control:focus{outline:0 none;border-color:var(--cwc-input-form-control-focus-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-input-form-control-focus-backgorund-color,var(--cwc-color-grayscale-white,#fff))}input.cwc-form-control:disabled{background-color:var(--cwc-input-form-control-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}input.cwc-form-control:disabled:active,input.cwc-form-control:disabled:focus{border-color:var(--cwc-input-form-control-disabled-focus-border-color,var(--cwc-color-elements-input-border,#adaebb))}input.cwc-form-control:-moz-read-only{pointer-events:none}input.cwc-form-control:read-only{pointer-events:none}input.cwc-form-control::-webkit-input-placeholder{color:var(--cwc-input-form-control-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem;line-height:normal!important}input.cwc-form-control::-moz-placeholder{color:var(--cwc-input-form-control-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}input.cwc-form-control:-ms-input-placeholder{color:var(--cwc-input-form-control-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}input.cwc-form-control:-moz-placeholder{color:var(--cwc-input-form-control-placeholder-color,var(--cwc-color-grayscale-medium,#666));font-size:1rem}input.cwc-form-control:-webkit-autofill:first-line{font-size:1rem;font-family:inherit}.chromeless input.cwc-form-control{border:none;background-color:transparent;height:1.25rem}\@media (hover:hover){.regular:not(.disabled):hover>.float{color:var(--cwc-input-regular-hover-color,var(--cwc-color-links,#3fa9f5))}.error:not(.disabled) input.cwc-form-control:hover{border-color:var(--cwc-input-error-hover-border-color,var(--cwc-color-status-error-dark,#b71c1c));background-color:var(--cwc-input-error-hover-background-color,var(--cwc-color-status-error-alpha-five,rgba(238,61,66,.05)))}.error:not(.disabled):hover>.float{color:var(--cwc-input-error-hover-color,var(--cwc-color-status-error-dark,#b71c1c))}.warning:not(.disabled) input.cwc-form-control:hover{border-color:var(--cwc-input-warning-hover-border-color,var(--cwc-color-status-warning-dark,#ff8f00));background-color:var(--cwc-input-warning-hover-background-color,var(--cwc-color-status-warning-alpha-five,rgba(251,176,59,.05)))}.warning:not(.disabled):hover>.float{color:var(--cwc-input-warning-hover-color,var(--cwc-color-status-warning-dark,#ff8f00))}.success:not(.disabled) input.cwc-form-control:hover{border-color:var(--cwc-input-success-hover-border-color,var(--cwc-color-status-success-dark,#1b5e20));background-color:var(--cwc-input-success-hover-background-color,var(--cwc-color-status-success-alpha-five,rgba(122,201,67,.05)))}.success:not(.disabled):hover>.float{color:var(--cwc-input-success-hover-color,var(--cwc-color-status-success-dark,#1b5e20))}input.cwc-form-control:hover{outline:0 none;border-color:var(--cwc-input-form-control-hover-border-color,var(--cwc-color-links,#3fa9f5));background-color:var(--cwc-input-form-control-hover-background-color,var(--cwc-color-grayscale-white,#fff))}input.cwc-form-control:disabled:hover{border-color:var(--cwc-input-form-control-disabled-hover-border-color,var(--cwc-color-elements-input-border,#adaebb));background-color:var(--cwc-input-form-control-disabled-hover-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}input.cwc-form-control:-moz-read-only{cursor:default;pointer-events:all}input.cwc-form-control:read-only{cursor:default;pointer-events:all}.chromeless input.cwc-form-control:hover{border:none;background-color:transparent}}";
  }

};
let inputIds = 0;


/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-ld-input_entry_js.js.map