"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_cmx-web-components_core_dist_esm_cwc-status-indicator_entry_js"],{

/***/ 27345:
/*!********************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/commonComponentFeatures-b771e888.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ destroyBasics),
/* harmony export */   "i": () => (/* binding */ initBasics)
/* harmony export */ });
function InitializeDirectionDetection(hostElement) {
    // the function that sets the dir in the shadow dom
    function executeDir(dir) {
        const shadowKids = hostElement.shadowRoot.childNodes;
        shadowKids.forEach(element => {
            element.setAttribute('dir', dir);
        });
    }
    function intervalHandler() {
        const actualDir = hostElement.dataset.dir;
        const dir = window.getComputedStyle(hostElement).getPropertyValue('direction');
        if (dir !== actualDir) {
            hostElement.dataset.dir = dir;
            hostElement.shadowRoot && executeDir(dir);
            if (dir === 'rtl') {
                return hostElement.setAttribute('rtl', 'true');
            }
            return hostElement.removeAttribute('rtl');
        }
    }
    hostElement['rtlInterval'] = setInterval(intervalHandler, 750);
}
function DestroyDirectionDetection(hostElement) {
    if (hostElement && hostElement['rtlInterval']) {
        clearInterval(hostElement['rtlInterval']);
    }
}

function setDesignVersion() {
    const frameworkVersion = getComputedStyle(document.documentElement).getPropertyValue('--cwc-version');
    return frameworkVersion ? frameworkVersion : 'v1';
}

function initBasics(componentClass) {
    !componentClass.designVersion && (componentClass.designVersion = setDesignVersion());
    if (!componentClass.rtl) {
        componentClass.host && InitializeDirectionDetection(componentClass.host);
    }
}
function destroyBasics(componentClass) {
    DestroyDirectionDetection(componentClass.host);
}




/***/ }),

/***/ 28530:
/*!**************************************************************************************!*\
  !*** ./node_modules/@cmx-web-components/core/dist/esm/cwc-status-indicator.entry.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cwc_status_indicator": () => (/* binding */ StatusIndicator)
/* harmony export */ });
/* harmony import */ var _core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core-cf426fab.js */ 98545);
/* harmony import */ var _commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commonComponentFeatures-b771e888.js */ 27345);



const StatusIndicator = class {
    constructor(hostRef) {
        (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /**
         * The design version of the framework
         */
        this.designVersion = null;
        /**
         * Type of status indicator
         */
        this.variant = 'info';
        /**
         * Type of status indicator
         */
        this.size = 'regular';
        /**
         * If status indicator is an outline or full
         */
        this.outline = false;
        /**
         * Specify whether component should render from right to left
         */
        this.rtl = false;
    }
    componentWillLoad() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
    }
    componentDidLoad() {
        const nodes = this.host.shadowRoot.querySelector('slot').assignedNodes();
        if (nodes && nodes[0] && !this.ariaLabel) {
            this.ariaLabel = nodes[0].textContent;
        }
    }
    disconnectedCallback() {
        (0,_commonComponentFeatures_b771e888_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    }
    render() {
        return ((0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `cwc-status-indicator cwc-status-indicator--size-${this.size} ${this.designVersion}` }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: 'cwc-status-indicator__flag cwc-status-indicator__flag--' + this.variant, "aria-label": this.ariaLabel }, this.outline ? (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "cwc-status-indicator__flag-outline" }) : null), (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "cwc-status-indicator__label" }, (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null))));
    }
    get host() { return (0,_core_cf426fab_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get style() { return "*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}[dir=ltr] .cwc-status-indicator{margin-right:.5rem}[dir=rtl] .cwc-status-indicator{margin-left:.5rem}.cwc-status-indicator{display:-ms-flexbox;display:flex;-webkit-margin-end:.5rem;margin-inline-end:.5rem;-ms-flex-align:start;align-items:flex-start}[dir=ltr] .cwc-status-indicator__flag{margin-right:.5rem}[dir=rtl] .cwc-status-indicator__flag{margin-left:.5rem}.cwc-status-indicator__flag{width:24px;height:16px;border-radius:2px;-webkit-margin-end:.5rem;margin-inline-end:.5rem;-ms-flex:0 0 auto;flex:0 0 auto;position:relative;top:0}.cwc-status-indicator__flag-outline{width:calc(100% - 6px);height:calc(100% - 6px);margin:3px;background-color:var(--cwc-status-indicator-flag-outline-background-color,var(--cwc-color-grayscale-white,#fff));border-radius:1px}.cwc-status-indicator__flag--alert{background:var(--cwc-status-indicator-flag-alert-background-color,var(--cwc-color-status-error,#ee3d42))}.cwc-status-indicator__flag--success{background:var(--cwc-status-indicator-flag-success-background-color,var(--cwc-color-status-success,#7ac943))}.cwc-status-indicator__flag--warning{background:var(--cwc-status-indicator-flag-warning-background-color,var(--cwc-color-status-warning,#fbb03b))}.cwc-status-indicator__flag--disabled{background:var(--cwc-status-indicator-flag-disabled-background-color,var(--cwc-color-grayscale-light,#d6d6d6))}.cwc-status-indicator__flag--info{background:var(--cwc-status-indicator-flag-info-background-color,var(--cwc-color-status-info,#3fa9f5))}.cwc-status-indicator__label{font-size:.875rem;color:var(--cwc-status-indicator-label-color,var(--cwc-color-grayscale-dark,#333))}.cwc-status-indicator--size-small .cwc-status-indicator__flag{width:14px;height:10px;top:1px}.cwc-status-indicator--size-small .cwc-status-indicator__label{font-size:.75rem}.cwc-status-indicator--size-extra-small .cwc-status-indicator__flag{width:10px;height:10px}.cwc-status-indicator--size-extra-small .cwc-status-indicator__label{font-size:.625rem}"; }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_cmx-web-components_core_dist_esm_cwc-status-indicator_entry_js.js.map